var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.178,1,3.03]],["body/controllers/AppController.html",[0,2.016,1,5.185,2,1.674,3,0.168,4,0.149,5,0.113,6,5.16,7,0.481,8,1.893,9,6.921,10,1.148,11,0.012,12,0.628,13,5.903,14,1.572,15,0.819,16,0.272,17,0.88,18,4.873,19,5.16,20,0.168,21,0.272,22,2.605,23,2.417,24,1.524,25,5.903,26,0.01,27,0.01]],["title/modules/AppModule.html",[28,0.946,29,3.03]],["body/modules/AppModule.html",[1,4.314,2,1.435,3,0.101,4,0.089,5,0.067,11,0.012,16,0.318,17,0.526,18,4.547,19,3.086,20,0.101,21,0.162,24,0.911,26,0.007,27,0.007,28,1.347,29,6.2,30,1.445,31,1.5,32,1.62,33,1.62,34,1.5,35,2.714,36,1.62,37,3.086,38,3.086,39,3.086,40,4.84,41,4.84,42,4.84,43,4.84,44,4.84,45,4.84,46,4.84,47,4.84,48,4.84,49,4.547,50,4.84,51,4.547,52,2.322,53,1.62,54,1.62,55,3.53,56,2.714,57,3.53,58,1.759,59,0.97,60,4.423,61,4.127,62,2.131,63,3.086,64,3.53,65,3.53,66,1.759,67,1.257,68,1.759,69,0.883,70,3.53,71,3.53,72,3.53,73,3.53,74,3.53,75,3.53,76,3.53,77,3.53,78,3.53,79,3.53,80,2.793,81,4.423,82,3.53,83,2.793,84,5.06,85,2.4,86,3.53,87,3.53,88,3.53,89,3.086,90,3.086,91,3.086,92,2.793,93,3.53,94,2.793,95,1.445,96,3.53,97,3.53,98,3.53,99,5.06,100,3.53,101,2.793,102,3.53,103,3.53,104,1.445,105,3.53,106,3.086]],["title/injectables/AppService.html",[18,2.654,107,0.834]],["body/injectables/AppService.html",[3,0.173,4,0.154,5,0.116,7,0.496,8,1.928,9,6.991,11,0.012,12,0.647,14,1.621,15,0.834,16,0.232,17,0.907,18,4.624,20,0.173,21,0.28,24,1.571,26,0.01,27,0.01,107,1.453,108,2.241,109,5.319,110,6.084,111,6.084,112,6.084]],["title/controllers/AuthController.html",[0,1.178,113,3.03]],["body/controllers/AuthController.html",[0,0.956,2,0.956,3,0.096,4,0.085,5,0.064,7,0.275,8,1.304,10,1.306,11,0.012,12,0.714,14,1.789,16,0.297,17,0.502,20,0.096,21,0.155,24,1.734,26,0.007,27,0.007,81,2.947,83,2.668,89,2.947,90,2.947,91,2.947,92,2.668,95,2.36,104,2.36,113,3.571,114,2.947,115,1.611,116,2.947,117,4.895,118,4.895,119,5.763,120,5.763,121,4.895,122,3.371,123,2.663,124,2.804,125,6.125,126,3.371,127,3.371,128,2.03,129,0.547,130,0.685,131,1.966,132,2.141,133,1.68,134,3.371,135,5.016,136,3.371,137,3.371,138,3.371,139,4.895,140,3.371,141,5.529,142,3.371,143,4.895,144,3.371,145,3.371,146,3.371,147,5.111,148,3.371,149,3.371,150,3.371,151,3.371,152,3.623,153,3.371,154,1.933,155,3.371,156,4.895,157,1.756,158,1.756,159,6.324,160,3.371,161,2.459,162,2.668,163,3.371,164,3.479,165,2.668,166,3.623,167,1.611,168,1.488,169,2.872,170,2.459,171,2.955,172,2.154,173,2.292,174,1.931,175,1.488,176,3.143,177,2.668,178,4.895,179,4.895,180,1.68,181,1.38,182,3.371,183,3.371,184,1.38,185,2.645,186,3.371,187,3.371,188,1.611,189,3.371,190,3.371,191,3.371,192,5.763,193,3.371,194,3.371,195,3.371,196,3.371,197,3.371,198,3.001,199,3.371,200,3.371,201,1.528,202,2.668,203,1.547,204,3.371,205,3.371,206,3.371,207,3.371,208,3.371,209,2.459,210,3.371,211,3.371,212,3.371,213,3.371]],["title/modules/AuthModule.html",[28,0.946,40,2.825]],["body/modules/AuthModule.html",[2,1.613,3,0.119,4,0.106,5,0.08,11,0.012,16,0.317,17,0.622,20,0.119,21,0.192,26,0.008,27,0.008,28,1.474,30,1.708,31,1.773,32,1.914,33,1.914,34,1.773,35,2.97,36,1.914,40,5.67,49,4.795,51,4.795,52,2.61,53,1.914,54,1.914,56,2.97,58,2.079,59,1.147,60,4.972,61,4.44,62,2.518,63,3.647,94,3.302,95,1.708,101,3.302,113,4.721,129,0.463,132,1.183,164,4.531,165,3.302,169,3.74,170,3.043,214,3.647,215,3.647,216,4.172,217,5.104,218,5.104,219,4.172,220,5.688,221,2.665,222,4.172,223,3.634,224,3.302,225,4.172,226,4.172,227,3.302,228,4.172,229,4.972,230,4.172,231,1.39,232,3.433,233,2.665,234,2.173,235,3.302,236,2.246,237,2.837,238,4.172,239,3.647,240,3.647,241,4.172,242,3.647,243,4.172,244,3.647]],["title/injectables/AuthService.html",[107,0.834,164,2.507]],["body/injectables/AuthService.html",[3,0.077,4,0.068,5,0.051,7,0.219,8,1.102,11,0.012,12,0.685,14,1.506,15,0.873,16,0.265,17,0.401,20,0.077,21,0.124,24,1.663,26,0.006,27,0.006,61,4.287,62,1.625,95,3.104,104,2.063,107,0.831,108,0.991,123,2.083,128,1.845,129,0.617,130,0.597,131,1.787,132,2.093,133,3.041,135,4.806,154,1.634,164,2.497,169,3.211,174,1.542,175,1.188,176,3.66,177,2.13,184,1.694,185,2.595,188,1.286,198,1.402,201,2.415,202,3.274,203,3.259,209,3.018,227,2.13,229,3.617,231,2.146,239,3.617,242,2.353,244,2.353,245,2.353,246,0.779,247,5.039,248,5.039,249,4.405,250,4.137,251,4.137,252,2.692,253,6.71,254,2.692,255,4.137,256,2.692,257,4.137,258,2.692,259,4.137,260,2.692,261,4.137,262,4.405,263,2.692,264,1.625,265,3.617,266,1.402,267,2.692,268,3.018,269,2.692,270,2.692,271,4.137,272,2.692,273,2.692,274,3.274,275,4.137,276,1.952,277,4.137,278,4.137,279,2.692,280,2.818,281,3.617,282,2.13,283,1.771,284,3.355,285,3.355,286,2.843,287,4.405,288,4.137,289,4.944,290,4.137,291,3.617,292,6.443,293,4.137,294,1.026,295,4.137,296,2.353,297,2.353,298,4.137,299,4.137,300,4.137,301,5.039,302,2.692,303,4.137,304,5.039,305,4.137,306,2.692,307,2.692,308,2.692,309,4.137,310,2.692,311,4.137,312,2.643,313,3.018,314,3.274,315,3.274,316,2.353,317,2.353,318,2.692,319,2.692,320,2.353,321,1.402,322,2.692,323,2.692,324,1.542]],["title/controllers/CompaniesController.html",[0,1.178,325,3.03]],["body/controllers/CompaniesController.html",[0,1.018,2,1.018,3,0.102,4,0.091,5,0.069,7,0.292,8,1.364,10,1.338,11,0.012,12,0.732,14,1.833,15,0.915,16,0.281,17,0.535,20,0.102,21,0.165,22,1.583,23,1.469,24,1.777,26,0.007,27,0.007,67,1.277,115,1.714,123,2.863,124,2.932,128,2.08,129,0.561,130,0.673,131,2.015,132,2.318,157,2.666,158,2.666,166,3.419,167,1.714,168,1.583,175,1.583,180,1.788,181,1.469,198,4.049,294,2.276,325,3.734,326,3.136,327,3.136,328,1.407,329,2.444,330,2.096,331,2.096,332,3.136,333,4.572,334,2.292,335,2.071,336,3.588,337,1.583,338,1.906,339,2.872,340,2.872,341,2.839,342,3.271,343,3.588,344,2.259,345,1.469,346,2.839,347,3.139,348,3.588,349,1.788,350,2.44,351,3.588,352,1.868,353,5.121,354,2.292,355,3.588,356,1.957,357,2.055,358,2.175,359,3.813,360,3.136,361,1.524,362,4.051,363,1.469,364,3.588,365,3.588,366,2.166,367,2.44,368,3.588,369,2.166,370,2.166,371,3.588,372,2.055,373,2.055,374,3.588,375,2.166,376,2.166,377,2.292,378,3.588,379,2.055,380,2.44,381,2.055,382,3.588]],["title/modules/CompaniesModule.html",[28,0.946,41,2.825]],["body/modules/CompaniesModule.html",[2,1.922,3,0.155,4,0.138,5,0.104,11,0.012,16,0.303,17,0.814,20,0.155,21,0.251,26,0.01,27,0.01,28,1.679,30,2.235,31,2.319,32,2.505,33,2.505,34,2.319,35,3.382,36,2.505,41,5.492,52,3.11,53,2.505,54,2.505,56,2.505,58,2.72,59,1.5,129,0.445,234,2.843,236,2.156,325,5.376,335,1.454,359,5.16,360,4.772,383,4.772,384,4.772,385,5.459,386,5.459,387,4.608,388,4.772,389,4.32]],["title/injectables/CompaniesService.html",[107,0.834,359,2.654]],["body/injectables/CompaniesService.html",[3,0.081,4,0.072,5,0.055,7,0.232,8,1.151,11,0.012,12,0.701,14,1.668,15,0.874,16,0.276,17,0.425,20,0.081,21,0.131,24,1.767,26,0.006,27,0.006,59,0.783,66,1.421,67,1.858,68,1.421,69,1.306,95,3.105,107,0.868,108,1.05,123,2.711,128,1.992,129,0.574,130,0.644,131,1.929,132,2.048,133,2.903,175,1.258,184,1.77,185,1.308,201,2.056,203,2.873,276,1.882,283,1.435,286,1.907,294,1.648,321,3.034,324,2.99,328,1.188,329,1.77,330,1.77,331,1.77,332,3.778,333,4.21,335,1.39,337,1.907,338,1.823,339,3.112,340,2.303,344,2.571,345,1.77,347,2.704,349,2.154,352,2.251,353,4.795,358,1.211,359,2.761,361,1.211,362,3.42,363,1.167,388,2.492,390,2.492,391,2.85,392,3.177,393,2.85,394,4.322,395,2.85,396,2.85,397,2.85,398,2.85,399,2.85,400,2.256,401,1.555,402,1.721,403,1.633,404,1.633,405,2.85,406,2.85,407,1.211,408,3.151,409,1.721,410,4.359,411,1.721,412,1.721,413,1.721,414,1.721,415,1.721,416,2.357,417,2.609,418,1.633,419,2.609,420,2.85,421,2.609,422,1.721,423,1.836,424,3.516,425,3.516,426,3.516,427,3.337,428,1.836,429,2.609,430,2.85,431,1.721,432,1.721,433,1.721,434,1.721,435,1.721,436,1.721,437,1.721,438,3.151,439,1.721,440,1.721,441,1.721,442,2.609,443,2.609,444,1.721,445,2.609,446,1.721,447,2.609,448,2.609,449,2.85,450,4.322,451,1.211,452,1.258,453,2.85]],["title/classes/Company.html",[21,0.191,335,1.106]],["body/classes/Company.html",[3,0.118,4,0.105,5,0.079,7,0.337,10,1.557,11,0.012,12,0.851,15,0.931,16,0.246,20,0.184,21,0.191,26,0.008,27,0.008,59,1.138,69,1.613,104,1.695,129,0.525,130,0.817,201,1.292,236,2.235,246,1.065,276,1.772,283,1.772,286,2.844,335,1.507,387,2.816,400,3.276,407,2.739,423,2.739,428,2.739,451,2.739,452,2.844,454,1.004,455,3.02,456,2.295,457,5.101,458,2.739,459,5.066,460,4.14,461,3.31,462,4.14,463,3.692,464,3.891,465,4.52,466,4.14,467,4.14,468,4.14,469,2.947,470,4.14,471,4.14,472,4.14,473,4.14,474,4.14,475,2.499,476,3.241,477,2.499,478,2.295,479,3.62]],["title/classes/Company-1.html",[21,0.16,335,0.924,416,1.891]],["body/classes/Company-1.html",[3,0.126,4,0.112,5,0.085,7,0.361,10,1.297,11,0.012,12,0.709,15,0.924,16,0.255,20,0.126,21,0.328,26,0.008,27,0.008,69,1.481,129,0.605,130,0.725,246,1.115,276,1.833,335,1.977,338,1.577,454,1.073,456,2.107,458,2.834,461,3.402,469,2.305,478,2.107,480,5.635,481,3.01,482,3,483,4.427,484,4.427,485,4.427,486,2.206,487,3.083,488,3.083,489,3.083,490,1.524,491,2.536,492,2.614,493,2.791,494,2.886,495,2.829,496,3.573,497,3.573,498,3.782,499,3.782,500,3.01,501,3.01,502,3.01,503,2.828,504,3.229]],["title/classes/Company-2.html",[21,0.16,335,0.924,505,3.032]],["body/classes/Company-2.html",[3,0.126,4,0.112,5,0.084,7,0.359,10,1.294,11,0.012,12,0.708,15,0.924,16,0.283,20,0.126,21,0.327,26,0.008,27,0.008,69,1.477,129,0.604,130,0.724,246,1.112,276,1.829,328,1.212,335,1.974,338,1.572,454,1.069,456,2.102,458,2.828,461,3.397,469,2.296,478,2.102,481,2.998,482,2.976,486,2.197,487,3.074,488,3.074,489,3.074,490,1.518,491,2.525,492,2.552,493,2.726,494,2.819,495,2.821,496,2.661,497,3.564,498,3.772,499,3.772,500,2.998,501,2.998,502,2.998,503,2.817,506,5.626,507,4.409,508,4.409,509,4.409,510,2.296,511,2.197,512,2.197,513,3.216,514,2.817,515,1.945,516,3.854,517,3.854]],["title/classes/Company-3.html",[21,0.16,92,2.744,335,0.924]],["body/classes/Company-3.html",[3,0.111,4,0.099,5,0.075,7,0.318,10,1.058,11,0.012,12,0.665,15,0.952,16,0.258,20,0.178,21,0.339,23,2.227,26,0.008,27,0.008,69,1.361,129,0.615,130,0.695,152,2.24,171,2.36,172,4.32,181,1.601,231,1.812,246,1.024,264,3.283,276,1.719,283,2.022,284,3.521,285,3.521,286,2.984,335,1.893,338,1.449,454,0.948,456,1.936,458,2.657,478,2.227,482,2.997,486,1.949,487,2.833,488,2.833,489,2.833,490,1.346,492,2.638,493,2.799,494,2.894,518,2.36,519,3.91,520,3.91,521,3.91,522,4.562,523,3.475,524,4.562,525,2.036,526,3.516,527,3.699,528,2.498,529,2.852]],["title/classes/Company-4.html",[21,0.16,335,0.924,530,3.468]],["body/classes/Company-4.html",[3,0.13,4,0.116,5,0.087,7,0.372,10,1.175,11,0.012,12,0.72,15,0.919,16,0.286,20,0.13,21,0.332,26,0.009,27,0.009,69,1.512,129,0.611,130,0.733,173,3.105,231,2.013,246,1.138,276,1.862,283,1.981,284,3.147,285,3.147,286,2.667,328,1.255,335,1.997,338,1.216,454,1.107,458,2.878,478,2.411,482,2.945,486,2.275,487,3.147,488,3.147,489,3.147,490,1.572,492,2.533,493,2.652,494,2.743,510,2.378,511,2.275,512,2.275,515,2.015,518,2.756,523,3.861,525,2.378,531,5.705,532,4.566,533,4.566,534,4.566,535,2.917,536,3.991]],["title/classes/CreateCompanyDto.html",[21,0.191,333,2.654]],["body/classes/CreateCompanyDto.html",[3,0.144,4,0.128,5,0.096,7,0.411,10,1.456,11,0.012,12,0.796,15,0.938,16,0.193,20,0.144,21,0.297,26,0.009,27,0.009,129,0.63,130,0.732,246,1.214,286,3.415,333,4.118,454,1.223,456,2.755,458,3.288,482,2.755,490,1.736,492,2.414,493,2.805,494,2.9,537,6.765,538,3.99,539,3.181,540,4.407,541,4.407,542,4.407,543,5.042]],["title/classes/CreateFileDto.html",[21,0.191,544,2.825]],["body/classes/CreateFileDto.html",[3,0.186,4,0.165,5,0.125,11,0.011,20,0.186,21,0.3,26,0.011,27,0.011,454,1.582,544,5.127,545,5.701,546,5.161]],["title/classes/CreateJobDto.html",[21,0.191,491,2.379]],["body/classes/CreateJobDto.html",[3,0.101,4,0.09,5,0.068,7,0.29,10,1.527,11,0.012,12,0.835,15,0.914,16,0.227,20,0.101,21,0.298,26,0.007,27,0.007,69,1.273,129,0.581,130,0.782,246,0.958,276,0.978,335,1.957,338,1.727,454,0.863,456,2.442,458,1.512,461,3.591,469,2.65,478,1.267,480,6.279,481,2.42,482,2.87,486,1.773,487,2.65,488,2.65,489,2.65,490,1.225,491,2.915,492,2.502,493,2.859,494,2.957,495,3.278,496,4.141,497,4.141,498,4.383,499,4.383,500,3.461,501,4.04,502,3.461,503,3.796,504,3.742,539,3.297,547,2.596,548,3.111,549,3.111,550,3.111,551,3.558,552,3.111,553,3.111,554,3.558,555,3.111,556,3.111,557,3.558,558,3.111]],["title/classes/CreatePermissionDto.html",[21,0.191,559,2.654]],["body/classes/CreatePermissionDto.html",[3,0.148,4,0.131,5,0.099,7,0.422,10,1.471,11,0.012,12,0.804,15,0.944,16,0.198,20,0.148,21,0.302,26,0.009,27,0.009,28,1.64,129,0.683,130,0.74,246,1.236,454,1.258,482,1.846,490,1.785,493,2.605,494,2.917,539,3.214,559,4.192,560,6.823,561,4.104,562,4.346,563,4.599,564,4.533,565,4.533,566,4.533,567,5.186,568,7.566]],["title/classes/CreateResumeDto.html",[21,0.191,569,2.654]],["body/classes/CreateResumeDto.html",[3,0.15,4,0.134,5,0.101,7,0.43,10,1.411,11,0.012,12,0.771,15,0.764,16,0.253,20,0.15,21,0.305,26,0.009,27,0.009,69,1.659,130,0.709,246,1.249,454,1.279,478,2.71,482,2.71,490,1.816,492,2.339,493,2.757,494,2.85,539,3.082,569,4.237,570,6.655,571,4.173,572,6.207,573,6.207,574,6.207,575,5.274,576,5.274,577,5.274]],["title/classes/CreateRoleDto.html",[21,0.191,578,2.654]],["body/classes/CreateRoleDto.html",[3,0.143,4,0.127,5,0.096,7,0.408,10,1.452,11,0.012,12,0.794,15,0.86,16,0.245,20,0.143,21,0.295,26,0.009,27,0.009,69,1.606,129,0.679,130,0.73,246,1.208,280,3.529,454,1.214,456,2.521,469,3.342,478,2.284,482,2.749,490,1.724,492,2.408,493,2.801,494,2.896,504,3.863,539,3.173,578,4.1,579,6.75,580,3.962,581,4.377,582,4.377,583,5.007,584,4.377]],["title/classes/CreateSubscriberDto.html",[21,0.191,585,2.654]],["body/classes/CreateSubscriberDto.html",[3,0.151,4,0.135,5,0.102,7,0.433,10,1.416,11,0.012,12,0.774,15,0.924,16,0.203,20,0.151,21,0.307,26,0.009,27,0.009,129,0.64,130,0.711,246,1.255,283,2.161,454,1.288,482,2.717,490,1.829,492,2.347,493,2.762,494,2.856,495,3.756,539,3.093,585,4.256,586,6.672,587,4.204,588,4.644,589,5.312,590,4.644]],["title/classes/CreateUserDto.html",[21,0.191,525,2.163]],["body/classes/CreateUserDto.html",[3,0.097,4,0.086,5,0.065,7,0.278,10,1.444,11,0.012,12,0.79,15,0.948,16,0.243,20,0.165,21,0.324,23,2.02,26,0.007,27,0.007,69,1.234,129,0.605,130,0.751,152,1.952,171,2.057,172,4.836,181,1.395,231,2.247,246,0.929,264,2.978,276,0.937,283,2.113,284,3.777,285,3.777,286,3.201,335,1.932,338,1.545,454,0.826,456,1.756,458,1.448,478,2.064,482,2.93,486,1.698,487,2.569,488,2.569,489,2.569,490,1.173,492,2.599,493,2.845,494,2.942,518,2.057,522,4.23,523,3.152,524,4.23,525,2.569,526,3.617,527,3.355,528,2.177,529,2.486,539,3.082,547,2.486,591,3.408,592,3.408,593,3.408,594,2.979,595,3.408,596,3.408,597,3.408,598,3.408,599,3.408]],["title/controllers/DatabasesController.html",[0,1.178,600,3.03]],["body/controllers/DatabasesController.html",[0,1.726,2,1.726,3,0.173,4,0.154,5,0.116,11,0.012,16,0.295,17,0.907,20,0.173,21,0.28,22,2.685,23,2.491,26,0.01,27,0.01,115,2.907,180,3.032,181,2.491,600,5.28,601,5.319,602,6.084,603,4.937,604,5.319,605,6.084,606,6.084]],["title/modules/DatabasesModule.html",[28,0.946,42,2.825]],["body/modules/DatabasesModule.html",[2,1.812,3,0.142,4,0.126,5,0.095,11,0.012,16,0.31,17,0.741,20,0.142,21,0.229,26,0.009,27,0.009,28,1.608,30,2.036,31,2.113,32,2.282,33,2.282,34,2.113,35,3.239,36,2.282,42,5.525,52,2.932,53,2.282,54,2.282,56,2.282,58,2.478,59,1.367,129,0.575,132,1.41,169,3.93,170,3.627,223,4.082,224,3.935,231,1.656,232,3.856,233,3.177,234,2.59,235,3.935,236,2.788,237,3.381,600,5.149,603,5.038,604,4.347,607,4.347,608,4.347,609,4.973,610,4.973,611,2.113,612,4.082,613,3.627,614,3.627]],["title/injectables/DatabasesService.html",[107,0.834,603,2.654]],["body/injectables/DatabasesService.html",[3,0.091,4,0.081,5,0.09,7,0.261,8,1.257,11,0.012,12,0.595,14,0.854,16,0.285,17,0.478,20,0.091,21,0.148,23,2.293,26,0.007,27,0.007,59,0.882,61,4.547,62,1.936,66,1.598,67,1.142,68,1.598,69,0.802,95,2.293,104,1.933,107,0.948,108,1.181,128,0.969,129,0.595,130,0.313,131,0.939,132,1.339,154,1.864,169,3.078,170,2.339,184,1.933,185,3.351,188,1.533,201,2.221,203,3.421,224,2.538,231,2.293,233,2.049,246,0.889,266,1.67,274,2.538,280,3.547,283,1.539,284,2.916,285,2.916,286,2.471,296,2.804,313,2.339,328,1.539,392,4.134,401,1.749,456,1.68,504,2.574,526,2.676,528,2.049,603,3.578,611,1.363,613,2.339,615,2.804,616,6.176,617,7.118,618,2.804,619,4.896,620,4.432,621,5.6,622,4.72,623,4.126,624,3.207,625,4.72,626,4.085,627,2.538,628,4.085,629,3.735,630,4.72,631,2.339,632,2.339,633,2.181,634,2.181,635,2.804,636,2.804,637,2.538,638,3.207,639,3.207,640,3.207,641,5.6,642,3.207,643,5.6,644,3.207,645,5.6,646,3.207,647,5.022,648,3.207,649,3.207,650,3.207,651,2.339,652,3.207,653,3.207,654,3.735,655,2.049,656,3.207,657,4.126,658,3.207,659,3.207,660,3.207,661,3.207,662,3.207,663,3.207,664,3.207,665,3.207,666,3.207,667,3.207,668,3.207,669,3.207,670,3.735,671,3.207,672,5.6,673,5.6,674,5.6,675,4.72,676,5.6,677,5.6,678,4.72,679,3.207,680,3.207,681,2.804,682,3.207,683,3.207,684,3.207,685,2.804,686,3.207,687,2.804,688,3.207,689,2.339]],["title/classes/File.html",[5,0.079,21,0.191]],["body/classes/File.html",[3,0.186,4,0.166,5,0.152,11,0.011,20,0.186,21,0.301,26,0.011,27,0.011,454,1.586,690,5.718]],["title/controllers/FilesController.html",[0,1.178,691,3.03]],["body/controllers/FilesController.html",[0,1.146,2,1.146,3,0.115,4,0.102,5,0.138,7,0.329,8,1.482,10,1.398,11,0.012,12,0.765,14,1.915,15,0.907,16,0.291,17,0.602,20,0.115,21,0.186,22,1.783,23,1.654,24,1.856,26,0.008,27,0.008,67,1.438,115,1.931,128,2.073,129,0.559,130,0.67,131,2.008,157,2.898,158,2.104,167,1.931,168,1.783,174,2.314,180,2.014,181,1.654,198,2.104,294,2.122,329,2.808,330,2.278,331,2.278,345,1.654,347,2.936,349,2.014,352,2.104,356,2.204,357,2.314,363,1.654,372,3.187,373,2.314,375,3.359,379,3.187,381,2.314,691,4.059,692,3.532,693,5.036,694,6.364,695,4.041,696,4.041,697,4.041,698,5.276,699,4.041,700,4.041,701,6.364,702,4.041,703,4.041,704,4.642,705,4.041,706,4.041,707,5.564,708,4.041,709,4.041,710,3.532,711,4.066,712,3.532,713,3.197,714,4.041,715,2.947,716,3.197,717,4.041,718,4.041,719,4.041,720,4.041,721,4.041,722,4.041,723,4.041,724,4.041,725,4.041,726,4.041,727,4.041,728,4.041,729,4.041]],["title/modules/FilesModule.html",[28,0.946,43,2.825]],["body/modules/FilesModule.html",[2,1.928,3,0.156,4,0.139,5,0.105,11,0.012,16,0.303,17,0.818,20,0.156,21,0.253,26,0.01,27,0.01,28,1.683,30,2.246,31,2.331,32,2.518,33,2.518,34,2.331,35,3.389,36,2.518,43,5.499,52,3.119,53,2.518,54,2.518,56,2.518,106,4.796,174,3.143,691,5.388,711,5.166,712,4.796,715,4.002,730,4.796,731,4.796,732,5.486,733,5.486,734,5.486,735,4.958,736,5.486,737,5.486]],["title/injectables/FilesService.html",[107,0.834,711,2.654]],["body/injectables/FilesService.html",[3,0.13,4,0.116,5,0.143,7,0.373,8,1.612,11,0.012,12,0.798,14,2.094,15,0.864,16,0.259,17,0.682,20,0.13,21,0.211,24,1.937,26,0.009,27,0.009,107,1.215,108,1.685,128,2.181,129,0.588,130,0.705,131,2.112,154,1.807,294,2.307,328,1.663,329,2.954,330,2.478,331,2.478,338,2.152,345,2.478,347,3.045,349,3.016,352,3.151,361,1.944,363,1.873,544,5.103,693,3.621,698,5.347,711,3.866,713,4.789,738,4,739,6.051,740,4.575,741,4.575,742,4.575,743,4.575,744,4.575,745,7.504,746,4.575,747,4.575,748,4.575]],["title/controllers/HealthController.html",[0,1.178,749,3.03]],["body/controllers/HealthController.html",[0,1.605,2,1.605,3,0.161,4,0.143,5,0.108,7,0.461,8,1.845,10,1.1,11,0.012,12,0.601,14,1.507,16,0.286,17,0.843,20,0.161,21,0.26,24,1.46,26,0.01,27,0.01,115,2.703,166,3.968,168,2.496,184,2.316,185,3.179,749,5.053,750,4.946,751,6.927,752,6.822,753,5.657,754,5.657,755,6.927,756,6.927,757,6.927,758,4.477,759,5.657,760,5.657,761,5.657,762,5.657]],["title/modules/HealthModule.html",[28,0.946,44,2.825]],["body/modules/HealthModule.html",[2,2.06,3,0.174,4,0.155,5,0.117,11,0.012,16,0.296,17,0.912,20,0.174,21,0.282,26,0.01,27,0.01,28,1.654,30,2.505,44,4.939,56,2.808,749,5.65,758,4.842,763,6.118,764,6.118,765,7.263]],["title/classes/HttpExceptionFilter.html",[21,0.191,704,3.03]],["body/classes/HttpExceptionFilter.html",[3,0.149,4,0.133,5,0.126,7,0.426,8,1.758,11,0.012,12,0.557,14,1.395,16,0.252,17,0.78,20,0.149,21,0.241,26,0.009,27,0.009,128,1.582,129,0.426,130,0.512,131,1.533,135,3.985,147,4.816,154,2.068,174,2.999,201,2.37,320,6.321,321,2.727,454,1.27,492,1.688,634,4.489,704,4.816,716,5.224,766,4.577,767,7.231,768,6.602,769,6.637,770,6.321,771,7.593,772,5.236,773,5.236,774,4.577,775,5.236,776,4.577,777,5.236,778,5.236,779,5.236,780,4.489,781,5.236,782,5.236,783,4.143,784,5.236,785,5.236,786,3.56,787,5.236,788,5.236,789,6.602,790,5.236]],["title/interfaces/IUser.html",[123,1.53,791,2.654]],["body/interfaces/IUser.html",[3,0.155,4,0.138,5,0.104,7,0.444,11,0.012,15,0.987,20,0.155,26,0.01,27,0.01,28,1.24,123,2.492,129,0.657,130,0.815,231,2.565,246,1.274,276,2.218,280,3.837,283,2.116,463,4.411,562,3.287,791,3.479,792,4.309,793,4.76]],["title/classes/Job.html",[21,0.191,794,1.985]],["body/classes/Job.html",[3,0.099,4,0.088,5,0.066,7,0.283,10,1.59,11,0.012,12,0.869,15,0.931,16,0.191,20,0.167,21,0.16,26,0.007,27,0.007,59,0.955,69,1.251,104,1.422,129,0.522,130,0.823,201,1.084,236,1.976,246,0.942,276,1.763,283,1.611,335,1.561,338,1.708,407,2.49,423,2.49,428,2.49,451,2.49,452,2.587,454,0.842,456,2.087,458,1.476,459,5.132,461,3.689,463,3.673,464,3.871,465,4.507,469,2.605,475,2.097,476,2.865,477,2.097,478,2.283,495,2.801,496,3.538,497,3.538,498,3.745,499,3.745,501,3.986,503,3.745,504,3.197,794,2.39,795,2.534,796,3.538,797,3.473,798,3.473,799,3.473,800,3.473,801,3.473,802,3.473,803,3.473,804,3.473,805,3.473,806,3.473,807,3.473,808,3.473,809,3.473,810,3.473,811,3.473,812,3.473,813,3.473,814,2.534,815,2.219,816,3.036]],["title/controllers/JobsController.html",[0,1.178,817,3.03]],["body/controllers/JobsController.html",[0,1.024,2,1.024,3,0.103,4,0.091,5,0.069,7,0.294,8,1.37,10,1.342,11,0.012,12,0.734,14,1.838,15,0.916,16,0.282,17,0.538,20,0.103,21,0.166,22,1.594,23,1.479,24,1.781,26,0.007,27,0.007,67,1.286,115,1.726,123,2.868,124,2.946,128,2.085,129,0.562,130,0.674,131,2.02,132,2.32,157,2.679,158,2.679,166,3.432,167,1.726,168,1.594,175,1.594,180,1.8,181,1.479,198,4.055,294,2.284,328,1.414,329,2.453,330,2.106,331,2.106,334,2.307,337,1.594,338,1.91,339,2.881,340,2.881,341,2.858,342,3.286,344,2.27,345,1.479,346,2.858,347,2.979,349,1.8,350,2.456,352,1.881,354,2.307,356,1.97,357,2.069,358,2.185,361,1.534,363,1.479,366,2.18,367,2.456,369,2.18,370,2.18,372,2.069,373,2.069,375,2.18,376,2.18,377,2.307,379,2.069,380,2.456,381,2.069,491,4.108,513,3.752,514,4.819,794,3.119,817,3.752,818,3.157,819,5.383,820,3.157,821,3.612,822,3.612,823,3.612,824,3.612,825,3.612,826,3.827,827,3.157,828,3.612,829,3.612,830,3.612,831,3.612,832,3.612,833,3.612,834,3.612]],["title/modules/JobsModule.html",[28,0.946,45,2.825]],["body/modules/JobsModule.html",[2,1.928,3,0.156,4,0.139,5,0.105,11,0.012,16,0.303,17,0.818,20,0.156,21,0.253,26,0.01,27,0.01,28,1.683,30,2.246,31,2.331,32,2.518,33,2.518,34,2.331,35,3.389,36,2.518,45,5.499,52,3.119,53,2.518,54,2.518,56,2.518,58,2.734,59,1.508,129,0.447,234,2.857,236,2.167,794,2.621,815,4.343,817,5.388,826,5.166,827,4.796,835,4.796,836,4.796,837,5.486,838,5.486,839,4.796,840,4.002]],["title/injectables/JobsService.html",[107,0.834,826,2.654]],["body/injectables/JobsService.html",[3,0.075,4,0.067,5,0.05,7,0.214,8,1.081,11,0.012,12,0.678,14,1.322,15,0.791,16,0.269,17,0.392,20,0.075,21,0.121,24,1.774,26,0.006,27,0.006,59,0.722,66,1.309,67,1.766,68,1.309,69,1.242,95,2.813,107,0.815,108,0.967,123,2.35,128,1.687,129,0.56,130,0.546,131,1.634,132,1.712,133,2.023,175,1.159,184,1.662,185,1.205,188,1.94,201,2.201,203,2.769,246,0.764,266,2.114,276,1.889,283,1.659,294,1.892,321,3.323,324,2.842,328,1.116,329,1.662,330,1.662,331,2.032,335,1.487,337,1.791,338,1.83,339,3.032,340,2.19,344,2.463,345,1.662,347,2.627,358,1.116,361,1.116,363,1.076,392,3.045,401,1.433,402,1.586,403,1.505,404,1.505,407,1.116,408,2.995,409,1.586,410,4.603,411,1.586,412,1.586,413,1.586,414,1.586,415,1.586,416,2.214,417,2.451,418,1.505,419,2.451,421,2.451,422,1.586,423,1.725,424,3.851,425,3.851,426,3.851,427,3.655,428,2.108,429,2.451,431,1.586,432,1.586,433,1.586,434,1.586,435,1.586,436,1.586,437,1.586,438,2.995,439,1.586,440,1.586,441,1.586,442,2.451,443,2.451,444,1.586,445,2.451,446,1.586,447,2.995,448,2.995,451,1.116,452,1.159,456,1.445,491,3.655,495,1.94,496,2.451,497,3.37,498,2.594,499,2.594,503,2.594,504,2.214,513,2.961,514,3.567,526,1.255,655,1.678,794,2.667,814,1.916,820,3.549,826,2.594,839,2.296,841,2.296,842,2.627,843,2.627,844,3.549,845,2.627,846,2.627,847,2.627,848,2.627,849,2.627,850,2.296,851,2.627,852,2.627,853,2.627,854,2.627,855,2.627,856,2.627,857,2.627,858,1.786,859,2.627,860,4.06,861,4.06,862,2.627,863,2.079,864,2.079,865,2.079,866,1.916,867,2.079,868,1.916]],["title/injectables/JwtAuthGuard.html",[107,0.834,869,3.287]],["body/injectables/JwtAuthGuard.html",[3,0.182,4,0.087,5,0.135,7,0.28,8,1.323,11,0.012,12,0.62,14,1.323,15,0.396,16,0.259,17,0.513,20,0.098,21,0.158,22,1.518,24,1.505,26,0.007,27,0.007,85,2.34,104,2.034,107,0.997,108,1.267,128,1.762,129,0.475,130,0.57,131,1.707,132,2.063,147,4.939,154,1.962,168,1.518,174,1.971,184,1.409,201,2.202,221,2.198,280,3.182,289,4.343,312,3.174,313,4.253,314,2.722,315,2.722,427,1.971,502,2.34,515,2.192,611,1.462,651,4.939,655,3.174,657,3.008,752,3.008,866,4.253,869,5.756,870,5.581,871,2.722,872,4.968,873,4.968,874,7.274,875,3.008,876,5.583,877,3.44,878,4.968,879,5.432,880,3.44,881,4.657,882,4.968,883,3.44,884,6.771,885,4.968,886,4.343,887,3.008,888,2.722,889,3.931,890,2.722,891,3.44,892,3.44,893,3.44,894,3.44,895,3.44,896,3.44,897,3.44,898,3.44,899,4.343,900,3.44,901,3.931,902,4.968,903,3.44,904,5.358,905,4.968,906,3.44,907,3.44,908,4.968,909,3.44,910,6.385,911,3.44,912,3.44,913,6.385,914,3.44,915,3.44,916,3.44,917,3.44,918,5.097,919,3.44,920,3.44,921,3.44,922,3.44,923,3.44,924,3.44,925,3.44,926,3.44,927,3.44,928,3.44,929,3.44,930,3.44]],["title/injectables/JwtStrategy.html",[107,0.834,217,2.825]],["body/injectables/JwtStrategy.html",[3,0.129,4,0.115,5,0.129,7,0.369,8,1.601,11,0.012,12,0.639,14,1.206,15,0.692,16,0.286,17,0.675,20,0.129,21,0.208,24,1.169,26,0.009,27,0.009,61,4.911,62,2.733,95,2.762,107,1.207,108,1.668,128,1.816,129,0.609,130,0.587,131,1.759,133,2.995,176,4.278,177,3.583,184,2.461,185,2.758,201,2.105,202,5.338,203,2.078,217,4.886,221,2.893,231,2.247,240,3.958,276,1.854,280,2.257,281,3.958,283,1.652,287,5.254,515,2.652,651,4.384,890,3.583,904,3.583,931,3.958,932,5.254,933,6.281,934,4.528,935,4.528,936,6.01,937,4.528,938,4.528,939,3.958,940,3.583,941,3.958,942,4.528,943,4.528,944,4.528,945,3.583,946,4.528,947,6.745,948,4.528,949,4.528,950,4.528]],["title/injectables/LocalAuthGuard.html",[107,0.834,161,3.03]],["body/injectables/LocalAuthGuard.html",[3,0.178,4,0.158,5,0.119,11,0.012,16,0.281,17,0.93,20,0.178,21,0.287,26,0.01,27,0.01,107,1.475,108,2.299,161,5.36,221,3.987,515,3.243,871,4.939,887,5.456,951,5.456,952,7.348]],["title/injectables/LocalStrategy.html",[107,0.834,218,2.825]],["body/injectables/LocalStrategy.html",[3,0.145,4,0.129,5,0.097,7,0.414,8,1.724,11,0.012,12,0.688,14,1.352,15,0.913,16,0.287,17,0.757,20,0.145,21,0.234,22,2.24,24,1.311,26,0.009,27,0.009,95,2.919,107,1.3,108,1.87,128,1.957,129,0.527,130,0.633,131,1.895,132,2.022,154,2.005,162,4.018,164,4.786,165,4.018,184,2.079,201,1.584,203,2.33,218,4.403,221,3.244,264,3.065,265,5.66,312,3.244,313,3.703,314,4.018,315,4.018,515,2.857,526,3.587,886,4.438,890,4.018,932,5.66,933,5.66,939,4.438,940,4.018,941,4.438,953,4.438,954,5.077,955,5.077,956,6.474,957,5.077,958,5.077,959,5.077]],["title/controllers/MailController.html",[0,1.178,960,3.03]],["body/controllers/MailController.html",[0,1.155,2,1.155,3,0.116,4,0.103,5,0.078,7,0.332,8,1.49,10,0.792,11,0.012,12,0.433,14,1.084,16,0.308,17,0.607,20,0.116,21,0.187,23,1.667,24,1.051,26,0.008,27,0.008,59,1.119,66,2.029,67,1.449,68,2.029,69,1.019,80,3.221,95,2.616,115,1.945,129,0.332,154,1.608,157,2.12,166,3.204,167,1.945,168,1.796,180,2.029,181,1.667,184,1.667,185,3.157,188,1.945,201,2.25,203,2.932,283,1.537,335,1.084,392,3.485,401,2.22,418,3.204,495,2.672,497,2.457,647,5.018,794,2.672,814,2.969,819,4.66,844,3.559,850,3.559,881,2.969,960,4.08,961,3.559,962,4.071,963,6.879,964,4.071,965,4.071,966,4.071,967,4.082,968,3.559,969,6.389,970,3.221,971,3.221,972,2.969,973,3.559,974,2.332,975,2.969,976,2.969,977,3.559,978,4.071,979,4.071,980,3.559,981,3.559,982,4.071,983,4.071,984,4.071,985,4.071,986,4.889,987,4.071,988,4.071,989,5.593,990,4.071,991,4.071,992,4.071,993,4.071,994,4.071,995,4.071,996,4.071,997,4.071,998,4.071,999,4.071,1000,4.071,1001,3.221,1002,4.071,1003,4.071,1004,4.071,1005,4.071,1006,4.071,1007,3.559,1008,4.071,1009,4.889,1010,4.071,1011,4.071,1012,4.071,1013,4.071,1014,4.071,1015,4.071]],["title/modules/MailModule.html",[28,0.946,46,2.825]],["body/modules/MailModule.html",[2,1.693,3,0.128,4,0.113,5,0.086,11,0.012,16,0.31,17,0.668,20,0.128,21,0.206,26,0.008,27,0.008,28,1.529,30,1.835,31,1.904,32,2.056,33,2.056,34,1.904,35,3.079,36,2.056,46,5.212,52,2.739,53,2.056,54,2.056,56,2.056,58,2.233,59,1.232,61,4.572,62,2.705,94,3.546,95,1.835,101,3.546,104,2.93,116,3.918,129,0.486,130,0.438,132,1.271,154,1.77,234,2.334,236,2.357,262,3.918,770,3.918,786,3.047,794,2.141,815,3.813,840,3.269,945,3.546,960,4.895,967,4.896,968,3.918,970,4.723,971,3.546,973,3.918,974,2.567,976,3.269,1009,3.918,1016,3.918,1017,3.918,1018,4.481,1019,4.481,1020,4.481,1021,5.968,1022,4.481,1023,3.546,1024,4.059,1025,4.481,1026,4.481,1027,4.481,1028,4.481,1029,4.481,1030,4.481,1031,4.481,1032,4.481,1033,4.481,1034,3.918,1035,4.481,1036,4.481,1037,4.481,1038,4.481,1039,4.481,1040,4.481,1041,4.481,1042,3.918]],["title/injectables/MailService.html",[107,0.834,967,2.654]],["body/injectables/MailService.html",[3,0.183,4,0.163,5,0.123,11,0.012,16,0.245,17,0.958,20,0.183,21,0.296,26,0.011,27,0.011,107,1.501,108,2.367,967,4.775,1043,5.617]],["title/injectables/MulterConfigService.html",[107,0.834,735,3.03]],["body/injectables/MulterConfigService.html",[3,0.106,4,0.095,5,0.139,7,0.304,8,1.403,11,0.012,12,0.649,14,1.403,15,0.703,16,0.267,17,0.557,20,0.106,21,0.172,24,1.575,26,0.007,27,0.007,104,2.157,107,1.058,108,1.376,128,1.129,129,0.497,130,0.515,131,1.094,141,5.335,154,1.475,174,2.14,188,2.916,201,2.326,246,0.992,266,1.945,282,2.956,321,3.639,328,1.027,416,2.037,496,2.255,611,1.587,634,2.54,687,4.605,710,3.266,715,2.725,735,3.843,769,4.605,774,3.266,786,3.582,1023,2.956,1034,3.266,1044,3.266,1045,6.103,1046,6.628,1047,5.268,1048,3.736,1049,6.103,1050,5.268,1051,3.736,1052,3.736,1053,3.736,1054,5.268,1055,5.268,1056,5.268,1057,3.736,1058,3.736,1059,3.736,1060,3.736,1061,3.736,1062,3.736,1063,3.736,1064,5.268,1065,3.736,1066,3.736,1067,5.268,1068,3.736,1069,3.736,1070,3.736,1071,3.736,1072,6.103,1073,3.736,1074,3.736,1075,3.736,1076,3.736,1077,3.736,1078,3.736,1079,3.736,1080,3.736,1081,3.736,1082,3.736,1083,3.736,1084,6.628,1085,3.736,1086,3.736,1087,3.736,1088,6.103,1089,3.736,1090,3.736,1091,3.736,1092,3.736,1093,5.268,1094,5.268,1095,3.736,1096,3.736,1097,3.736,1098,5.268,1099,3.736,1100,5.268,1101,3.736,1102,3.736,1103,3.736,1104,3.736,1105,3.736,1106,3.736,1107,3.736,1108,3.736,1109,3.736,1110,3.736,1111,3.736,1112,3.736,1113,5.268,1114,3.736,1115,3.736,1116,3.736,1117,3.736,1118,3.736,1119,5.268,1120,3.736]],["title/classes/Permission.html",[21,0.191,611,1.765]],["body/classes/Permission.html",[3,0.118,4,0.105,5,0.079,7,0.339,10,1.558,11,0.012,12,0.852,15,0.932,16,0.217,20,0.184,21,0.191,26,0.008,27,0.008,28,1.471,59,1.142,69,1.419,104,1.702,129,0.526,130,0.818,201,1.297,236,2.241,246,1.068,276,1.775,283,1.775,407,2.744,423,2.744,428,2.744,451,2.744,452,2.85,454,1.008,459,5.069,461,3.582,463,3.7,464,3.899,465,4.525,475,2.509,476,3.25,477,2.509,478,2.299,562,3.899,563,4.126,611,2.41,612,2.655,632,3.032,796,3.899,1121,3.032,1122,4.156,1123,4.156,1124,4.156,1125,4.156,1126,4.156,1127,4.156,1128,4.156,1129,4.156,1130,4.156,1131,4.156,1132,3.633]],["title/controllers/PermissionsController.html",[0,1.178,1133,3.03]],["body/controllers/PermissionsController.html",[0,1.016,2,1.016,3,0.102,4,0.091,5,0.068,7,0.292,8,1.362,10,1.338,11,0.012,12,0.731,14,1.832,15,0.915,16,0.281,17,0.534,20,0.102,21,0.165,22,1.581,23,1.467,24,1.776,26,0.007,27,0.007,67,1.275,115,1.712,123,2.862,124,2.052,128,2.079,129,0.56,130,0.672,131,2.014,132,2.317,154,3.07,157,3.106,158,2.663,167,1.712,168,1.581,175,1.581,180,1.785,181,1.467,198,4.047,280,1.785,294,2.274,328,1.639,329,2.442,330,2.094,331,2.094,334,2.288,337,1.581,338,1.905,339,2.87,340,2.87,344,2.256,345,1.467,347,2.825,349,1.785,352,1.865,354,2.288,356,1.954,357,2.052,358,2.172,361,1.522,363,1.467,366,3.6,369,2.162,370,2.162,372,2.052,373,2.052,375,2.162,376,2.162,377,2.288,379,2.052,381,2.052,559,4.569,611,3.302,1133,3.73,1134,3.131,1135,3.582,1136,3.582,1137,3.131,1138,3.582,1139,2.613,1140,3.582,1141,3.131,1142,3.582,1143,5.119,1144,3.582,1145,3.81,1146,3.131,1147,4.046,1148,3.582,1149,3.582,1150,3.582,1151,3.582,1152,3.582,1153,3.582,1154,3.582]],["title/modules/PermissionsModule.html",[28,0.946,47,2.825]],["body/modules/PermissionsModule.html",[2,1.916,3,0.155,4,0.138,5,0.104,11,0.012,16,0.302,17,0.81,20,0.155,21,0.25,26,0.01,27,0.01,28,1.675,30,2.224,31,2.308,32,2.492,33,2.492,34,2.308,35,3.374,36,2.492,47,5.485,52,3.1,53,2.492,54,2.492,56,2.492,58,2.707,59,1.493,129,0.442,234,2.829,236,2.145,611,2.308,612,4.316,614,3.962,1133,5.364,1145,5.153,1146,4.748,1155,4.748,1156,4.748,1157,5.432,1158,5.432,1159,4.748]],["title/injectables/PermissionsService.html",[107,0.834,1145,2.654]],["body/injectables/PermissionsService.html",[3,0.075,4,0.067,5,0.051,7,0.216,8,1.088,11,0.012,12,0.681,14,1.088,15,0.794,16,0.27,17,0.395,20,0.075,21,0.122,24,1.653,26,0.006,27,0.006,28,1.277,59,0.728,66,1.32,67,1.776,68,1.32,69,1.248,95,2.895,107,0.82,108,0.976,123,2.065,128,1.508,129,0.576,130,0.488,131,1.461,132,1.415,133,2.037,154,1.046,175,1.169,184,1.673,185,1.216,188,2.384,201,2.293,203,3.062,246,0.77,266,2.598,268,2.981,276,1.894,283,1.371,294,1.902,312,1.693,316,2.316,317,2.316,321,3.155,324,2.858,328,1.371,329,1.673,330,1.673,331,2.043,337,1.803,338,1.777,339,3.04,340,2.201,344,2.475,345,1.673,347,2.635,358,1.126,361,1.126,363,1.085,392,3.059,401,1.445,402,1.599,403,2.858,404,1.517,407,1.126,408,3.011,409,1.599,410,4.436,411,1.599,412,1.599,413,1.599,414,1.599,415,1.599,416,2.229,417,2.467,418,1.517,419,2.467,421,2.467,422,1.599,423,1.736,424,3.657,425,3.657,426,3.657,427,3.47,428,2.119,429,2.467,431,1.599,432,1.599,433,1.599,434,1.599,435,1.599,436,1.599,437,1.599,438,3.011,439,1.599,440,1.599,441,1.599,442,2.467,443,2.467,444,1.599,445,2.467,446,1.599,447,1.599,448,1.599,451,1.126,452,1.169,526,1.266,559,3.583,562,4.159,563,4.613,611,1.736,619,3.572,632,1.932,636,2.316,858,1.802,868,1.932,1143,3.813,1145,2.611,1147,3.234,1159,2.316,1160,2.316,1161,2.649,1162,2.649,1163,2.649,1164,2.649,1165,2.649,1166,2.649,1167,2.649,1168,4.087,1169,4.087,1170,4.087,1171,2.316,1172,2.316,1173,2.649,1174,2.649,1175,2.649,1176,2.649,1177,2.649,1178,2.649,1179,2.649,1180,3.572,1181,4.087,1182,2.649]],["title/classes/RegisterUserDto.html",[21,0.191,152,2.379]],["body/classes/RegisterUserDto.html",[3,0.102,4,0.09,5,0.068,7,0.29,10,1.389,11,0.012,12,0.759,15,0.953,16,0.248,20,0.169,21,0.329,23,2.086,26,0.007,27,0.007,69,1.275,129,0.612,130,0.735,152,2.919,171,2.152,172,4.696,181,1.459,231,1.697,246,0.96,264,3.076,276,0.98,283,2.103,284,3.828,285,3.828,286,3.244,335,1.728,338,1.584,454,0.864,456,1.814,458,1.514,478,1.814,482,2.946,486,1.776,487,2.654,488,2.654,489,2.654,490,1.227,492,2.6,493,2.849,494,2.946,518,2.152,522,4.338,523,3.255,524,4.338,525,1.856,526,3.656,527,3.465,528,2.277,529,2.6,539,3.034,1183,3.564,1184,3.564,1185,3.564,1186,3.564,1187,3.564,1188,3.564]],["title/interfaces/Response.html",[135,2.507,791,2.654]],["body/interfaces/Response.html",[3,0.145,4,0.129,5,0.097,7,0.415,11,0.012,15,0.822,16,0.296,17,0.758,20,0.185,21,0.234,22,2.246,24,1.314,26,0.009,27,0.009,85,3.46,107,1.302,130,0.698,131,1.898,135,3.914,168,2.246,246,1.221,338,1.901,492,2.502,634,3.46,689,5.787,783,6.141,791,3.251,792,4.027,876,5.647,879,4.73,881,3.712,901,4.027,975,3.712,1189,4.027,1190,5.668,1191,5.668,1192,5.668,1193,4.449,1194,4.449,1195,3.712,1196,3.712,1197,4.449,1198,4.449,1199,4.449,1200,4.449,1201,4.449,1202,4.449]],["title/classes/Resume.html",[21,0.191,1203,2.507]],["body/classes/Resume.html",[3,0.102,4,0.091,5,0.068,7,0.292,10,1.558,11,0.012,12,0.852,15,0.906,16,0.248,20,0.17,21,0.165,26,0.007,27,0.007,59,0.984,69,1.279,104,1.467,130,0.822,201,1.118,236,2.02,246,0.963,276,1.788,283,2.023,335,0.954,389,2.834,407,2.534,423,2.763,428,2.534,451,2.763,452,2.631,454,0.869,459,5.034,461,3.518,463,3.725,464,4.317,465,4.544,475,2.162,476,2.929,477,2.162,478,2.828,572,4.719,573,4.719,574,4.719,780,4.423,794,1.712,796,3.6,840,2.613,976,2.613,1203,3.087,1204,2.613,1205,5.213,1206,5.213,1207,5.147,1208,5.147,1209,3.582,1210,3.582,1211,3.582,1212,3.582,1213,3.582,1214,3.582,1215,3.582,1216,3.582,1217,3.582,1218,3.582,1219,3.582,1220,3.582,1221,3.582,1222,3.131,1223,2.834,1224,2.613,1225,3.131]],["title/controllers/ResumesController.html",[0,1.178,1226,3.03]],["body/controllers/ResumesController.html",[0,0.973,2,0.973,3,0.098,4,0.087,5,0.066,7,0.279,8,1.32,10,1.371,11,0.012,12,0.749,14,1.877,15,0.908,16,0.278,17,0.511,20,0.098,21,0.158,22,1.513,23,1.404,24,1.819,26,0.007,27,0.007,67,1.221,115,1.639,123,2.929,124,3.334,128,2.13,129,0.574,130,0.689,131,2.063,132,2.354,157,2.581,158,2.581,167,1.639,168,1.513,175,1.513,180,1.709,181,1.404,198,4.103,294,2.219,328,1.362,329,2.383,330,2.029,331,2.029,334,2.191,337,1.513,338,1.877,339,2.813,340,2.813,342,3.166,344,2.187,345,1.404,347,2.939,349,1.709,350,2.332,352,1.786,354,2.191,356,1.871,357,1.964,358,2.106,361,1.457,363,1.404,366,2.07,367,2.332,369,2.07,370,2.07,372,1.964,373,1.964,375,2.07,376,2.07,377,2.191,379,1.964,380,2.332,381,1.964,569,4.503,794,3.368,819,4.65,1139,2.502,1203,2.992,1226,3.615,1227,2.998,1228,2.998,1229,4.333,1230,2.998,1231,3.43,1232,2.998,1233,3.43,1234,3.43,1235,3.43,1236,4.956,1237,3.43,1238,3.43,1239,3.43,1240,5.06,1241,3.43,1242,3.718,1243,2.998,1244,3.922,1245,3.43,1246,3.43,1247,3.43,1248,3.43,1249,3.43,1250,3.43,1251,3.43,1252,3.43,1253,3.43]],["title/modules/ResumesModule.html",[28,0.946,48,2.825]],["body/modules/ResumesModule.html",[2,1.853,3,0.147,4,0.13,5,0.098,11,0.012,16,0.309,17,0.767,20,0.147,21,0.237,26,0.009,27,0.009,28,1.634,30,2.108,31,2.188,32,2.363,33,2.363,34,2.188,35,3.293,36,2.363,48,5.412,52,2.998,53,2.363,54,2.363,56,2.363,58,2.566,59,1.415,129,0.584,234,3.737,236,2.834,335,1.371,387,4.442,389,4.075,794,2.46,815,4.173,840,3.756,976,3.756,1203,3.108,1222,4.501,1224,4.765,1226,5.234,1242,5.084,1243,4.501,1254,4.501,1255,4.501,1256,5.149,1257,5.149,1258,4.501,1259,5.149]],["title/injectables/ResumesService.html",[107,0.834,1242,2.654]],["body/injectables/ResumesService.html",[3,0.07,4,0.062,5,0.074,7,0.2,8,1.028,11,0.012,12,0.69,14,1.268,15,0.774,16,0.264,17,0.367,20,0.07,21,0.113,24,1.826,26,0.005,27,0.005,59,0.676,66,1.226,67,1.694,68,1.226,69,1.191,95,2.83,107,0.775,108,0.906,123,2.391,128,1.629,129,0.506,130,0.527,131,1.578,132,1.842,133,1.923,154,1.524,175,1.086,184,1.58,185,1.129,188,2.274,201,2.287,203,2.85,246,0.727,266,2.479,276,1.981,283,1.9,294,1.815,321,2.806,324,3.557,328,1.06,329,1.58,330,1.58,331,1.949,337,1.703,338,1.729,339,2.966,340,2.1,344,2.378,345,1.58,347,2.655,358,1.045,361,1.045,363,1.007,392,2.939,401,1.342,402,1.485,403,1.409,404,1.409,407,1.045,408,4.058,409,1.485,410,4.173,411,1.485,412,1.485,413,1.485,414,1.485,415,1.485,416,2.104,417,2.329,418,1.409,419,2.329,421,2.329,422,1.485,423,2.29,424,3.253,425,3.253,426,3.253,427,3.087,428,2.022,429,2.329,431,1.485,432,1.485,433,1.485,434,1.485,435,1.485,436,1.485,437,1.485,438,2.873,439,1.485,440,1.485,441,1.485,442,2.329,443,2.329,444,1.485,445,2.329,446,1.485,447,2.873,448,3.253,451,2.022,452,1.086,461,1.844,569,3.968,572,3.766,573,3.766,574,3.053,651,1.795,780,3.237,1203,3.533,1205,3.373,1206,2.151,1223,1.947,1229,4.711,1230,3.373,1240,3.665,1242,3.041,1244,3.053,1258,2.151,1260,2.151,1261,2.461,1262,2.461,1263,3.858,1264,2.461,1265,2.461,1266,2.461,1267,2.461,1268,2.461,1269,2.461,1270,2.461,1271,2.461,1272,2.461,1273,3.858,1274,2.461,1275,2.461,1276,2.461,1277,2.461,1278,3.858,1279,2.461,1280,3.858,1281,3.858,1282,3.858,1283,2.461,1284,3.858,1285,2.461,1286,3.858,1287,3.858,1288,2.461,1289,2.461,1290,2.461,1291,2.461,1292,3.053,1293,3.858,1294,2.461]],["title/classes/Role.html",[21,0.191,231,1.383]],["body/classes/Role.html",[3,0.115,4,0.103,5,0.078,7,0.33,10,1.551,11,0.012,12,0.848,15,0.878,16,0.244,20,0.182,21,0.187,26,0.008,27,0.008,59,1.115,69,1.396,104,1.661,129,0.519,130,0.818,201,1.266,231,1.858,232,2.448,236,2.203,246,1.05,276,1.753,280,3.178,283,1.753,407,2.709,423,2.709,428,2.709,451,2.709,452,2.814,454,0.983,456,2.27,459,5.036,461,3.556,463,3.653,464,4.146,465,4.492,469,2.905,475,2.448,476,3.195,477,2.448,478,2.649,504,3.478,611,1.723,613,2.958,614,2.958,633,2.758,796,3.849,1207,4.414,1208,4.414,1295,2.958,1296,4.056,1297,4.056,1298,4.056,1299,4.056,1300,4.056,1301,4.056,1302,4.056,1303,4.056,1304,4.056,1305,4.056,1306,3.545]],["title/controllers/RolesController.html",[0,1.178,1307,3.03]],["body/controllers/RolesController.html",[0,1.019,2,1.019,3,0.102,4,0.091,5,0.069,7,0.293,8,1.365,10,1.339,11,0.012,12,0.732,14,1.834,15,0.916,16,0.281,17,0.536,20,0.102,21,0.165,22,1.586,23,1.471,24,1.778,26,0.007,27,0.007,67,1.279,115,1.717,123,2.865,124,2.936,128,2.081,129,0.561,130,0.673,131,2.016,132,2.318,154,3.072,157,2.669,158,2.669,167,1.717,168,1.586,175,1.586,176,3.258,180,1.791,181,1.471,198,4.05,231,1.707,294,2.278,328,1.409,329,2.446,330,2.099,331,2.099,337,1.586,338,1.907,339,2.874,340,2.874,344,2.262,345,1.471,347,2.828,349,1.791,352,1.871,354,2.296,356,1.96,357,2.058,358,2.178,361,1.527,363,1.471,366,3.094,367,2.444,369,2.169,370,2.169,372,2.058,373,2.058,375,2.169,376,2.169,377,2.296,379,2.058,381,2.058,578,4.574,611,3.201,1137,3.142,1139,2.621,1141,3.142,1307,3.739,1308,3.142,1309,3.142,1310,3.142,1311,3.594,1312,3.594,1313,3.594,1314,3.594,1315,3.594,1316,5.123,1317,3.594,1318,3.142,1319,4.056,1320,3.594,1321,3.594,1322,3.594,1323,3.594,1324,3.594,1325,3.594,1326,3.594]],["title/modules/RolesModule.html",[28,0.946,49,2.654]],["body/modules/RolesModule.html",[2,1.828,3,0.144,4,0.128,5,0.096,11,0.012,16,0.302,17,0.751,20,0.144,21,0.232,26,0.009,27,0.009,28,1.618,30,2.064,31,2.142,32,2.313,33,2.313,34,2.142,35,3.26,36,3.26,49,5.409,52,2.958,53,2.313,54,2.313,56,2.313,58,2.513,59,1.386,129,0.525,176,4.578,231,1.679,232,3.891,234,2.626,236,2.546,237,3.428,611,2.142,612,4.118,613,3.678,614,3.678,1307,5.183,1318,4.407,1327,4.407,1328,4.407,1329,4.407,1330,5.042,1331,5.042,1332,4.407]],["title/injectables/RolesService.html",[107,0.834,176,2.266]],["body/injectables/RolesService.html",[3,0.076,4,0.067,5,0.051,7,0.216,8,1.089,11,0.012,12,0.681,14,1.33,15,0.794,16,0.276,17,0.395,20,0.076,21,0.122,24,1.653,26,0.006,27,0.006,28,0.604,59,0.729,66,1.322,67,1.777,68,1.322,69,1.249,95,3.01,107,0.821,108,0.977,123,2.359,128,1.696,129,0.576,130,0.548,131,1.643,132,1.719,133,2.488,154,1.972,175,1.17,176,2.231,184,1.675,185,1.217,188,1.954,201,2.294,203,3.063,231,1.869,246,0.77,266,2.13,268,1.935,276,1.944,280,3.021,283,1.372,294,1.904,312,3.19,321,2.6,324,2.86,328,1.124,329,1.675,330,1.675,331,2.044,337,1.805,338,1.778,339,3.042,340,2.203,344,2.476,345,1.675,347,2.636,358,1.127,361,1.127,363,1.086,392,3.06,401,1.447,402,1.601,403,1.519,404,1.519,407,1.127,408,3.014,409,1.601,410,4.029,411,1.601,412,1.601,413,1.601,414,1.601,415,1.601,416,3.641,417,2.469,418,1.519,419,2.469,421,2.469,422,1.601,423,1.738,424,3.014,425,3.014,426,3.014,427,2.86,428,2.121,429,2.469,431,1.601,432,1.601,433,1.601,434,1.601,435,1.601,436,1.601,437,1.601,438,3.014,439,1.601,440,1.601,441,1.601,442,2.469,443,2.469,444,1.601,445,2.469,446,1.601,447,3.014,448,3.014,451,1.127,452,1.17,456,2.28,504,3.06,526,1.267,562,1.601,563,1.695,578,4.092,611,1.127,620,3.237,626,2.984,633,1.804,637,2.099,654,2.099,655,1.695,670,2.099,786,1.804,858,2.781,1180,3.576,1292,2.099,1310,3.576,1316,3.816,1319,3.237,1332,2.319,1333,2.319,1334,2.652,1335,2.652,1336,2.652,1337,2.652,1338,2.652,1339,2.652,1340,2.652,1341,2.319,1342,2.652,1343,2.652,1344,2.652,1345,2.652,1346,2.652,1347,2.652,1348,4.09,1349,4.09,1350,2.652,1351,2.652,1352,2.652,1353,2.319,1354,2.319,1355,2.652]],["title/classes/Subscriber.html",[21,0.191,974,2.379]],["body/classes/Subscriber.html",[3,0.121,4,0.108,5,0.082,7,0.347,10,1.549,11,0.012,12,0.847,15,0.917,16,0.22,20,0.186,21,0.196,26,0.008,27,0.008,59,1.171,69,1.444,104,1.745,129,0.533,130,0.817,201,1.33,236,2.279,246,1.087,276,1.798,283,2.076,407,2.78,423,2.78,428,2.78,451,2.78,452,2.887,454,1.034,459,5.047,461,3.609,463,3.748,464,3.949,465,4.559,475,2.573,476,3.306,477,2.573,478,2.329,495,3.126,796,3.949,972,3.109,974,3.306,1024,2.898,1356,3.109,1357,4.262,1358,4.262,1359,4.262,1360,4.262,1361,4.262,1362,4.262,1363,4.262,1364,4.262,1365,4.262,1366,3.726]],["title/controllers/SubscribersController.html",[0,1.178,1367,3.03]],["body/controllers/SubscribersController.html",[0,0.979,2,0.979,3,0.098,4,0.087,5,0.066,7,0.281,8,1.326,10,1.374,11,0.012,12,0.751,14,1.881,15,0.875,16,0.278,17,0.514,20,0.098,21,0.159,22,1.523,23,1.413,24,1.823,26,0.007,27,0.007,67,1.229,115,1.649,123,2.932,124,2.852,128,2.135,129,0.575,130,0.69,131,2.068,132,2.328,157,3.042,158,2.593,166,3.346,167,1.649,168,1.523,175,1.523,180,1.72,181,1.413,198,4.014,294,2.227,328,1.605,329,2.391,330,2.039,331,2.039,334,2.205,337,1.523,338,1.881,339,2.822,340,2.822,341,2.731,342,3.181,344,2.197,345,1.413,346,2.731,347,2.79,349,1.72,350,2.347,356,2.716,357,1.977,358,2.115,361,1.466,363,1.413,366,2.083,369,2.083,370,2.083,372,1.977,373,1.977,376,2.083,379,1.977,380,2.347,381,1.977,495,1.649,585,4.513,974,3.663,986,6.365,1367,3.632,1368,3.017,1369,4.979,1370,3.017,1371,3.451,1372,3.451,1373,3.451,1374,3.451,1375,3.451,1376,4.979,1377,3.451,1378,3.451,1379,3.451,1380,3.451,1381,4.803,1382,3.451,1383,3.451,1384,3.731,1385,3.017,1386,3.94,1387,4.622,1388,3.451,1389,3.451,1390,3.451,1391,3.451,1392,3.451,1393,3.451,1394,3.451,1395,3.451,1396,3.451,1397,3.451,1398,3.451]],["title/modules/SubscribersModule.html",[28,0.946,50,2.825]],["body/modules/SubscribersModule.html",[2,1.916,3,0.155,4,0.138,5,0.104,11,0.012,16,0.302,17,0.81,20,0.155,21,0.25,26,0.01,27,0.01,28,1.675,30,2.224,31,2.308,32,2.492,33,2.492,34,2.308,35,3.374,36,2.492,50,5.485,52,3.1,53,2.492,54,2.492,56,2.492,58,2.707,59,1.493,129,0.442,234,2.829,236,2.145,974,3.111,1024,4.594,1042,4.748,1367,5.364,1384,5.153,1385,4.748,1399,4.748,1400,4.748,1401,5.432,1402,5.432,1403,4.748]],["title/injectables/SubscribersService.html",[107,0.834,1384,2.654]],["body/injectables/SubscribersService.html",[3,0.076,4,0.068,5,0.051,7,0.218,8,1.099,11,0.012,12,0.712,14,1.503,15,0.772,16,0.271,17,0.4,20,0.076,21,0.123,24,1.786,26,0.006,27,0.006,59,0.737,66,1.337,67,1.79,68,1.337,69,1.258,95,3.018,104,1.098,107,0.828,108,0.988,123,2.613,128,1.841,129,0.578,130,0.596,131,1.784,132,1.901,133,2.505,175,1.183,184,1.689,185,1.231,188,1.971,201,2.261,203,2.952,246,0.777,266,2.148,276,1.842,283,1.95,294,1.917,321,2.939,324,2.88,328,1.134,329,1.689,330,1.689,331,2.058,335,1.099,337,1.82,338,1.785,339,3.052,340,2.218,344,2.491,345,1.689,347,2.406,358,1.139,361,1.139,363,1.098,392,3.078,401,1.463,402,1.619,403,1.536,404,1.536,407,1.139,408,3.407,409,1.619,410,4.283,411,1.619,412,1.619,413,1.619,414,1.619,415,1.619,416,2.25,417,2.49,418,1.536,419,2.49,421,2.49,422,1.619,423,1.753,424,3.407,425,3.407,426,3.407,427,3.233,428,2.136,429,2.49,431,1.619,432,1.619,433,1.619,434,1.619,435,1.619,436,1.619,437,1.619,438,3.035,439,1.619,440,1.619,441,1.619,442,2.49,443,2.49,444,1.619,445,2.49,446,1.619,447,2.49,448,2.49,451,1.139,452,1.183,495,1.971,526,1.281,585,4.11,655,1.713,858,1.824,863,2.122,864,2.122,865,2.122,866,1.956,867,2.122,868,1.956,972,1.956,974,2.88,980,2.344,981,3.606,1370,3.606,1381,3.838,1384,2.635,1386,3.264,1403,2.344,1404,2.344,1405,4.125,1406,2.682,1407,2.682,1408,2.682,1409,2.682,1410,2.682,1411,4.125,1412,2.682,1413,2.682,1414,2.682,1415,2.682,1416,2.682,1417,2.682,1418,2.682,1419,2.682,1420,2.682,1421,2.682,1422,4.125,1423,4.125,1424,2.682,1425,2.682,1426,2.682]],["title/injectables/TransformInterceptor.html",[107,0.834,1196,3.03]],["body/injectables/TransformInterceptor.html",[3,0.141,4,0.126,5,0.095,7,0.404,8,1.699,11,0.012,12,0.678,14,1.321,15,0.571,16,0.294,17,0.739,20,0.182,21,0.228,22,2.189,24,1.281,26,0.009,27,0.009,85,3.374,107,1.281,108,1.827,128,1.928,129,0.52,130,0.624,131,1.868,135,2.995,168,2.189,184,2.031,338,1.321,492,2.056,634,3.374,689,5.143,783,5.048,791,3.17,875,4.337,876,6.237,879,5.429,881,4.653,901,3.926,975,3.619,1189,3.926,1190,5.577,1191,6.507,1192,6.164,1193,4.337,1194,4.337,1195,3.619,1196,4.653,1197,6.164,1198,6.164,1199,4.337,1200,4.337,1201,4.337,1202,4.337,1427,4.961,1428,4.961,1429,4.961]],["title/classes/UpdateCompanyDto.html",[21,0.191,353,2.825]],["body/classes/UpdateCompanyDto.html",[3,0.138,4,0.123,5,0.093,7,0.396,10,1.436,11,0.012,12,0.785,15,0.931,16,0.267,20,0.138,21,0.29,26,0.009,27,0.009,129,0.623,130,0.722,246,1.186,286,3.376,328,1.336,333,3.106,353,4.282,362,3.847,454,1.179,456,2.724,458,3.251,482,2.724,490,1.674,492,2.381,493,2.784,494,2.879,510,2.532,511,2.423,512,2.423,515,2.778,538,3.847,539,3.138,540,4.25,541,4.25,542,4.25,1430,6.689,1431,6.296,1432,4.862]],["title/classes/UpdateFileDto.html",[21,0.191,698,2.825]],["body/classes/UpdateFileDto.html",[3,0.177,4,0.158,5,0.119,11,0.012,16,0.28,20,0.177,21,0.286,26,0.01,27,0.01,328,1.71,454,1.509,510,3.241,511,3.101,512,3.101,515,3.237,544,4.232,546,4.925,698,4.989,713,4.925,1433,5.44,1434,7.336]],["title/classes/UpdateJobDto.html",[21,0.191,514,2.654]],["body/classes/UpdateJobDto.html",[3,0.103,4,0.091,5,0.069,7,0.294,10,1.492,11,0.012,12,0.837,15,0.916,16,0.263,20,0.103,21,0.3,26,0.007,27,0.007,69,1.285,129,0.584,130,0.784,246,0.967,276,0.991,328,0.991,335,1.965,338,1.738,454,0.874,456,2.455,458,1.532,461,3.603,469,2.675,478,1.284,481,2.452,482,2.831,486,1.797,487,2.675,488,2.675,489,2.675,490,1.241,491,2.065,492,2.431,493,2.815,494,2.911,495,3.295,496,3.613,497,4.162,498,4.405,499,4.405,500,3.494,501,4.07,502,3.494,503,3.824,506,6.294,510,1.878,511,1.797,512,1.797,513,2.63,514,3.282,515,2.267,516,4.491,517,5.232,539,3.203,547,2.63,548,3.152,549,3.152,550,3.152,552,3.152,553,3.152,555,3.152,556,3.152,558,3.152,1435,3.606,1436,3.606,1437,3.606]],["title/classes/UpdatePermissionDto.html",[21,0.191,1143,2.825]],["body/classes/UpdatePermissionDto.html",[3,0.138,4,0.123,5,0.093,7,0.396,10,1.436,11,0.012,12,0.785,15,0.931,16,0.267,20,0.138,21,0.29,26,0.009,27,0.009,28,1.591,129,0.676,130,0.722,246,1.186,328,1.336,454,1.179,482,2.724,490,1.674,492,2.381,493,2.784,494,2.879,510,2.532,511,2.423,512,2.423,515,2.778,539,3.138,559,3.106,561,3.847,562,4.215,563,4.462,564,4.25,565,4.25,566,4.25,1143,4.282,1147,3.847,1438,6.689,1439,6.296,1440,4.862]],["title/classes/UpdateResumeDto.html",[21,0.191,1240,2.825]],["body/classes/UpdateResumeDto.html",[3,0.162,4,0.144,5,0.109,7,0.464,10,1.109,11,0.012,12,0.606,15,0.802,16,0.287,20,0.162,21,0.32,26,0.01,27,0.01,130,0.557,246,1.311,328,1.567,454,1.383,482,2.478,490,1.963,492,1.838,493,2.396,494,2.478,510,2.969,511,2.842,512,2.842,515,3.072,539,2.422,569,3.643,571,4.512,780,5.456,1240,4.733,1244,4.512,1441,6.085,1442,6.961,1443,5.702]],["title/classes/UpdateRoleDto.html",[21,0.191,1316,2.825]],["body/classes/UpdateRoleDto.html",[3,0.138,4,0.122,5,0.092,7,0.393,10,1.433,11,0.012,12,0.783,15,0.849,16,0.281,20,0.138,21,0.289,26,0.009,27,0.009,69,1.569,129,0.675,130,0.72,246,1.181,280,3.469,328,1.327,454,1.171,456,2.478,469,3.265,478,2.232,482,2.718,490,1.663,492,2.375,493,2.78,494,2.875,504,3.797,510,2.515,511,2.407,512,2.407,515,2.766,539,3.13,578,3.085,580,3.821,581,4.222,582,4.222,584,4.222,1316,4.263,1319,3.821,1444,6.675,1445,6.269,1446,4.829]],["title/classes/UpdateSubscriberDto.html",[21,0.191,1381,2.825]],["body/classes/UpdateSubscriberDto.html",[3,0.146,4,0.129,5,0.098,7,0.416,10,1.391,11,0.012,12,0.76,15,0.915,16,0.273,20,0.146,21,0.299,26,0.009,27,0.009,129,0.633,130,0.699,246,1.225,283,2.136,328,1.405,454,1.24,482,2.68,490,1.76,492,2.305,493,2.735,494,2.828,495,3.713,510,2.663,511,2.548,512,2.548,515,2.87,539,3.038,585,3.266,587,4.046,588,4.47,590,4.47,1381,4.422,1386,4.046,1447,6.58,1448,6.503,1449,5.113]],["title/classes/UpdateUserDto.html",[21,0.191,535,2.654]],["body/classes/UpdateUserDto.html",[3,0.113,4,0.101,5,0.076,7,0.324,10,1.475,11,0.012,12,0.806,15,0.915,16,0.273,20,0.113,21,0.314,26,0.008,27,0.008,69,1.378,129,0.603,130,0.767,173,2.707,231,2.383,246,1.037,276,1.094,283,2.125,284,3.725,285,3.725,286,3.157,328,1.094,335,2.02,338,1.467,454,0.966,458,1.692,478,2.248,482,2.828,486,1.984,487,2.868,488,2.868,489,2.868,490,1.371,492,2.492,493,2.786,494,2.881,510,2.073,511,1.984,512,1.984,515,2.431,518,2.403,523,3.519,525,2.073,531,6.118,535,3.519,536,4.815,539,3.144,547,2.904,594,3.481,1450,3.981,1451,3.981,1452,3.981,1453,3.981,1454,3.981,1455,3.981,1456,3.981]],["title/classes/User.html",[21,0.191,132,1.178]],["body/classes/User.html",[3,0.099,4,0.088,5,0.066,7,0.283,10,1.582,11,0.012,12,0.865,15,0.942,16,0.224,20,0.167,21,0.16,26,0.007,27,0.007,59,0.955,69,1.251,104,1.422,129,0.522,130,0.823,132,1.419,201,1.084,209,4.276,223,2.219,231,2.136,233,2.219,236,1.976,237,2.362,246,0.942,276,1.763,283,1.946,284,3.053,285,3.053,286,2.587,335,1.561,338,1.332,407,2.49,423,2.49,428,2.49,451,2.49,452,2.587,454,0.842,457,4.639,458,1.476,459,5.106,461,3.382,463,3.673,464,4.102,465,4.507,469,2.605,475,2.097,476,2.865,477,2.097,478,2.597,526,2.801,631,2.534,796,3.538,1207,3.958,1208,3.958,1457,2.534,1458,3.473,1459,3.473,1460,3.473,1461,3.473,1462,3.473,1463,3.473,1464,3.473,1465,3.473,1466,3.473,1467,3.473,1468,3.473,1469,3.473,1470,3.473,1471,3.473,1472,3.473,1473,3.473,1474,3.036]],["title/classes/UserLoginDto.html",[21,0.191,171,2.507]],["body/classes/UserLoginDto.html",[3,0.111,4,0.099,5,0.075,7,0.317,10,1.055,11,0.012,12,0.577,15,0.952,16,0.258,20,0.178,21,0.338,23,3.009,26,0.008,27,0.008,69,1.357,129,0.578,130,0.66,152,2.232,171,3.275,172,3.988,181,1.595,231,1.807,246,1.022,264,4.284,276,1.071,283,2.02,284,3.516,285,3.516,286,2.979,335,1.798,338,1.445,454,0.945,456,2.403,458,1.655,478,1.931,482,2.977,486,1.942,487,2.825,488,2.825,489,2.825,490,1.341,492,2.636,493,2.797,494,2.892,518,2.352,522,4.554,523,3.466,524,4.554,525,2.029,526,3.732,527,3.69,528,3.466,529,3.958,1475,5.426,1476,3.896,1477,3.896]],["title/controllers/UsersController.html",[0,1.178,1478,3.03]],["body/controllers/UsersController.html",[0,1.03,2,1.03,3,0.103,4,0.092,5,0.069,7,0.296,8,1.375,10,1.344,11,0.012,12,0.735,14,1.841,15,0.917,16,0.282,17,0.541,20,0.103,21,0.167,22,1.602,23,1.486,24,1.785,26,0.007,27,0.007,67,1.292,115,1.734,123,2.871,124,2.957,128,2.089,129,0.563,130,0.676,131,2.024,132,2.399,157,2.688,158,2.688,167,1.734,168,1.602,169,2.994,173,3.51,180,1.809,181,1.486,198,4.059,294,2.29,328,1.419,329,2.46,330,2.114,331,2.114,334,2.319,337,1.602,338,1.913,339,2.887,340,2.887,342,3.298,344,2.278,345,1.486,347,2.983,349,1.809,350,2.468,352,1.89,354,2.319,356,1.98,357,2.079,358,2.193,361,1.542,363,1.486,366,2.191,367,2.468,369,2.191,370,2.191,372,2.079,373,2.079,375,2.191,376,2.191,377,2.319,379,2.079,380,2.468,381,2.079,525,3.741,535,4.826,1139,2.648,1232,3.173,1478,3.765,1479,3.173,1480,3.173,1481,3.173,1482,3.63,1483,3.63,1484,3.63,1485,3.63,1486,3.63,1487,3.173,1488,3.173,1489,3.63,1490,3.63,1491,3.63,1492,3.63,1493,3.63,1494,3.63,1495,3.63]],["title/modules/UsersModule.html",[28,0.946,51,2.654]],["body/modules/UsersModule.html",[2,1.85,3,0.146,4,0.13,5,0.098,11,0.012,16,0.304,17,0.766,20,0.146,21,0.236,26,0.009,27,0.009,28,1.633,30,2.103,31,2.182,32,2.357,33,2.357,34,2.182,35,3.289,36,3.289,51,5.162,52,2.993,53,2.357,54,2.357,56,2.357,58,2.56,59,1.412,129,0.531,132,1.457,169,4.194,223,4.167,231,1.711,232,3.937,233,3.282,234,2.675,235,4.065,236,2.576,237,3.493,1478,5.228,1487,4.491,1496,4.491,1497,4.491,1498,5.137,1499,5.137,1500,5.137,1501,4.491]],["title/injectables/UsersService.html",[107,0.834,169,2.07]],["body/injectables/UsersService.html",[3,0.055,4,0.049,5,0.037,7,0.158,8,0.851,11,0.012,12,0.731,14,1.572,15,0.879,16,0.263,17,0.29,20,0.055,21,0.089,24,1.835,26,0.005,27,0.005,59,0.534,66,0.969,67,1.447,68,0.969,69,1.017,95,2.91,107,0.641,108,0.716,123,2.42,128,1.863,129,0.617,130,0.602,131,1.804,132,1.985,133,2.345,152,3.2,154,1.261,169,1.591,173,2.172,184,1.308,185,1.465,188,2.248,201,2.301,203,2.929,209,3.432,231,2.189,233,1.242,246,0.601,264,1.928,266,2.45,268,1.418,274,1.539,276,1.889,283,1.981,284,2.909,285,2.909,286,2.465,294,1.218,312,2.04,321,2.45,324,2.695,328,0.878,329,1.308,330,2.128,331,1.308,335,1.488,337,1.409,338,1.572,339,2.72,340,1.793,344,2.076,345,1.308,347,2.331,349,1.591,352,1.663,358,0.826,361,0.826,363,0.796,392,3.219,401,1.06,402,1.174,403,1.114,404,1.114,407,1.357,408,2.84,409,1.174,410,3.853,411,1.174,412,1.174,413,1.174,414,1.174,415,1.174,416,3.047,417,1.928,418,1.114,419,1.928,421,1.928,422,1.174,423,1.357,424,2.84,425,2.84,426,2.84,427,2.695,428,1.357,429,1.928,431,1.174,432,1.174,433,1.174,434,1.174,435,1.174,436,1.174,437,1.174,438,2.453,439,1.174,440,1.928,441,1.174,442,1.928,443,1.928,444,1.174,445,1.928,446,1.174,447,2.453,448,2.453,451,0.826,452,0.858,525,2.909,526,2.945,528,1.242,535,3.938,618,1.7,620,3.216,623,2.792,628,2.329,631,1.418,633,1.322,635,1.7,637,1.539,654,1.539,655,2.04,670,1.539,685,1.7,786,2.763,858,3.534,863,1.539,864,1.539,865,1.539,866,1.418,867,1.539,868,1.418,918,2.792,1171,1.7,1172,1.7,1292,3.216,1341,1.7,1353,1.7,1354,1.7,1481,2.792,1488,1.7,1501,1.7,1502,1.7,1503,4.064,1504,4.064,1505,4.064,1506,4.064,1507,3.193,1508,3.193,1509,1.944,1510,1.944,1511,1.944,1512,1.944,1513,3.193,1514,1.944,1515,3.193,1516,1.944,1517,1.944,1518,1.944,1519,1.944,1520,1.944,1521,1.944,1522,1.944,1523,1.944,1524,1.944,1525,1.944,1526,1.7,1527,3.193,1528,1.944,1529,4.705,1530,1.944,1531,4.705,1532,3.193,1533,1.944,1534,3.193,1535,1.944,1536,1.944,1537,1.944,1538,1.944,1539,4.705,1540,1.944,1541,4.064,1542,3.193,1543,1.944,1544,1.944,1545,1.944,1546,1.944]],["title/coverage.html",[1547,4.487]],["body/coverage.html",[0,2.124,1,1.858,5,0.076,6,2.227,11,0.012,18,1.627,21,0.38,26,0.006,27,0.006,34,1.082,107,1.574,109,2.227,113,1.858,114,2.227,123,0.938,130,0.249,132,1.124,135,1.537,152,1.459,154,1.006,161,1.858,164,1.537,166,1.459,167,1.217,169,1.269,171,1.537,172,3.508,176,1.389,217,1.732,218,1.732,223,1.627,231,0.848,232,1.537,245,2.227,325,1.858,326,2.227,333,1.627,335,1.585,353,1.732,359,1.627,387,1.732,390,2.227,455,2.891,480,3.137,481,3.734,491,1.459,506,3.137,514,1.627,518,3.803,525,1.326,531,3.137,535,1.627,537,2.227,538,3.137,544,1.732,545,2.227,546,3.137,559,1.627,560,2.227,561,3.137,569,1.627,570,2.227,571,3.137,578,1.627,579,2.227,580,3.137,585,1.627,586,2.227,587,3.137,600,1.858,601,2.227,603,1.627,611,1.082,612,1.627,615,2.227,626,1.858,627,2.015,628,1.858,629,2.015,647,6.325,690,2.227,691,1.858,692,2.227,698,1.732,704,1.858,711,1.627,716,2.015,735,1.858,738,2.227,749,1.858,750,2.227,766,2.227,791,2.532,793,2.227,794,1.217,795,2.891,815,1.627,817,1.858,818,2.227,826,1.627,841,2.227,869,2.015,870,2.227,871,3.137,888,2.015,889,2.015,931,2.227,951,2.227,953,2.227,960,1.858,961,2.227,967,1.627,974,1.459,1024,1.732,1043,2.227,1044,2.227,1121,2.891,1133,1.858,1134,2.227,1143,1.732,1145,1.627,1160,2.227,1189,3.137,1195,1.858,1196,1.858,1203,1.537,1204,2.891,1224,1.858,1226,1.858,1227,2.227,1240,1.732,1242,1.627,1260,2.227,1295,2.891,1307,1.858,1308,2.227,1316,1.732,1333,2.227,1356,2.891,1367,1.858,1368,2.227,1381,1.732,1384,1.627,1387,2.015,1404,2.227,1430,2.227,1433,2.227,1438,2.227,1441,2.227,1444,2.227,1447,2.227,1457,2.891,1478,1.858,1479,2.227,1502,2.227,1547,2.015,1548,2.547,1549,2.547,1550,2.547,1551,6.3,1552,6.987,1553,6.801,1554,7.275,1555,8.119,1556,5.491,1557,6.3,1558,4.866,1559,7.841,1560,4.8,1561,5.75,1562,3.964,1563,2.547,1564,2.227,1565,2.547,1566,4.866,1567,2.547,1568,2.547,1569,2.547,1570,2.547,1571,2.547,1572,2.547,1573,2.547]],["title/dependencies.html",[31,2.123,1574,3.032]],["body/dependencies.html",[11,0.012,17,0.748,21,0.296,26,0.009,27,0.009,31,2.132,59,1.379,62,3.029,66,2.501,67,1.787,68,2.501,69,1.608,80,3.971,83,3.971,85,3.413,162,3.971,174,2.875,181,2.055,221,3.206,227,3.971,297,4.387,358,2.132,403,2.875,404,2.875,486,2.501,490,1.728,511,2.501,512,2.501,715,3.661,758,3.971,904,3.971,940,5.61,970,3.971,971,3.971,975,3.661,977,4.387,1526,4.387,1575,5.018,1576,7.09,1577,5.018,1578,5.018,1579,5.018,1580,5.018,1581,5.018,1582,5.018,1583,5.018,1584,5.018,1585,5.018,1586,5.018,1587,5.018,1588,6.427,1589,5.018,1590,5.018,1591,5.018,1592,5.018,1593,5.018,1594,5.018,1595,5.018,1596,5.018,1597,5.018,1598,5.018,1599,5.018,1600,5.018,1601,5.018,1602,5.018,1603,5.018,1604,5.018,1605,5.018,1606,5.018,1607,5.018,1608,5.018,1609,5.018,1610,5.018,1611,5.018]],["title/miscellaneous/functions.html",[1612,2.216,1613,4.368]],["body/miscellaneous/functions.html",[7,0.536,11,0.011,26,0.011,27,0.011,34,3.391,1564,5.753,1612,4.204,1613,5.753,1614,6.581]],["title/index.html",[7,0.282,1615,3.468,1616,3.468]],["body/index.html",[4,0.132,11,0.012,26,0.009,27,0.009,291,4.555,456,1.855,493,1.794,500,3.543,527,4.906,1001,4.123,1007,4.555,1023,4.123,1547,4.123,1617,5.211,1618,5.211,1619,6.582,1620,5.211,1621,5.211,1622,5.211,1623,5.211,1624,5.211,1625,7.215,1626,5.211,1627,5.211,1628,5.211,1629,5.211,1630,8.106,1631,5.211,1632,5.211,1633,7.983,1634,5.211,1635,6.582,1636,5.211,1637,5.211,1638,5.211,1639,5.211,1640,6.582,1641,6.582,1642,5.211,1643,5.211,1644,5.211,1645,6.582,1646,6.582,1647,5.211,1648,5.211,1649,5.211,1650,5.211,1651,5.211,1652,5.211,1653,5.211,1654,5.211,1655,5.211,1656,5.211,1657,5.211,1658,5.211,1659,5.211,1660,4.555,1661,5.211,1662,5.211,1663,5.211,1664,5.211,1665,5.211,1666,5.211,1667,4.555]],["title/modules.html",[30,2.322]],["body/modules.html",[11,0.01,26,0.01,27,0.01,29,4.095,30,2.298,40,3.817,41,3.817,42,3.817,43,3.817,44,3.817,45,3.817,46,3.817,47,3.817,48,3.817,49,3.586,50,3.817,51,3.586,1001,6.737,1668,8.513,1669,8.513,1670,8.544,1671,5.614,1672,5.614]],["title/overview.html",[1673,4.957]],["body/overview.html",[2,1.097,11,0.012,18,3.973,26,0.008,27,0.008,28,0.881,29,6.225,30,1.584,31,1.643,32,1.775,33,1.775,34,1.643,35,1.775,36,1.775,37,3.382,38,3.382,39,3.382,40,5.587,41,4.814,42,5.117,43,4.814,44,4.229,45,4.814,46,4.814,47,4.814,48,4.814,49,5.146,50,4.814,51,4.808,52,2.477,53,1.775,54,1.775,108,1.425,164,3.754,169,3.886,176,4.104,214,3.382,215,3.382,217,4.229,218,4.229,359,3.973,383,3.382,384,3.382,454,0.938,505,3.382,603,3.973,607,3.382,608,3.382,711,3.973,730,3.382,731,3.382,792,3.061,826,3.973,835,3.382,836,3.382,967,3.973,1016,3.382,1017,3.382,1145,3.973,1155,3.382,1156,3.382,1242,3.973,1254,3.382,1255,3.382,1327,3.382,1328,3.382,1329,3.382,1384,3.973,1399,3.382,1400,3.382,1496,3.382,1497,3.382,1673,3.382,1674,5.399,1675,3.868,1676,3.868]],["title/properties.html",[246,0.941,1574,3.032]],["body/properties.html",[11,0.012,26,0.011,27,0.011,246,1.228,456,2.322,1660,5.701,1667,5.701,1677,6.522,1678,6.522,1679,6.522]],["title/miscellaneous/typealiases.html",[1612,2.216,1680,4.996]],["body/miscellaneous/typealiases.html",[7,0.49,11,0.01,26,0.01,27,0.01,130,0.588,400,5.69,455,4.389,476,4.786,631,5.245,632,5.245,633,4.89,795,4.389,814,5.245,972,5.245,1121,4.389,1204,4.389,1223,5.69,1295,4.389,1356,4.389,1457,4.389,1612,3.844,1681,6.017,1682,5.26,1683,5.26,1684,5.26,1685,5.26,1686,5.26,1687,5.26,1688,5.26]],["title/miscellaneous/variables.html",[1612,2.216,1689,4.368]],["body/miscellaneous/variables.html",[5,0.038,7,0.092,11,0.012,15,0.479,24,0.293,26,0.003,27,0.003,28,1.742,67,2.132,104,0.824,125,1.759,129,0.623,130,0.44,132,1.559,133,0.565,147,0.827,158,2.957,166,1.152,167,0.961,188,3.088,201,0.354,223,1.285,231,1.094,232,1.214,249,0.991,266,3.365,276,2.271,280,1.874,282,6.053,283,2.123,294,1.718,327,3.286,328,1.238,335,1.001,342,2.878,347,1.779,356,2.457,387,1.368,407,3.25,423,3.25,428,3.25,451,1.152,455,0.827,457,6.053,479,0.991,492,0.648,562,4.617,563,4.887,611,1.597,612,1.285,626,1.467,627,1.592,628,1.467,629,1.592,647,5.58,681,6.753,689,0.827,693,1.592,776,0.991,780,1.368,794,1.796,795,0.827,796,4.617,815,1.285,816,0.991,819,2.742,879,0.827,888,1.592,889,1.592,899,0.991,945,6.053,1024,1.368,1121,0.827,1132,0.991,1195,1.978,1203,3.194,1204,0.827,1224,1.467,1225,0.991,1228,5.236,1295,0.827,1306,0.991,1309,3.638,1356,0.827,1366,0.991,1387,1.592,1457,0.827,1474,0.991,1480,3.938,1560,0.991,1561,0.991,1612,0.724,1682,0.991,1683,0.991,1684,0.991,1685,0.991,1686,0.991,1687,0.991,1688,0.991,1689,0.991,1690,3.284,1691,4.505,1692,1.133,1693,2.012,1694,7.725,1695,8.241,1696,8.241,1697,2.712,1698,2.712,1699,7.649,1700,1.133,1701,1.133,1702,1.133,1703,1.133,1704,1.133,1705,2.012,1706,1.133,1707,2.712,1708,2.012,1709,1.133,1710,2.012,1711,1.133,1712,2.012,1713,1.133,1714,2.012,1715,2.012,1716,1.133,1717,2.712,1718,2.012,1719,1.133,1720,2.012,1721,1.133,1722,2.012,1723,1.133,1724,2.012,1725,2.012,1726,2.012,1727,2.012,1728,2.012,1729,3.284,1730,1.133,1731,2.012,1732,2.012,1733,1.133,1734,2.712,1735,2.012,1736,1.133,1737,2.012,1738,1.133,1739,2.012,1740,1.133,1741,2.012,1742,2.012,1743,3.284,1744,3.284,1745,2.012,1746,4.802,1747,3.284,1748,2.012,1749,4.161,1750,3.284,1751,2.012,1752,3.284,1753,2.012,1754,3.284,1755,2.012,1756,2.012,1757,3.284,1758,1.133,1759,2.012,1760,2.012,1761,1.133,1762,2.012,1763,1.133,1764,2.712,1765,2.012,1766,1.133,1767,2.012,1768,1.133,1769,2.012,1770,1.133,1771,2.012,1772,2.012,1773,1.133,1774,2.012,1775,1.133,1776,2.712,1777,2.012,1778,1.133,1779,2.012,1780,1.133,1781,2.012,1782,1.133,1783,1.133,1784,1.133,1785,1.133,1786,1.133,1787,1.133,1788,1.133,1789,1.133,1790,1.133]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":647,"title":{},"body":{"injectables/DatabasesService.html":{},"controllers/MailController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.1",{"_index":1678,"title":{},"body":{"properties.html":{}}}],["0.00",{"_index":984,"title":{},"body":{"controllers/MailController.html":{}}}],["0.1.13",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":416,"title":{"classes/Company-1.html":{}},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["1.0.15",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":418,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["10.0.0",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["1000",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["1024",{"_index":1119,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["123456",{"_index":529,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["13",{"_index":1674,"title":{},"body":{"overview.html":{}}}],["15t06:47:49.369z",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:48:22.224z",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:01.241z",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:51:23.973z",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:05.131z",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:54:32.799z",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:31.898z",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t06:59:51.041z",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:13.364z",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:41.934z",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:00:56.274z",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t07:01:36.923z",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:16.508z",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:33.697z",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:06:46.085z",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:24.175z",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:07:37.896z",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:14.659z",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:33.395z",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:08:50.801z",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:15.785z",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:09:41.694z",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:05.961z",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:10:50.946z",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:10.914z",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:33.234z",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:11:48.081z",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:11.323z",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:12:51.974z",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:06.618z",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:20.853z",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:36.836z",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15t09:13:52.798z",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.3.1",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":1675,"title":{},"body":{"overview.html":{}}}],["1mb",{"_index":1120,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["2",{"_index":505,"title":{"classes/Company-2.html":{}},"body":{"overview.html":{}}}],["2.4.3",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["2023",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":92,"title":{"classes/Company-3.html":{}},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["3.0.1",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["3.1.5",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["3.1.9",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["31",{"_index":1676,"title":{},"body":{"overview.html":{}}}],["4",{"_index":530,"title":{"classes/Company-4.html":{}},"body":{}}],["4.0.1",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["4.7.8",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["465",{"_index":1031,"title":{},"body":{"modules/MailModule.html":{}}}],["5.0.1",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["5.4.0",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["6.9.7",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["647b5108a8a243e8191855b5",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee211",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee212",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab415f4328bd3153ee214",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab436f4328bd3153ee216",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4d5f4328bd3153ee21b",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab4ebf4328bd3153ee220",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab5a8072f2a2ef910638d",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6d3fa16b294212e4033",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6e7fa16b294212e4038",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab6fdfa16b294212e403d",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab719fa16b294212e4042",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab728fa16b294212e4047",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ab750fa16b294212e404c",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad488dafdb9754f40b846",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad499dafdb9754f40b84b",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4a6dafdb9754f40b850",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4ccdafdb9754f40b859",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4d9dafdb9754f40b85e",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad4fedafdb9754f40b863",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad511dafdb9754f40b868",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad522dafdb9754f40b86d",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad53bdafdb9754f40b872",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad555dafdb9754f40b877",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad56ddafdb9754f40b87c",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad59adafdb9754f40b881",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5aedafdb9754f40b886",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5c5dafdb9754f40b88b",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5d4dafdb9754f40b890",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad5ebdafdb9754f40b895",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad613dafdb9754f40b89a",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad622dafdb9754f40b89f",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad630dafdb9754f40b8a6",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad640dafdb9754f40b8ab",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["648ad650dafdb9754f40b8b0",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":675,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["7.1.0",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["7.1.16",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["7.5.3",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":682,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["__v",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_id",{"_index":276,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["_id.tostring",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["access_token",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{}}}],["account",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":745,"title":{},"body":{"injectables/FilesService.html":{}}}],["active",{"_index":517,"title":{},"body":{"classes/Company-2.html":{},"classes/UpdateJobDto.html":{}}}],["adapter",{"_index":1037,"title":{},"body":{"modules/MailModule.html":{}}}],["add",{"_index":668,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["address",{"_index":286,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["adds",{"_index":746,"title":{},"body":{"injectables/FilesService.html":{}}}],["admin",{"_index":654,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["admin@gmail.com",{"_index":528,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["admin_permissions",{"_index":627,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin_role",{"_index":626,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminrole",{"_index":669,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["adminrole?._id",{"_index":678,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["age",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["aliases",{"_index":1681,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowedfiletypes",{"_index":1103,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["allowedfiletypes.includes(fileextension",{"_index":1114,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["already",{"_index":687,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/MulterConfigService.html":{}}}],["amazing",{"_index":1652,"title":{},"body":{"index.html":{}}}],["api",{"_index":403,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["api/v1/auth/account",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/auth/logout",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/companies/:id",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/files/upload",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/jobs/:id",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/permissions/:id",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/:id",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/resumes/by",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/roles/:id",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api/v1/users/:id",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibody",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{}}}],["apipath",{"_index":562,"title":{},"body":{"classes/CreatePermissionDto.html":{},"interfaces/IUser.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"classes/UpdatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":522,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["apitags",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":182,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('companies",{"_index":364,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["apitags('databases",{"_index":605,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["apitags('files",{"_index":718,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('jobs",{"_index":828,"title":{},"body":{"controllers/JobsController.html":{}}}],["apitags('mail",{"_index":978,"title":{},"body":{"controllers/MailController.html":{}}}],["apitags('permissions",{"_index":1148,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["apitags('resumes",{"_index":1245,"title":{},"body":{"controllers/ResumesController.html":{}}}],["apitags('roles",{"_index":1320,"title":{},"body":{"controllers/RolesController.html":{}}}],["apitags('subscribers",{"_index":1388,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["apitags('users",{"_index":1489,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1007,"title":{},"body":{"controllers/MailController.html":{},"index.html":{}}}],["app.controller",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1624,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqp",{"_index":402,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["aqp(qs",{"_index":412,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["argumentshost",{"_index":771,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["async",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailModule.html":{}}}],["auth.controller",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard.ts",{"_index":871,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:13",{"_index":877,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:17",{"_index":880,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:30",{"_index":883,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:31",{"_index":905,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:36",{"_index":912,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:38",{"_index":915,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:47",{"_index":917,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":113,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":887,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":872,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":952,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":40,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1660,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":164,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":1672,"title":{},"body":{"modules.html":{}}}],["await",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":1653,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('không",{"_index":1353,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception('not",{"_index":1348,"title":{},"body":{"injectables/RolesService.html":{}}}],["badrequestexception(`email",{"_index":1537,"title":{},"body":{"injectables/UsersService.html":{}}}],["badrequestexception(`refresh",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["ban",{"_index":442,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["basename",{"_index":1098,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["bcryptjs",{"_index":1526,"title":{},"body":{"injectables/UsersService.html":{},"dependencies.html":{}}}],["bearer",{"_index":929,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["body",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":469,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/Job.html":{},"classes/Role.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateRoleDto.html":{},"classes/User.html":{}}}],["boolean(isinit",{"_index":640,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bootstrap",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["break",{"_index":1072,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["browse",{"_index":1670,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1668,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1015,"title":{},"body":{"controllers/MailController.html":{}}}],["building",{"_index":1620,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":649,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["bạn",{"_index":923,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["c",{"_index":866,"title":{},"body":{"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["callhandler",{"_index":1191,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":873,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":878,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["case",{"_index":1067,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["catch",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":768,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":775,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cb",{"_index":1084,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["cb(null",{"_index":1088,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ch",{"_index":666,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["check",{"_index":752,"title":{},"body":{"controllers/HealthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["chưa",{"_index":865,"title":{},"body":{"injectables/JobsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["class",{"_index":21,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":454,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/File.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":214,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":215,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_companiesmodule",{"_index":383,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_companiesmodule_providers",{"_index":384,"title":{},"body":{"modules/CompaniesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule",{"_index":607,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_databasesmodule_providers",{"_index":608,"title":{},"body":{"modules/DatabasesModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":730,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":731,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_jobsmodule",{"_index":835,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_jobsmodule_providers",{"_index":836,"title":{},"body":{"modules/JobsModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":1016,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":1017,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule",{"_index":1155,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_permissionsmodule_providers",{"_index":1156,"title":{},"body":{"modules/PermissionsModule.html":{},"overview.html":{}}}],["cluster_resumesmodule",{"_index":1254,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_resumesmodule_providers",{"_index":1255,"title":{},"body":{"modules/ResumesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule",{"_index":1327,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_exports",{"_index":1329,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_rolesmodule_providers",{"_index":1328,"title":{},"body":{"modules/RolesModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule",{"_index":1399,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_subscribersmodule_providers",{"_index":1400,"title":{},"body":{"modules/SubscribersModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1496,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1497,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1498,"title":{},"body":{"modules/UsersModule.html":{}}}],["code",{"_index":427,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["companies",{"_index":327,"title":{},"body":{"controllers/CompaniesController.html":{},"miscellaneous/variables.html":{}}}],["companies.controller",{"_index":386,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["companies.service",{"_index":360,"title":{},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{}}}],["companies/companies.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["companiescontroller",{"_index":325,"title":{"controllers/CompaniesController.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"coverage.html":{}}}],["companiesmodule",{"_index":41,"title":{"modules/CompaniesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CompaniesModule.html":{},"modules.html":{},"overview.html":{}}}],["companiesservice",{"_index":359,"title":{"injectables/CompaniesService.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"coverage.html":{},"overview.html":{}}}],["company",{"_index":335,"title":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{}},"body":{"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["company.dto",{"_index":362,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts",{"_index":538,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["company.dto.ts:11",{"_index":541,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:13",{"_index":1432,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:5",{"_index":543,"title":{},"body":{"classes/CreateCompanyDto.html":{}}}],["company.dto.ts:7",{"_index":542,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.dto.ts:9",{"_index":540,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{}}}],["company.name",{"_index":389,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{}}}],["companydocument",{"_index":400,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"miscellaneous/typealiases.html":{}}}],["companyid",{"_index":572,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["companymodel",{"_index":394,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["companyschema",{"_index":387,"title":{},"body":{"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["comparesync",{"_index":1523,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparesync(password",{"_index":1540,"title":{},"body":{"injectables/UsersService.html":{}}}],["configmodule",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{}}}],["configservice.get('email_auth_pass",{"_index":1033,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_auth_user",{"_index":1032,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_host",{"_index":1028,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('email_preview",{"_index":1041,"title":{},"body":{"modules/MailModule.html":{}}}],["configservice.get('jwt_access_token_secret",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configservice.get('mongo_uri",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["confirm",{"_index":1008,"title":{},"body":{"controllers/MailController.html":{}}}],["connection",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["connection.plugin(softdeleteplugin",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["connectionfactory",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["console.error(error",{"_index":1081,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["console.log",{"_index":651,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/ResumesService.html":{}}}],["console.log('directory",{"_index":1061,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["const",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":954,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(companymodel",{"_index":391,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["constructor(configservice",{"_index":934,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(jobmodel",{"_index":842,"title":{},"body":{"injectables/JobsService.html":{}}}],["constructor(permissionmodel",{"_index":1161,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["constructor(reflector",{"_index":875,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformInterceptor.html":{}}}],["constructor(resumemodel",{"_index":1261,"title":{},"body":{"injectables/ResumesService.html":{}}}],["constructor(rolemodel",{"_index":1334,"title":{},"body":{"injectables/RolesService.html":{}}}],["constructor(subscribermodel",{"_index":1406,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["constructor(usermodel",{"_index":618,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["contains",{"_index":1076,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["content",{"_index":1013,"title":{},"body":{"controllers/MailController.html":{}}}],["context",{"_index":881,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.getclass",{"_index":902,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":901,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1201,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('companies",{"_index":365,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["controller('databases",{"_index":606,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["controller('files",{"_index":719,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('health",{"_index":759,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('jobs",{"_index":829,"title":{},"body":{"controllers/JobsController.html":{}}}],["controller('mail",{"_index":979,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('permissions",{"_index":1149,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["controller('resumes",{"_index":1246,"title":{},"body":{"controllers/ResumesController.html":{}}}],["controller('roles",{"_index":1321,"title":{},"body":{"controllers/RolesController.html":{}}}],["controller('subscribers",{"_index":1389,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["controller('users",{"_index":1490,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["countpermission",{"_index":643,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countrole",{"_index":645,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["countuser",{"_index":641,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["coverage",{"_index":1547,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":328,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-2.html":{},"classes/Company-4.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":367,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["create(createcompanydto",{"_index":332,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{}}}],["create(createfiledto",{"_index":739,"title":{},"body":{"injectables/FilesService.html":{}}}],["create(createjobdto",{"_index":820,"title":{},"body":{"controllers/JobsController.html":{},"injectables/JobsService.html":{}}}],["create(createpermissiondto",{"_index":1135,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["create(createresumedto",{"_index":1230,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["create(createroledto",{"_index":1310,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{}}}],["create(createsubscriberdto",{"_index":1370,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["create(createuserdto",{"_index":1481,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createcompanydto",{"_index":333,"title":{"classes/CreateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/CreateCompanyDto.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["created",{"_index":1063,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createdat",{"_index":428,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":407,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["createfiledto",{"_index":544,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createjobdto",{"_index":491,"title":{"classes/CreateJobDto.html":{}},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":1046,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["createparamdecorator",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createpermissiondto",{"_index":559,"title":{"classes/CreatePermissionDto.html":{}},"body":{"classes/CreatePermissionDto.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["createrefreshtoken",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{}}}],["createresumedto",{"_index":569,"title":{"classes/CreateResumeDto.html":{}},"body":{"classes/CreateResumeDto.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["createroledto",{"_index":578,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["createsubscriberdto",{"_index":585,"title":{"classes/CreateSubscriberDto.html":{}},"body":{"classes/CreateSubscriberDto.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":525,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["cron",{"_index":977,"title":{},"body":{"controllers/MailController.html":{},"dependencies.html":{}}}],["cron('0",{"_index":983,"title":{},"body":{"controllers/MailController.html":{}}}],["ctx",{"_index":776,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getrequest",{"_index":779,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":778,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":344,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["customize",{"_index":790,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["cần",{"_index":667,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["cập",{"_index":925,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["data",{"_index":689,"title":{},"body":{"injectables/DatabasesService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["databases",{"_index":602,"title":{},"body":{"controllers/DatabasesController.html":{}}}],["databases.controller",{"_index":610,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["databases.service",{"_index":604,"title":{},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{}}}],["databases.service.ts:49",{"_index":652,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["databases/databases.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["databasescontroller",{"_index":600,"title":{"controllers/DatabasesController.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"coverage.html":{}}}],["databasesmodule",{"_index":42,"title":{"modules/DatabasesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabasesModule.html":{},"modules.html":{},"overview.html":{}}}],["databasesservice",{"_index":603,"title":{"injectables/DatabasesService.html":{}},"body":{"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":461,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateJobDto.html":{},"classes/User.html":{}}}],["date().toisostring",{"_index":785,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.now()}${extname",{"_index":1101,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["day",{"_index":985,"title":{},"body":{"controllers/MailController.html":{}}}],["db",{"_index":760,"title":{},"body":{"controllers/HealthController.html":{}}}],["declarations",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultlimit",{"_index":417,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":379,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@responsemessage('create",{"_index":1141,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["delete(':id')@responsemessage('delete",{"_index":350,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["deletedat",{"_index":796,"title":{},"body":{"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["deletedby",{"_index":452,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["denied",{"_index":1080,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":456,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserLoginDto.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":1083,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["development",{"_index":1632,"title":{},"body":{"index.html":{}}}],["dir",{"_index":1034,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{}}}],["directory",{"_index":1071,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["diskstorage",{"_index":1056,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["doc",{"_index":1109,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["documentation",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["docx",{"_index":1110,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["dotenv",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["dto/create",{"_index":361,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":363,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dùng/ứng",{"_index":660,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["dụng",{"_index":663,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["e2e",{"_index":1642,"title":{},"body":{"index.html":{}}}],["eexist",{"_index":1068,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["efficient",{"_index":1621,"title":{},"body":{"index.html":{}}}],["ejs",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["email')@cron('0",{"_index":965,"title":{},"body":{"controllers/MailController.html":{}}}],["email'})@isemail",{"_index":594,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["end",{"_index":502,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"injectables/JwtAuthGuard.html":{},"classes/UpdateJobDto.html":{}}}],["enddate",{"_index":503,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["enotdir",{"_index":1073,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists",{"_index":1047,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ensureexists(targetdirectory",{"_index":1050,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["enter",{"_index":494,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["err",{"_index":884,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["error",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["error.code",{"_index":1066,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["example",{"_index":527,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["exception",{"_index":773,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.filter",{"_index":717,"title":{},"body":{"controllers/FilesController.html":{}}}],["exception.filter.ts",{"_index":766,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:11",{"_index":772,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exception.getstatus",{"_index":781,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":767,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["excutioncontext",{"_index":895,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exec",{"_index":436,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":879,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existingpermisson",{"_index":1168,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["existingresume",{"_index":1281,"title":{},"body":{"injectables/ResumesService.html":{}}}],["existingresume.history",{"_index":1285,"title":{},"body":{"injectables/ResumesService.html":{}}}],["exists",{"_index":1064,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["expiresin",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":701,"title":{},"body":{"controllers/FilesController.html":{}}}],["extends",{"_index":515,"title":{},"body":{"classes/Company-2.html":{},"classes/Company-4.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["extension",{"_index":1093,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extname",{"_index":1094,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["extractjwt",{"_index":938,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":943,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":945,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1293,"title":{},"body":{"injectables/ResumesService.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file.dto",{"_index":713,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":546,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":724,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.originalname.split('.').pop().tolowercase",{"_index":1112,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileextension",{"_index":1111,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filefilter",{"_index":1102,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fileinterceptor",{"_index":714,"title":{},"body":{"controllers/FilesController.html":{}}}],["filename",{"_index":1091,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["files",{"_index":693,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"miscellaneous/variables.html":{}}}],["files.controller",{"_index":733,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.service",{"_index":712,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["filescontroller",{"_index":691,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesize",{"_index":1118,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["filesmodule",{"_index":43,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":711,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filter",{"_index":409,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.current",{"_index":413,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["filter.pagesize",{"_index":414,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["finalname",{"_index":1100,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["find",{"_index":1290,"title":{},"body":{"injectables/ResumesService.html":{}}}],["find(filter",{"_index":431,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["findall",{"_index":329,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findall(current",{"_index":337,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":330,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":373,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":345,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyuser",{"_index":1229,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{}}}],["findonebyuser(@user",{"_index":1250,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findonebyuser(user",{"_index":1235,"title":{},"body":{"controllers/ResumesController.html":{}}}],["findonebyusername",{"_index":1507,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyusername(username",{"_index":1513,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbytoken",{"_index":1503,"title":{},"body":{"injectables/UsersService.html":{}}}],["folder",{"_index":1085,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["forbiddenexception",{"_index":885,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["found",{"_index":448,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["foundrole",{"_index":1350,"title":{},"body":{"injectables/RolesService.html":{}}}],["foundrole.name",{"_index":1352,"title":{},"body":{"injectables/RolesService.html":{}}}],["founduser",{"_index":1542,"title":{},"body":{"injectables/UsersService.html":{}}}],["founduser.email",{"_index":1544,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":1619,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1055,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["fs.mkdir(targetdirectory",{"_index":1059,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["full",{"_index":656,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["function",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1613,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["gensaltsync",{"_index":1524,"title":{},"body":{"injectables/UsersService.html":{}}}],["gensaltsync(10",{"_index":1528,"title":{},"body":{"injectables/UsersService.html":{}}}],["get('/account",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('/refresh",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{}}}],["get(':id",{"_index":372,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@public()@responsemessage('get",{"_index":346,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["get(':id')@responsemessage('get",{"_index":1139,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["get()@public()@healthcheck",{"_index":753,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@public()@responsemessage('get",{"_index":341,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/SubscribersController.html":{}}}],["get()@public()@responsemessage('test",{"_index":964,"title":{},"body":{"controllers/MailController.html":{}}}],["get()@responsemessage('create",{"_index":1137,"title":{},"body":{"controllers/PermissionsController.html":{},"controllers/RolesController.html":{}}}],["get()@responsemessage('get",{"_index":1232,"title":{},"body":{"controllers/ResumesController.html":{},"controllers/UsersController.html":{}}}],["gethashpassword",{"_index":1504,"title":{},"body":{"injectables/UsersService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getrootpath",{"_index":1045,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["getskills",{"_index":1405,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getskills(user",{"_index":1411,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["getting",{"_index":1615,"title":{"index.html":{}},"body":{}}],["getuserskill",{"_index":1369,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskill(@user",{"_index":1394,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["getuserskill(user",{"_index":1374,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["ghi",{"_index":443,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["gian",{"_index":891,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["gif",{"_index":1107,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["graph",{"_index":1671,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1649,"title":{},"body":{"index.html":{}}}],["h",{"_index":664,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["handlebars",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":1021,"title":{},"body":{"modules/MailModule.html":{}}}],["handlegetaccount",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(@user",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlegetaccount(user",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(@req",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogin(req",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogoutaccount",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlelogoutaccount(user",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshaccount",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerefreshaccount(request",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(@body",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["handleregister(registerdto",{"_index":151,"title":{},"body":{"controllers/AuthController.html":{}}}],["handlerequest",{"_index":874,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":882,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletestemail",{"_index":963,"title":{},"body":{"controllers/MailController.html":{}}}],["hash",{"_index":1529,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashpassword",{"_index":1531,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync",{"_index":1525,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashsync(password",{"_index":1530,"title":{},"body":{"injectables/UsersService.html":{}}}],["header",{"_index":930,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["health",{"_index":751,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":764,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcheck",{"_index":755,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":756,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":749,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":44,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":111,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":1657,"title":{},"body":{"index.html":{}}}],["hien",{"_index":439,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["hierarchy",{"_index":1075,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["history",{"_index":1205,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["host",{"_index":770,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{}}}],["host.switchtohttp",{"_index":777,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["html",{"_index":1012,"title":{},"body":{"controllers/MailController.html":{}}}],["httpexception",{"_index":769,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["httpexceptionfilter",{"_index":704,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["httponly",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["https://nestjs.com",{"_index":1664,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":710,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterConfigService.html":{}}}],["httpstatus.unprocessable_entity",{"_index":1116,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["hydrateddocument",{"_index":476,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["hợp",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["i'm",{"_index":672,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["id",{"_index":347,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":425,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ignoreexpiration",{"_index":944,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["image",{"_index":1092,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["image's",{"_index":1096,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["implements",{"_index":634,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":688,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["inject",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["injectable",{"_index":107,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":108,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":401,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(company.name",{"_index":405,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["injectmodel(job.name",{"_index":850,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["injectmodel(permission.name",{"_index":636,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["injectmodel(resume.name",{"_index":1270,"title":{},"body":{"injectables/ResumesService.html":{}}}],["injectmodel(role.name",{"_index":637,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(subscriber.name",{"_index":980,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["injectmodel(user.name",{"_index":635,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":1629,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1631,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1197,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(context",{"_index":1428,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":791,"title":{"interfaces/IUser.html":{},"interfaces/Response.html":{}},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":792,"title":{},"body":{"interfaces/IUser.html":{},"interfaces/Response.html":{},"overview.html":{}}}],["invalid",{"_index":1115,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["is_public_key",{"_index":888,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_public_permission",{"_index":889,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":504,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["isdeleted",{"_index":457,"title":{},"body":{"classes/Company.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["isemail",{"_index":523,"title":{},"body":{"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isexist",{"_index":918,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/UsersService.html":{}}}],["isglobal",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["isinit",{"_index":638,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["isnotempty",{"_index":482,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotempty({message",{"_index":539,"title":{},"body":{"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["isnotempty({message:\"please",{"_index":568,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["isnotemptyobject",{"_index":487,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isnotemptyobject()@isobject()@validatenested()@type(undefined",{"_index":547,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{}}}],["isobject",{"_index":488,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["ispublic",{"_index":899,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["ispublicpermission",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iss",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["isskippermission",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["isstring",{"_index":524,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({example",{"_index":1475,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["isvalid",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["isvalidfiletype",{"_index":1113,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["isvalidpassword",{"_index":1505,"title":{},"body":{"injectables/UsersService.html":{}}}],["it's",{"_index":1070,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["item.company.name",{"_index":996,"title":{},"body":{"controllers/MailController.html":{}}}],["item.name",{"_index":995,"title":{},"body":{"controllers/MailController.html":{}}}],["item.salary}`.replace(/\\b(?=(\\d{3})+(?!\\d))/g",{"_index":997,"title":{},"body":{"controllers/MailController.html":{}}}],["item.skills",{"_index":998,"title":{},"body":{"controllers/MailController.html":{}}}],["iuser",{"_index":123,"title":{"interfaces/IUser.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"interfaces/IUser.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["job",{"_index":794,"title":{"classes/Job.html":{}},"body":{"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["job.dto",{"_index":513,"title":{},"body":{"classes/Company-2.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts",{"_index":481,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["job.dto.ts:12",{"_index":483,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:13",{"_index":507,"title":{},"body":{"classes/Company-2.html":{}}}],["job.dto.ts:14",{"_index":485,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:15",{"_index":509,"title":{},"body":{"classes/Company-2.html":{}}}],["job.dto.ts:16",{"_index":484,"title":{},"body":{"classes/Company-1.html":{}}}],["job.dto.ts:17",{"_index":508,"title":{},"body":{"classes/Company-2.html":{}}}],["job.dto.ts:20",{"_index":554,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:21",{"_index":1436,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["job.dto.ts:22",{"_index":557,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.dto.ts:23",{"_index":1437,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["job.dto.ts:24",{"_index":553,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:26",{"_index":556,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:28",{"_index":555,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:30",{"_index":552,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:32",{"_index":549,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:37",{"_index":548,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:39",{"_index":558,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:41",{"_index":550,"title":{},"body":{"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{}}}],["job.dto.ts:42",{"_index":1435,"title":{},"body":{"classes/UpdateJobDto.html":{}}}],["job.dto.ts:43",{"_index":551,"title":{},"body":{"classes/CreateJobDto.html":{}}}],["job.name",{"_index":840,"title":{},"body":{"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{}}}],["jobdocument",{"_index":814,"title":{},"body":{"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"miscellaneous/typealiases.html":{}}}],["jobid",{"_index":573,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["jobmodel",{"_index":844,"title":{},"body":{"injectables/JobsService.html":{},"controllers/MailController.html":{}}}],["jobs",{"_index":819,"title":{},"body":{"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["jobs.controller",{"_index":838,"title":{},"body":{"modules/JobsModule.html":{}}}],["jobs.service",{"_index":827,"title":{},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{}}}],["jobs/jobs.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["jobschema",{"_index":815,"title":{},"body":{"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jobscontroller",{"_index":817,"title":{"controllers/JobsController.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"coverage.html":{}}}],["jobsmodule",{"_index":45,"title":{"modules/JobsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/JobsModule.html":{},"modules.html":{},"overview.html":{}}}],["jobsservice",{"_index":826,"title":{"injectables/JobsService.html":{}},"body":{"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"coverage.html":{},"overview.html":{}}}],["jobwithmatchingskills",{"_index":991,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills.map((item",{"_index":994,"title":{},"body":{"controllers/MailController.html":{}}}],["jobwithmatchingskills?.length",{"_index":993,"title":{},"body":{"controllers/MailController.html":{}}}],["join",{"_index":1023,"title":{},"body":{"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"index.html":{}}}],["join(__dirname",{"_index":1035,"title":{},"body":{"modules/MailModule.html":{}}}],["join(this.getrootpath",{"_index":1089,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpeg",{"_index":1105,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jpg",{"_index":1104,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["jwt",{"_index":904,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.stategy.ts:24",{"_index":948,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwt.stategy.ts:26",{"_index":950,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtauthguard",{"_index":869,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":942,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":217,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1661,"title":{},"body":{"index.html":{}}}],["khi",{"_index":893,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["khoan",{"_index":1545,"title":{},"body":{"injectables/UsersService.html":{}}}],["khác",{"_index":1173,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["không",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["l",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["large",{"_index":789,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["lay",{"_index":906,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["legend",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["level",{"_index":499,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["license",{"_index":1667,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1646,"title":{},"body":{"index.html":{}}}],["limit",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["limit(defaultlimit",{"_index":433,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["limits",{"_index":1117,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["literal",{"_index":463,"title":{},"body":{"classes/Company.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["local",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":161,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":218,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location",{"_index":496,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"classes/UpdateJobDto.html":{}}}],["logger",{"_index":616,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["logger(databasesservice.name",{"_index":625,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["login",{"_index":248,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(user",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["logo",{"_index":458,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["logout",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["logout(user",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["luong",{"_index":441,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["lòng",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{}}}],["lấy",{"_index":897,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["lệ/không",{"_index":928,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["m",{"_index":864,"title":{},"body":{"injectables/JobsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mail",{"_index":962,"title":{},"body":{"controllers/MailController.html":{}}}],["mail.controller",{"_index":1019,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":968,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":960,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":1020,"title":{},"body":{"modules/MailModule.html":{}}}],["mailermodule.forrootasync",{"_index":1025,"title":{},"body":{"modules/MailModule.html":{}}}],["mailerservice",{"_index":969,"title":{},"body":{"controllers/MailController.html":{}}}],["mailmodule",{"_index":46,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules.html":{},"overview.html":{}}}],["mailservice",{"_index":967,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"coverage.html":{},"overview.html":{}}}],["male",{"_index":676,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["map",{"_index":1193,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["map((data",{"_index":1200,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(totalitems",{"_index":422,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["maxage",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{}}}],["message",{"_index":492,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"miscellaneous/variables.html":{}}}],["meta",{"_index":437,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["metadata",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":563,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"classes/UpdatePermissionDto.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miliseconds",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["miscellaneous",{"_index":1612,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1645,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1635,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/CreatePermissionDto.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"interfaces/IUser.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"modules/SubscribersModule.html":{},"classes/UpdatePermissionDto.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/HealthModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":971,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["modules/mailer/dist/adapters/handlebars.adapter",{"_index":1022,"title":{},"body":{"modules/MailModule.html":{}}}],["mongoose",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":478,"title":{},"body":{"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/RegisterUserDto.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{}}}],["mongoose.types.objectid.isvalid(id",{"_index":447,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["mongoosehealthindicator",{"_index":757,"title":{},"body":{"controllers/HealthController.html":{}}}],["mongoosemodule",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1656,"title":{},"body":{"index.html":{}}}],["ms",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["ms(configservice.get('jwt_access_expire",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["ms(this.configservice.get('jwt_refresh_expire",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["multer",{"_index":1057,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multer.config",{"_index":736,"title":{},"body":{"modules/FilesModule.html":{}}}],["multerconfigservice",{"_index":735,"title":{"injectables/MulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["multermodule",{"_index":734,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":737,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":1049,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":1054,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["myśliwiec",{"_index":1662,"title":{},"body":{"index.html":{}}}],["mình",{"_index":896,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["name",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1625,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1666,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1190,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":970,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JwtStrategy.html":{},"modules/MailModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":511,"title":{},"body":{"classes/Company-2.html":{},"classes/Company-4.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":715,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/MulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/schedule",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/MailController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":758,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["new",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newhistoryentry",{"_index":1282,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newjob",{"_index":851,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob._id",{"_index":853,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjob.createdat",{"_index":854,"title":{},"body":{"injectables/JobsService.html":{}}}],["newjobupdate",{"_index":860,"title":{},"body":{"injectables/JobsService.html":{}}}],["newpermission",{"_index":1174,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission._id",{"_index":1176,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermission.createdat",{"_index":1177,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["newpermissionupdate",{"_index":1180,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/RolesService.html":{}}}],["newresume",{"_index":1271,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume._id",{"_index":1274,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresume.createdat",{"_index":1275,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newresumeupdate",{"_index":1286,"title":{},"body":{"injectables/ResumesService.html":{}}}],["newrole",{"_index":1342,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole._id",{"_index":1344,"title":{},"body":{"injectables/RolesService.html":{}}}],["newrole.createdat",{"_index":1345,"title":{},"body":{"injectables/RolesService.html":{}}}],["newsubscriber",{"_index":1415,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber._id",{"_index":1417,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriber.createdat",{"_index":1418,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newsubscriberupdate",{"_index":1422,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["newuser",{"_index":1533,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser._id",{"_index":1535,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1198,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1199,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["ng",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["người",{"_index":659,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["nhập",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{}}}],["nice",{"_index":1006,"title":{},"body":{"controllers/MailController.html":{}}}],["node.js",{"_index":1618,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["normal",{"_index":683,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["normal_user",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1630,"title":{},"body":{"index.html":{}}}],["null",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MulterConfigService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":338,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"injectables/FilesService.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["này",{"_index":927,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["nếu",{"_index":863,"title":{},"body":{"injectables/JobsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":465,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["objuser",{"_index":278,"title":{},"body":{"injectables/AuthService.html":{}}}],["observable",{"_index":1192,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["offset",{"_index":415,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["onmoduleinit",{"_index":617,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["open",{"_index":1647,"title":{},"body":{"index.html":{}}}],["optional",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":1038,"title":{},"body":{"modules/MailModule.html":{}}}],["out",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["override",{"_index":1003,"title":{},"body":{"controllers/MailController.html":{}}}],["overview",{"_index":1673,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1574,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":444,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["pagesize",{"_index":339,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["paginate",{"_index":342,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":357,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["param('id",{"_index":377,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":404,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["parent",{"_index":1074,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["parsefilepipebuilder",{"_index":709,"title":{},"body":{"controllers/FilesController.html":{}}}],["parser",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":510,"title":{},"body":{"classes/Company-2.html":{},"classes/Company-4.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcompanydto",{"_index":1431,"title":{},"body":{"classes/UpdateCompanyDto.html":{}}}],["partialtype(createfiledto",{"_index":1434,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createjobdto",{"_index":516,"title":{},"body":{"classes/Company-2.html":{},"classes/UpdateJobDto.html":{}}}],["partialtype(createpermissiondto",{"_index":1439,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["partialtype(createresumedto",{"_index":1442,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["partialtype(createroledto",{"_index":1445,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["partialtype(createsubscriberdto",{"_index":1448,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["partialtype(createuserdto",{"_index":536,"title":{},"body":{"classes/Company-4.html":{},"classes/UpdateUserDto.html":{}}}],["pass",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"modules/MailModule.html":{}}}],["passport",{"_index":940,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passport/jwt.stategy",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{}}}],["passport/local.stategy",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":941,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":932,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passthrough",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["password",{"_index":526,"title":{},"body":{"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["patch",{"_index":356,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["patch(':id",{"_index":375,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@responsemessage('update",{"_index":354,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{}}}],["patch()@skipcheckpermission()@responsemessage('update",{"_index":1382,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["path",{"_index":786,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["path.basename(file.originalname",{"_index":1099,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["path.extname(file.originalname",{"_index":1095,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["paylay",{"_index":788,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["payload",{"_index":287,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["pdf",{"_index":1108,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["pending",{"_index":1273,"title":{},"body":{"injectables/ResumesService.html":{}}}],["permission",{"_index":611,"title":{"classes/Permission.html":{}},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.dto",{"_index":1147,"title":{},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts",{"_index":561,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["permission.dto.ts:11",{"_index":566,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts:13",{"_index":1440,"title":{},"body":{"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts:5",{"_index":567,"title":{},"body":{"classes/CreatePermissionDto.html":{}}}],["permission.dto.ts:7",{"_index":564,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.dto.ts:9",{"_index":565,"title":{},"body":{"classes/CreatePermissionDto.html":{},"classes/UpdatePermissionDto.html":{}}}],["permission.name",{"_index":614,"title":{},"body":{"modules/DatabasesModule.html":{},"modules/PermissionsModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{}}}],["permissiondocument",{"_index":632,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"miscellaneous/typealiases.html":{}}}],["permissionmodel",{"_index":619,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/PermissionsService.html":{}}}],["permissions",{"_index":280,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/PermissionsController.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"miscellaneous/variables.html":{}}}],["permissions.apipath",{"_index":921,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.controller",{"_index":1158,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["permissions.find",{"_index":919,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.method",{"_index":920,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["permissions.service",{"_index":1146,"title":{},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{}}}],["permissions/permissions.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["permissionschema",{"_index":612,"title":{},"body":{"modules/DatabasesModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"modules/RolesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permissionscontroller",{"_index":1133,"title":{"controllers/PermissionsController.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"coverage.html":{}}}],["permissionsmodule",{"_index":47,"title":{"modules/PermissionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PermissionsModule.html":{},"modules.html":{},"overview.html":{}}}],["permissionsservice",{"_index":1145,"title":{"injectables/PermissionsService.html":{}},"body":{"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"coverage.html":{},"overview.html":{}}}],["phucdev2305@gmail.com",{"_index":1000,"title":{},"body":{"controllers/MailController.html":{}}}],["phúc",{"_index":680,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["please",{"_index":493,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"index.html":{}}}],["plugin",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["png",{"_index":1106,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["point",{"_index":926,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["populate",{"_index":1292,"title":{},"body":{"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["populate('companyid",{"_index":1291,"title":{},"body":{"injectables/ResumesService.html":{}}}],["populate('jobid",{"_index":1294,"title":{},"body":{"injectables/ResumesService.html":{}}}],["populate(population",{"_index":435,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["population",{"_index":411,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["port",{"_index":1030,"title":{},"body":{"modules/MailModule.html":{}}}],["post",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["post('/login",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/logout",{"_index":212,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/register",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('by",{"_index":1236,"title":{},"body":{"controllers/ResumesController.html":{}}}],["post('skills",{"_index":1392,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('skills')@responsemessage('get",{"_index":1375,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["post('upload",{"_index":720,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('upload')@responsemessage('post",{"_index":702,"title":{},"body":{"controllers/FilesController.html":{}}}],["post()@responsemessage('create",{"_index":334,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["post()@responsemessage('get",{"_index":1311,"title":{},"body":{"controllers/RolesController.html":{}}}],["prefix",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/DatabasesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["preview",{"_index":1040,"title":{},"body":{"modules/MailModule.html":{}}}],["private",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/HealthController.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["process.cwd",{"_index":1058,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["processnewtoken",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["processnewtoken(refreshtoken",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["production",{"_index":1637,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":1617,"title":{},"body":{"index.html":{}}}],["project",{"_index":1648,"title":{},"body":{"index.html":{}}}],["projection",{"_index":1276,"title":{},"body":{"injectables/ResumesService.html":{}}}],["promise",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{}}}],["prop",{"_index":459,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["prop({type",{"_index":464,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["properties",{"_index":246,"title":{"properties.html":{}},"body":{"injectables/AuthService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@post('/register')@responsemessage('register",{"_index":153,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@responsemessage('refresh",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@useguards(throttlerguard)@useguards(localauthguard)@throttle({default",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["public/images/${folder",{"_index":1090,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["qs",{"_index":340,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":498,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{}}}],["query",{"_index":358,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["query('current",{"_index":369,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["query('pagesize",{"_index":370,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["quyền",{"_index":657,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JwtAuthGuard.html":{}}}],["read",{"_index":1655,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CompaniesController.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"classes/RegisterUserDto.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{}}}],["receiver",{"_index":1010,"title":{},"body":{"controllers/MailController.html":{}}}],["recursive",{"_index":1060,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ref",{"_index":1208,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["reflect",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":876,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["refresh",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["refresh_token",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["register",{"_index":1508,"title":{},"body":{"injectables/UsersService.html":{}}}],["register(registeruserdto",{"_index":1515,"title":{},"body":{"injectables/UsersService.html":{}}}],["registerdto",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["registeruserdto",{"_index":152,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["remove",{"_index":331,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":381,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":349,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":748,"title":{},"body":{"injectables/FilesService.html":{}}}],["repository",{"_index":1628,"title":{},"body":{"index.html":{}}}],["req",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/MulterConfigService.html":{}}}],["req.user",{"_index":898,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["req?.headers?.folder_type",{"_index":1086,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["request",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"classes/HttpExceptionFilter.html":{},"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["request.cookies['refresh_token",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.method",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["request.url",{"_index":787,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.user",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request?.route?.path",{"_index":914,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["requested",{"_index":1069,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["res",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["reset",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":135,"title":{"interfaces/Response.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["response.clearcookie('refresh_token",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.cookie('refresh_token",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.status(status).json",{"_index":782,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response_message",{"_index":1195,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["responsemessage(\"get",{"_index":1393,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["responsemessage('create",{"_index":366,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('delete",{"_index":380,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/ResumesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('get",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["responsemessage('login",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('logout",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('post",{"_index":721,"title":{},"body":{"controllers/FilesController.html":{}}}],["responsemessage('refresh",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('register",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["responsemessage('test",{"_index":982,"title":{},"body":{"controllers/MailController.html":{}}}],["responsemessage('update",{"_index":376,"title":{},"body":{"controllers/CompaniesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["result",{"_index":429,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resume",{"_index":1203,"title":{"classes/Resume.html":{}},"body":{"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resume.dto",{"_index":1244,"title":{},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts",{"_index":571,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["resume.dto.ts:10",{"_index":576,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:6",{"_index":577,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.dto.ts:7",{"_index":1443,"title":{},"body":{"classes/UpdateResumeDto.html":{}}}],["resume.dto.ts:8",{"_index":575,"title":{},"body":{"classes/CreateResumeDto.html":{}}}],["resume.name",{"_index":1259,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumedocument",{"_index":1223,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{},"miscellaneous/typealiases.html":{}}}],["resumemodel",{"_index":1263,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes",{"_index":1228,"title":{},"body":{"controllers/ResumesController.html":{},"miscellaneous/variables.html":{}}}],["resumes.controller",{"_index":1257,"title":{},"body":{"modules/ResumesModule.html":{}}}],["resumes.service",{"_index":1243,"title":{},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{}}}],["resumes.service.ts:149",{"_index":1289,"title":{},"body":{"injectables/ResumesService.html":{}}}],["resumes/resumes.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["resumeschema",{"_index":1224,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resumescontroller",{"_index":1226,"title":{"controllers/ResumesController.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"coverage.html":{}}}],["resumesmodule",{"_index":48,"title":{"modules/ResumesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResumesModule.html":{},"modules.html":{},"overview.html":{}}}],["resumesservice",{"_index":1242,"title":{"injectables/ResumesService.html":{}},"body":{"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionFilter.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"injectables/MulterConfigService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":231,"title":{"classes/Role.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"interfaces/IUser.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.dto",{"_index":1319,"title":{},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts",{"_index":580,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:10",{"_index":584,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:12",{"_index":582,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:14",{"_index":1446,"title":{},"body":{"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:6",{"_index":583,"title":{},"body":{"classes/CreateRoleDto.html":{}}}],["role.dto.ts:8",{"_index":581,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.name",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/RolesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["roledocument",{"_index":633,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["rolemodel",{"_index":620,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["roles",{"_index":1309,"title":{},"body":{"controllers/RolesController.html":{},"miscellaneous/variables.html":{}}}],["roles.controller",{"_index":1331,"title":{},"body":{"modules/RolesModule.html":{}}}],["roles.service",{"_index":1318,"title":{},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{}}}],["roles/roles.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["roleschema",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolescontroller",{"_index":1307,"title":{"controllers/RolesController.html":{}},"body":{"controllers/RolesController.html":{},"modules/RolesModule.html":{},"coverage.html":{}}}],["rolesmodule",{"_index":49,"title":{"modules/RolesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/RolesModule.html":{},"modules.html":{},"overview.html":{}}}],["rolesservice",{"_index":176,"title":{"injectables/RolesService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"coverage.html":{},"overview.html":{}}}],["run",{"_index":1633,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":975,"title":{},"body":{"controllers/MailController.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1194,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s",{"_index":662,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["salary",{"_index":497,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/UpdateJobDto.html":{}}}],["salt",{"_index":1527,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":1077,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["sample",{"_index":630,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["scalable",{"_index":1622,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["schema",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"classes/Company.html":{},"modules/DatabasesModule.html":{},"classes/Job.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"classes/Permission.html":{},"modules/PermissionsModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{},"classes/Role.html":{},"modules/RolesModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schema/company.schema",{"_index":388,"title":{},"body":{"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{}}}],["schema/job.schema",{"_index":839,"title":{},"body":{"modules/JobsModule.html":{},"injectables/JobsService.html":{}}}],["schema/permission.schema",{"_index":1159,"title":{},"body":{"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{}}}],["schema/resume.schema",{"_index":1258,"title":{},"body":{"modules/ResumesModule.html":{},"injectables/ResumesService.html":{}}}],["schema/role.schema",{"_index":1332,"title":{},"body":{"modules/RolesModule.html":{},"injectables/RolesService.html":{}}}],["schema/subscriber.schema",{"_index":1403,"title":{},"body":{"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{}}}],["schema/user.schema",{"_index":1501,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["schemafactory",{"_index":475,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(company",{"_index":479,"title":{},"body":{"classes/Company.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(job",{"_index":816,"title":{},"body":{"classes/Job.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(permission",{"_index":1132,"title":{},"body":{"classes/Permission.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resume",{"_index":1225,"title":{},"body":{"classes/Resume.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(role",{"_index":1306,"title":{},"body":{"classes/Role.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(subscriber",{"_index":1366,"title":{},"body":{"classes/Subscriber.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1474,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":946,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["secure",{"_index":1029,"title":{},"body":{"modules/MailModule.html":{}}}],["select",{"_index":858,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["select(projection",{"_index":1279,"title":{},"body":{"injectables/ResumesService.html":{}}}],["server",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["set",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{}}}],["setmetadata(is_public_key",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_permission",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(response_message",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1623,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{}}}],["single",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skills",{"_index":495,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["skills')@skipcheckpermission",{"_index":1377,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["skip(offset",{"_index":432,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["skipcheckpermission",{"_index":1387,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["smtp",{"_index":1027,"title":{},"body":{"modules/MailModule.html":{}}}],["soft",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["softdeletemodel",{"_index":392,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"controllers/MailController.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["softdeleteplugin",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":410,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["sort(sort",{"_index":434,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"modules/CompaniesModule.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/DatabasesController.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/File.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"modules/JobsModule.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"modules/PermissionsModule.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"modules/ResumesModule.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"modules/RolesModule.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1651,"title":{},"body":{"index.html":{}}}],["src/.../company.schema.ts",{"_index":1682,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../customize.ts",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../job.schema.ts",{"_index":1683,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1614,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../permission.schema.ts",{"_index":1684,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../resume.schema.ts",{"_index":1685,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../role.schema.ts",{"_index":1686,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../sample.ts",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../subscriber.schema.ts",{"_index":1687,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1688,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":109,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":110,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:36",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:43",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:49",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:60",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:71",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:11",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:133",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:19",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:36",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:73",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:81",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":870,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local",{"_index":951,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.stategy.ts",{"_index":931,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/jwt.stategy.ts:20",{"_index":937,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/jwt.stategy.ts:8",{"_index":935,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/passport/local.stategy.ts",{"_index":953,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/passport/local.stategy.ts:13",{"_index":957,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/passport/local.stategy.ts:8",{"_index":955,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/companies/companies.controller.ts",{"_index":326,"title":{},"body":{"controllers/CompaniesController.html":{},"coverage.html":{}}}],["src/companies/companies.controller.ts:24",{"_index":336,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:31",{"_index":343,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:42",{"_index":348,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:48",{"_index":355,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.controller.ts:58",{"_index":351,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["src/companies/companies.module.ts",{"_index":385,"title":{},"body":{"modules/CompaniesModule.html":{}}}],["src/companies/companies.service.ts",{"_index":390,"title":{},"body":{"injectables/CompaniesService.html":{},"coverage.html":{}}}],["src/companies/companies.service.ts:12",{"_index":393,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:17",{"_index":395,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:27",{"_index":396,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:69",{"_index":397,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:76",{"_index":399,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/companies.service.ts:92",{"_index":398,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["src/companies/dto/create",{"_index":537,"title":{},"body":{"classes/CreateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/dto/update",{"_index":1430,"title":{},"body":{"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["src/companies/schema/company.schema",{"_index":1222,"title":{},"body":{"classes/Resume.html":{},"modules/ResumesModule.html":{}}}],["src/companies/schema/company.schema.ts",{"_index":455,"title":{},"body":{"classes/Company.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/companies/schema/company.schema.ts:11",{"_index":460,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:13",{"_index":471,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:15",{"_index":468,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:17",{"_index":462,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:19",{"_index":473,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:21",{"_index":470,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:23",{"_index":466,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:28",{"_index":467,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:33",{"_index":474,"title":{},"body":{"classes/Company.html":{}}}],["src/companies/schema/company.schema.ts:9",{"_index":472,"title":{},"body":{"classes/Company.html":{}}}],["src/core/http",{"_index":716,"title":{},"body":{"controllers/FilesController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts",{"_index":1189,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/core/transform.interceptor.ts:19",{"_index":1427,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/core/transform.interceptor.ts:21",{"_index":1429,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/databases/databases.controller.ts",{"_index":601,"title":{},"body":{"controllers/DatabasesController.html":{},"coverage.html":{}}}],["src/databases/databases.module.ts",{"_index":609,"title":{},"body":{"modules/DatabasesModule.html":{}}}],["src/databases/databases.service.ts",{"_index":615,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{}}}],["src/databases/databases.service.ts:17",{"_index":622,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/databases.service.ts:33",{"_index":624,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["src/databases/sample",{"_index":1341,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["src/databases/sample.ts",{"_index":1560,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/decorator/customize",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/HealthController.html":{},"controllers/JobsController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/MailController.html":{},"controllers/PermissionsController.html":{},"interfaces/Response.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"injectables/TransformInterceptor.html":{},"controllers/UsersController.html":{}}}],["src/decorator/customize.ts",{"_index":1561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/dto/create",{"_index":545,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1433,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":692,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{}}}],["src/files/files.controller.ts:30",{"_index":705,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:40",{"_index":695,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:45",{"_index":696,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:50",{"_index":699,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:55",{"_index":697,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":732,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":738,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:11",{"_index":741,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:15",{"_index":742,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:19",{"_index":744,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:23",{"_index":743,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:7",{"_index":740,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer.config.ts",{"_index":1044,"title":{},"body":{"injectables/MulterConfigService.html":{},"coverage.html":{}}}],["src/files/multer.config.ts:11",{"_index":1053,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:14",{"_index":1051,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/multer.config.ts:38",{"_index":1048,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["src/files/schema/file.schema.ts",{"_index":690,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":750,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:14",{"_index":754,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":763,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/jobs/dto/create",{"_index":480,"title":{},"body":{"classes/Company-1.html":{},"classes/CreateJobDto.html":{},"coverage.html":{}}}],["src/jobs/dto/update",{"_index":506,"title":{},"body":{"classes/Company-2.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts",{"_index":818,"title":{},"body":{"controllers/JobsController.html":{},"coverage.html":{}}}],["src/jobs/jobs.controller.ts:24",{"_index":821,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:31",{"_index":822,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:42",{"_index":823,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:48",{"_index":825,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.controller.ts:58",{"_index":824,"title":{},"body":{"controllers/JobsController.html":{}}}],["src/jobs/jobs.module.ts",{"_index":837,"title":{},"body":{"modules/JobsModule.html":{}}}],["src/jobs/jobs.service.ts",{"_index":841,"title":{},"body":{"injectables/JobsService.html":{},"coverage.html":{}}}],["src/jobs/jobs.service.ts:102",{"_index":847,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:109",{"_index":849,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:12",{"_index":843,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:126",{"_index":848,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:16",{"_index":845,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/jobs.service.ts:51",{"_index":846,"title":{},"body":{"injectables/JobsService.html":{}}}],["src/jobs/schema/job.schema",{"_index":976,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Resume.html":{},"modules/ResumesModule.html":{}}}],["src/jobs/schema/job.schema.ts",{"_index":795,"title":{},"body":{"classes/Job.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/jobs/schema/job.schema.ts:11",{"_index":810,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:13",{"_index":806,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:15",{"_index":809,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:17",{"_index":808,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:19",{"_index":805,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:21",{"_index":797,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:27",{"_index":802,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:29",{"_index":811,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:31",{"_index":803,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:33",{"_index":804,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:35",{"_index":799,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:40",{"_index":813,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:45",{"_index":801,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:50",{"_index":800,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:52",{"_index":798,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:54",{"_index":812,"title":{},"body":{"classes/Job.html":{}}}],["src/jobs/schema/job.schema.ts:9",{"_index":807,"title":{},"body":{"classes/Job.html":{}}}],["src/mail/mail.controller.ts",{"_index":961,"title":{},"body":{"controllers/MailController.html":{},"coverage.html":{}}}],["src/mail/mail.controller.ts:27",{"_index":966,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module.ts",{"_index":1018,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service.ts",{"_index":1043,"title":{},"body":{"injectables/MailService.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":1564,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/permissions/dto/create",{"_index":560,"title":{},"body":{"classes/CreatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/dto/update",{"_index":1438,"title":{},"body":{"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts",{"_index":1134,"title":{},"body":{"controllers/PermissionsController.html":{},"coverage.html":{}}}],["src/permissions/permissions.controller.ts:24",{"_index":1136,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:33",{"_index":1138,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:43",{"_index":1140,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:49",{"_index":1144,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.controller.ts:59",{"_index":1142,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["src/permissions/permissions.module.ts",{"_index":1157,"title":{},"body":{"modules/PermissionsModule.html":{}}}],["src/permissions/permissions.service.ts",{"_index":1160,"title":{},"body":{"injectables/PermissionsService.html":{},"coverage.html":{}}}],["src/permissions/permissions.service.ts:118",{"_index":1166,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:12",{"_index":1162,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:18",{"_index":1165,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:45",{"_index":1163,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:92",{"_index":1164,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/permissions.service.ts:96",{"_index":1167,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["src/permissions/schema/permission.schema",{"_index":613,"title":{},"body":{"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/Role.html":{},"modules/RolesModule.html":{}}}],["src/permissions/schema/permission.schema.ts",{"_index":1121,"title":{},"body":{"classes/Permission.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/permissions/schema/permission.schema.ts:11",{"_index":1122,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:13",{"_index":1127,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:15",{"_index":1128,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:17",{"_index":1124,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:22",{"_index":1131,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:27",{"_index":1126,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:32",{"_index":1125,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:34",{"_index":1123,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:36",{"_index":1130,"title":{},"body":{"classes/Permission.html":{}}}],["src/permissions/schema/permission.schema.ts:9",{"_index":1129,"title":{},"body":{"classes/Permission.html":{}}}],["src/resumes/dto/create",{"_index":570,"title":{},"body":{"classes/CreateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/dto/update",{"_index":1441,"title":{},"body":{"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts",{"_index":1227,"title":{},"body":{"controllers/ResumesController.html":{},"coverage.html":{}}}],["src/resumes/resumes.controller.ts:24",{"_index":1231,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:30",{"_index":1233,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:40",{"_index":1234,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:46",{"_index":1238,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:52",{"_index":1241,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.controller.ts:62",{"_index":1239,"title":{},"body":{"controllers/ResumesController.html":{}}}],["src/resumes/resumes.module.ts",{"_index":1256,"title":{},"body":{"modules/ResumesModule.html":{}}}],["src/resumes/resumes.service.ts",{"_index":1260,"title":{},"body":{"injectables/ResumesService.html":{},"coverage.html":{}}}],["src/resumes/resumes.service.ts:12",{"_index":1262,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:133",{"_index":1268,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:148",{"_index":1267,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:18",{"_index":1264,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:48",{"_index":1265,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:91",{"_index":1266,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/resumes.service.ts:97",{"_index":1269,"title":{},"body":{"injectables/ResumesService.html":{}}}],["src/resumes/schema/resume.schema.ts",{"_index":1204,"title":{},"body":{"classes/Resume.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/resumes/schema/resume.schema.ts:11",{"_index":1214,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:13",{"_index":1217,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:15",{"_index":1221,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:17",{"_index":1220,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:19",{"_index":1209,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:21",{"_index":1216,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:23",{"_index":1215,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:34",{"_index":1211,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:39",{"_index":1219,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:44",{"_index":1213,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:49",{"_index":1212,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:51",{"_index":1210,"title":{},"body":{"classes/Resume.html":{}}}],["src/resumes/schema/resume.schema.ts:53",{"_index":1218,"title":{},"body":{"classes/Resume.html":{}}}],["src/roles/dto/create",{"_index":579,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/roles/dto/update",{"_index":1444,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts",{"_index":1308,"title":{},"body":{"controllers/RolesController.html":{},"coverage.html":{}}}],["src/roles/roles.controller.ts:24",{"_index":1312,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:29",{"_index":1313,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:39",{"_index":1314,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:45",{"_index":1317,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.controller.ts:55",{"_index":1315,"title":{},"body":{"controllers/RolesController.html":{}}}],["src/roles/roles.module",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/roles/roles.module.ts",{"_index":1330,"title":{},"body":{"modules/RolesModule.html":{}}}],["src/roles/roles.service",{"_index":177,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["src/roles/roles.service.ts",{"_index":1333,"title":{},"body":{"injectables/RolesService.html":{},"coverage.html":{}}}],["src/roles/roles.service.ts:111",{"_index":1339,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:12",{"_index":1335,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:17",{"_index":1336,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:35",{"_index":1337,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:74",{"_index":1338,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/roles.service.ts:90",{"_index":1340,"title":{},"body":{"injectables/RolesService.html":{}}}],["src/roles/schema/role.schema",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["src/roles/schema/role.schema.ts",{"_index":1295,"title":{},"body":{"classes/Role.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/roles/schema/role.schema.ts:10",{"_index":1302,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:12",{"_index":1300,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:14",{"_index":1303,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:16",{"_index":1301,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:18",{"_index":1297,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:23",{"_index":1305,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:28",{"_index":1299,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:33",{"_index":1298,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:35",{"_index":1296,"title":{},"body":{"classes/Role.html":{}}}],["src/roles/schema/role.schema.ts:37",{"_index":1304,"title":{},"body":{"classes/Role.html":{}}}],["src/subscribers/dto/create",{"_index":586,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/dto/update",{"_index":1447,"title":{},"body":{"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["src/subscribers/schema/subscriber.schema",{"_index":973,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["src/subscribers/schema/subscriber.schema.ts",{"_index":1356,"title":{},"body":{"classes/Subscriber.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:11",{"_index":1363,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:13",{"_index":1361,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:15",{"_index":1358,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:20",{"_index":1365,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:25",{"_index":1360,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:30",{"_index":1359,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:32",{"_index":1357,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:34",{"_index":1364,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/schema/subscriber.schema.ts:9",{"_index":1362,"title":{},"body":{"classes/Subscriber.html":{}}}],["src/subscribers/subscribers.controller.ts",{"_index":1368,"title":{},"body":{"controllers/SubscribersController.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.controller.ts:29",{"_index":1371,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:39",{"_index":1372,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:50",{"_index":1378,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:57",{"_index":1373,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:64",{"_index":1383,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.controller.ts:73",{"_index":1379,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["src/subscribers/subscribers.module.ts",{"_index":1401,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["src/subscribers/subscribers.service.ts",{"_index":1404,"title":{},"body":{"injectables/SubscribersService.html":{},"coverage.html":{}}}],["src/subscribers/subscribers.service.ts:114",{"_index":1412,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:12",{"_index":1407,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:17",{"_index":1408,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:34",{"_index":1409,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:77",{"_index":1410,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:84",{"_index":1414,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/subscribers/subscribers.service.ts:99",{"_index":1413,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["src/users/dto/create",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":531,"title":{},"body":{"classes/Company-4.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schema/user.schema",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/schema/user.schema.ts",{"_index":1457,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schema/user.schema.ts:10",{"_index":1468,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:12",{"_index":1465,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:14",{"_index":1469,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:16",{"_index":1459,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:18",{"_index":1466,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:20",{"_index":1458,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:22",{"_index":1460,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:28",{"_index":1471,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:30",{"_index":1470,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:32",{"_index":1467,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:34",{"_index":1462,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:39",{"_index":1473,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:44",{"_index":1464,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:49",{"_index":1463,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:51",{"_index":1461,"title":{},"body":{"classes/User.html":{}}}],["src/users/schema/user.schema.ts:53",{"_index":1472,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1479,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":1482,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":1483,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:40",{"_index":1484,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:46",{"_index":1486,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:56",{"_index":1485,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.interface",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{}}}],["src/users/users.interface.ts",{"_index":793,"title":{},"body":{"interfaces/IUser.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1499,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{}}}],["src/users/users.service.ts",{"_index":1502,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:112",{"_index":1512,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:121",{"_index":1514,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:127",{"_index":1521,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:130",{"_index":1518,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":1509,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:153",{"_index":1517,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:172",{"_index":1522,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:180",{"_index":1519,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1520,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:24",{"_index":1510,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:50",{"_index":1516,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:69",{"_index":1511,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":500,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/UpdateJobDto.html":{},"index.html":{}}}],["start:dev",{"_index":1636,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1638,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":501,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/CreateJobDto.html":{},"classes/Job.html":{},"classes/UpdateJobDto.html":{}}}],["started",{"_index":1616,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1627,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":780,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":783,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":1658,"title":{},"body":{"index.html":{}}}],["storage",{"_index":1082,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["strategy",{"_index":939,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strict",{"_index":1039,"title":{},"body":{"modules/MailModule.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":288,"title":{},"body":{"injectables/AuthService.html":{}}}],["subject",{"_index":1004,"title":{},"body":{"controllers/MailController.html":{}}}],["subs",{"_index":988,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.name",{"_index":1011,"title":{},"body":{"controllers/MailController.html":{}}}],["subs.skills",{"_index":990,"title":{},"body":{"controllers/MailController.html":{}}}],["subscriber",{"_index":974,"title":{"classes/Subscriber.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{}}}],["subscriber.dto",{"_index":1386,"title":{},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts",{"_index":587,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["subscriber.dto.ts:11",{"_index":1449,"title":{},"body":{"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts:5",{"_index":589,"title":{},"body":{"classes/CreateSubscriberDto.html":{}}}],["subscriber.dto.ts:7",{"_index":590,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.dto.ts:9",{"_index":588,"title":{},"body":{"classes/CreateSubscriberDto.html":{},"classes/UpdateSubscriberDto.html":{}}}],["subscriber.name",{"_index":1042,"title":{},"body":{"modules/MailModule.html":{},"modules/SubscribersModule.html":{}}}],["subscriberdocument",{"_index":972,"title":{},"body":{"controllers/MailController.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"miscellaneous/typealiases.html":{}}}],["subscribermodel",{"_index":981,"title":{},"body":{"controllers/MailController.html":{},"injectables/SubscribersService.html":{}}}],["subscribers",{"_index":986,"title":{},"body":{"controllers/MailController.html":{},"controllers/SubscribersController.html":{}}}],["subscribers's",{"_index":1376,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["subscribers.controller",{"_index":1402,"title":{},"body":{"modules/SubscribersModule.html":{}}}],["subscribers.service",{"_index":1385,"title":{},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{}}}],["subscribers/subscribers.module",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["subscriberschema",{"_index":1024,"title":{},"body":{"modules/MailModule.html":{},"classes/Subscriber.html":{},"modules/SubscribersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscriberscontroller",{"_index":1367,"title":{"controllers/SubscribersController.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"coverage.html":{}}}],["subscribersmodule",{"_index":50,"title":{"modules/SubscribersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SubscribersModule.html":{},"modules.html":{},"overview.html":{}}}],["subscribersservice",{"_index":1384,"title":{"injectables/SubscribersService.html":{}},"body":{"controllers/SubscribersController.html":{},"modules/SubscribersModule.html":{},"injectables/SubscribersService.html":{},"coverage.html":{},"overview.html":{}}}],["subsskills",{"_index":989,"title":{},"body":{"controllers/MailController.html":{}}}],["success",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"controllers/FilesController.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/SubscribersController.html":{},"controllers/UsersController.html":{}}}],["success!!')@get('/account",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["success!!')@get('/refresh",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["success!!')@post('/logout",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["success!!')@useinterceptors(undefined)@usefilters(new",{"_index":703,"title":{},"body":{"controllers/FilesController.html":{}}}],["successfull",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully",{"_index":1062,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["super",{"_index":890,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":903,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super_admin",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":1001,"title":{},"body":{"controllers/MailController.html":{},"index.html":{},"modules.html":{}}}],["svg",{"_index":1669,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1065,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["t",{"_index":867,"title":{},"body":{"injectables/JobsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["table",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["tai",{"_index":440,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["targetdirectory",{"_index":1052,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["targetendpoint",{"_index":913,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetendpoint.startswith('/api/v1/auth",{"_index":922,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["targetmethod",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["team",{"_index":1002,"title":{},"body":{"controllers/MailController.html":{}}}],["temp",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["temp.permissions",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{}}}],["temp?.permissions",{"_index":281,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["template",{"_index":1009,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["templates",{"_index":1036,"title":{},"body":{"modules/MailModule.html":{}}}],["terminusmodule",{"_index":765,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":1641,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1644,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1643,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1640,"title":{},"body":{"index.html":{}}}],["th",{"_index":655,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thanks",{"_index":1650,"title":{},"body":{"index.html":{}}}],["thi",{"_index":892,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.logout(user",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.processnewtoken(refreshtoken",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":958,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.companiesservice.create(createcompanydto",{"_index":368,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findall(current",{"_index":371,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.findone(id",{"_index":374,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.remove(id",{"_index":382,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companiesservice.update(id",{"_index":378,"title":{},"body":{"controllers/CompaniesController.html":{}}}],["this.companymodel",{"_index":430,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.create",{"_index":406,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.find(filter)).length",{"_index":420,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.findone",{"_index":449,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.softdelete",{"_index":453,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.companymodel.updateone",{"_index":450,"title":{},"body":{"injectables/CompaniesService.html":{}}}],["this.configservice.get('init_password",{"_index":674,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.configservice.get('jwt_refresh_token_secret",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('should_init",{"_index":639,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.createrefreshtoken(payload",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.db.pingcheck('database",{"_index":762,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.ensureexists(`public/images/${folder",{"_index":1087,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["this.filesservice.findall",{"_index":725,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findone(+id",{"_index":726,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.remove(+id",{"_index":729,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.update(+id",{"_index":728,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.gethashpassword(password",{"_index":1532,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.health.check",{"_index":761,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jobmodel",{"_index":857,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.create",{"_index":852,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.find",{"_index":992,"title":{},"body":{"controllers/MailController.html":{}}}],["this.jobmodel.find(filter)).length",{"_index":855,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.findone",{"_index":859,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.softdelete",{"_index":862,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobmodel.updateone",{"_index":861,"title":{},"body":{"injectables/JobsService.html":{}}}],["this.jobsservice.create(createjobdto",{"_index":830,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findall(current",{"_index":831,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.findone(id",{"_index":832,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.remove(id",{"_index":834,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jobsservice.update(id",{"_index":833,"title":{},"body":{"controllers/JobsController.html":{}}}],["this.jwtservice.sign(payload",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log",{"_index":686,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.mailerservice.sendmail",{"_index":999,"title":{},"body":{"controllers/MailController.html":{}}}],["this.permissionmodel",{"_index":1179,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.count",{"_index":644,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.create",{"_index":1175,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find(filter)).length",{"_index":1178,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.find({}).select('_id",{"_index":650,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.findone",{"_index":1169,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.insertmany(admin_permissions",{"_index":648,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.permissionmodel.softdelete",{"_index":1182,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionmodel.updateone",{"_index":1181,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["this.permissionsservice.create(createpermissiondto",{"_index":1150,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findall(current",{"_index":1151,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.findone(id",{"_index":1152,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.remove(id",{"_index":1154,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.permissionsservice.update(id",{"_index":1153,"title":{},"body":{"controllers/PermissionsController.html":{}}}],["this.reflector.get(response_message",{"_index":1202,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["this.reflector.getallandoverride",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":900,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.resumemodel",{"_index":1278,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.create",{"_index":1272,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.find(filter)).length",{"_index":1277,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.findone",{"_index":1280,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.softdelete",{"_index":1288,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumemodel.updateone",{"_index":1287,"title":{},"body":{"injectables/ResumesService.html":{}}}],["this.resumesservice.create(createresumedto",{"_index":1247,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findall(current",{"_index":1248,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findone(id",{"_index":1249,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.findonebyuser(user",{"_index":1251,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.remove(id",{"_index":1253,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.resumesservice.update(id",{"_index":1252,"title":{},"body":{"controllers/ResumesController.html":{}}}],["this.rolemodel",{"_index":1347,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.count",{"_index":646,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.create",{"_index":1343,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.find(filter)).length",{"_index":1346,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findbyid(id",{"_index":1351,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.findone",{"_index":670,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["this.rolemodel.insertmany",{"_index":653,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.rolemodel.softdelete",{"_index":1355,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolemodel.updateone",{"_index":1349,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1322,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findall(current",{"_index":1323,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(id",{"_index":1324,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.findone(user.role._id",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.rolesservice.findone(userole._id)).toobject",{"_index":949,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.rolesservice.findone(userrole._id",{"_index":277,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.rolesservice.remove(id",{"_index":1326,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.rolesservice.update(id",{"_index":1325,"title":{},"body":{"controllers/RolesController.html":{}}}],["this.subscribermodel",{"_index":1420,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.create",{"_index":1416,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.find",{"_index":987,"title":{},"body":{"controllers/MailController.html":{}}}],["this.subscribermodel.find(filter)).length",{"_index":1419,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone",{"_index":1421,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.findone({email},{skills:1",{"_index":1426,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.softdelete",{"_index":1425,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribermodel.updateone",{"_index":1423,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["this.subscribersservice.create(createsubscriberdto",{"_index":1390,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findall(current",{"_index":1391,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.findone(id",{"_index":1396,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.getskills(user",{"_index":1395,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.remove(id",{"_index":1398,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.subscribersservice.update(updatesubscriberdto",{"_index":1397,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["this.usermodel",{"_index":1539,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.count",{"_index":642,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.create",{"_index":1534,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find(filter)).length",{"_index":1538,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyid(id",{"_index":1543,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1536,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.insertmany",{"_index":671,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usermodel.softdelete",{"_index":1546,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.updateone",{"_index":1541,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice.gethashpassword",{"_index":673,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1491,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall(current",{"_index":1492,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":1493,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyusername(username",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.finduserbytoken(refreshtoken",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.isvalidpassword(pass",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.register(registerdto",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.usersservice.remove(id",{"_index":1495,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":1494,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateusertoken",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.updateusertoken(refresh_token",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{}}}],["throttle",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{}}}],["throttlerguard",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["throttlermodule",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["throw",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["thêm",{"_index":868,"title":{},"body":{"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["thống",{"_index":665,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["tienphuc@gmail.com",{"_index":681,"title":{},"body":{"injectables/DatabasesService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":784,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["timestamps",{"_index":477,"title":{},"body":{"classes/Company.html":{},"classes/Job.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"classes/User.html":{}}}],["tiến",{"_index":679,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["todo",{"_index":1014,"title":{},"body":{"controllers/MailController.html":{}}}],["token",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{}}}],["tong",{"_index":445,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["total",{"_index":446,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalitems",{"_index":419,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["totalpages",{"_index":421,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["touch",{"_index":1659,"title":{},"body":{"index.html":{}}}],["trang",{"_index":438,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["transformer",{"_index":486,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1196,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1026,"title":{},"body":{"modules/MailModule.html":{}}}],["true",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Company.html":{},"injectables/DatabasesService.html":{},"classes/Job.html":{},"injectables/JwtAuthGuard.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"classes/Resume.html":{},"classes/Role.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truy",{"_index":924,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["try",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{}}}],["trying",{"_index":1079,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["ts",{"_index":424,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["ttl",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["twitter",{"_index":1665,"title":{},"body":{"index.html":{}}}],["type",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabasesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/HttpExceptionFilter.html":{},"interfaces/IUser.html":{},"classes/Job.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"injectables/MulterConfigService.html":{},"classes/Permission.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/RegisterUserDto.html":{},"interfaces/Response.html":{},"classes/Resume.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/UserLoginDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1680,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":856,"title":{},"body":{"injectables/JobsService.html":{}}}],["types",{"_index":512,"title":{},"body":{"classes/Company-2.html":{},"classes/Company-4.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["types/ejs",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1626,"title":{},"body":{"index.html":{}}}],["tại",{"_index":1172,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["tồn",{"_index":1171,"title":{},"body":{"injectables/PermissionsService.html":{},"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":886,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception(\"username/password",{"_index":959,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":1207,"title":{},"body":{"classes/Resume.html":{},"classes/Role.html":{},"classes/User.html":{}}}],["undefined})@apibody({type",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["unit",{"_index":1639,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/JwtStrategy.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1679,"title":{},"body":{"properties.html":{}}}],["unreachable",{"_index":426,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["update",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["update(@param('id",{"_index":727,"title":{},"body":{"controllers/FilesController.html":{}}}],["update(id",{"_index":352,"title":{},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/JobsController.html":{},"controllers/PermissionsController.html":{},"controllers/ResumesController.html":{},"controllers/RolesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(updatesubscriberdto",{"_index":1380,"title":{},"body":{"controllers/SubscribersController.html":{}}}],["updatecompanydto",{"_index":353,"title":{"classes/UpdateCompanyDto.html":{}},"body":{"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"classes/UpdateCompanyDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":423,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedby",{"_index":451,"title":{},"body":{"injectables/CompaniesService.html":{},"classes/Company.html":{},"classes/Job.html":{},"injectables/JobsService.html":{},"classes/Permission.html":{},"injectables/PermissionsService.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/Subscriber.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["updatedhistory",{"_index":1284,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updatefiledto",{"_index":698,"title":{"classes/UpdateFileDto.html":{}},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatejobdto",{"_index":514,"title":{"classes/UpdateJobDto.html":{}},"body":{"classes/Company-2.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"classes/UpdateJobDto.html":{},"coverage.html":{}}}],["updatepermissiondto",{"_index":1143,"title":{"classes/UpdatePermissionDto.html":{}},"body":{"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"classes/UpdatePermissionDto.html":{},"coverage.html":{}}}],["updateresumedto",{"_index":1240,"title":{"classes/UpdateResumeDto.html":{}},"body":{"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"classes/UpdateResumeDto.html":{},"coverage.html":{}}}],["updateresumedto.status",{"_index":1283,"title":{},"body":{"injectables/ResumesService.html":{}}}],["updateroledto",{"_index":1316,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RolesController.html":{},"injectables/RolesService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updates",{"_index":747,"title":{},"body":{"injectables/FilesService.html":{}}}],["updatesubscriberdto",{"_index":1381,"title":{"classes/UpdateSubscriberDto.html":{}},"body":{"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/UpdateSubscriberDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":535,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/Company-4.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateusertoken",{"_index":1506,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uploadedfile",{"_index":707,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile",{"_index":694,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadfile(file",{"_index":700,"title":{},"body":{"controllers/FilesController.html":{}}}],["upsert",{"_index":1424,"title":{},"body":{"injectables/SubscribersService.html":{}}}],["uri",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":574,"title":{},"body":{"classes/CreateResumeDto.html":{},"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["useclass",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{}}}],["usefactory",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{}}}],["usefilters",{"_index":708,"title":{},"body":{"controllers/FilesController.html":{}}}],["usefilters(new",{"_index":723,"title":{},"body":{"controllers/FilesController.html":{}}}],["useguards",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(throttlerguard",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{}}}],["useinterceptors",{"_index":706,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(fileinterceptor('fileupload",{"_index":722,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":132,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CompaniesController.html":{},"injectables/CompaniesService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/JobsController.html":{},"injectables/JobsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/MailModule.html":{},"controllers/PermissionsController.html":{},"injectables/PermissionsService.html":{},"controllers/ResumesController.html":{},"injectables/ResumesService.html":{},"controllers/RolesController.html":{},"injectables/RolesService.html":{},"controllers/SubscribersController.html":{},"injectables/SubscribersService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user')@responsemessage('get",{"_index":1237,"title":{},"body":{"controllers/ResumesController.html":{}}}],["user._id",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"classes/Company-4.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":518,"title":{},"body":{"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":532,"title":{},"body":{"classes/Company-4.html":{}}}],["user.dto.ts:15",{"_index":519,"title":{},"body":{"classes/Company-3.html":{}}}],["user.dto.ts:16",{"_index":534,"title":{},"body":{"classes/Company-4.html":{}}}],["user.dto.ts:17",{"_index":521,"title":{},"body":{"classes/Company-3.html":{}}}],["user.dto.ts:18",{"_index":533,"title":{},"body":{"classes/Company-4.html":{}}}],["user.dto.ts:19",{"_index":520,"title":{},"body":{"classes/Company-3.html":{}}}],["user.dto.ts:22",{"_index":1455,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":597,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:25",{"_index":1453,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:26",{"_index":595,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":1451,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:28",{"_index":598,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:29",{"_index":1454,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:30",{"_index":592,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":1450,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:32",{"_index":596,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:33",{"_index":1456,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:34",{"_index":591,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:36",{"_index":599,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:38",{"_index":1452,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:41",{"_index":593,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:48",{"_index":1187,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:52",{"_index":1185,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:56",{"_index":1188,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:60",{"_index":1184,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:64",{"_index":1186,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:68",{"_index":1183,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:74",{"_index":1477,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.dto.ts:81",{"_index":1476,"title":{},"body":{"classes/UserLoginDto.html":{}}}],["user.email",{"_index":408,"title":{},"body":{"injectables/CompaniesService.html":{},"injectables/JobsService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{}}}],["user.name",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":273,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.permissions",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{}}}],["user.role",{"_index":275,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.toobject",{"_index":279,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.permissions",{"_index":916,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["user@gmail.com",{"_index":684,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["user_permissions",{"_index":629,"title":{},"body":{"injectables/DatabasesService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_role",{"_index":628,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userdocument",{"_index":631,"title":{},"body":{"injectables/DatabasesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":1206,"title":{},"body":{"classes/Resume.html":{},"injectables/ResumesService.html":{}}}],["userlogindto",{"_index":171,"title":{"classes/UserLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"coverage.html":{}}}],["userlogindto})@post('/login')@responsemessage('login",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["usermodel",{"_index":623,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{},"classes/Company-3.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/RegisterUserDto.html":{},"classes/UserLoginDto.html":{},"injectables/UsersService.html":{}}}],["userole",{"_index":947,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["userrole",{"_index":274,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["userrole?._id",{"_index":685,"title":{},"body":{"injectables/DatabasesService.html":{},"injectables/UsersService.html":{}}}],["users",{"_index":1480,"title":{},"body":{"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1500,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.interface",{"_index":1488,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1487,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"modules/DatabasesModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1478,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":621,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["usersmodule",{"_index":51,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":169,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DatabasesModule.html":{},"injectables/DatabasesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":658,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["validate",{"_index":933,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":936,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":956,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatenested",{"_index":489,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateJobDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":490,"title":{},"body":{"classes/Company-1.html":{},"classes/Company-2.html":{},"classes/Company-3.html":{},"classes/Company-4.html":{},"classes/CreateCompanyDto.html":{},"classes/CreateJobDto.html":{},"classes/CreatePermissionDto.html":{},"classes/CreateResumeDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateSubscriberDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateCompanyDto.html":{},"classes/UpdateJobDto.html":{},"classes/UpdatePermissionDto.html":{},"classes/UpdateResumeDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateSubscriberDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserLoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabasesService.html":{},"injectables/JobsService.html":{},"injectables/MulterConfigService.html":{},"injectables/PermissionsService.html":{},"injectables/ResumesService.html":{},"injectables/RolesService.html":{},"injectables/SubscribersService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1689,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1677,"title":{},"body":{"properties.html":{}}}],["vietnam",{"_index":677,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["viên",{"_index":661,"title":{},"body":{"injectables/DatabasesService.html":{}}}],["void",{"_index":774,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MulterConfigService.html":{}}}],["vui",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PermissionsService.html":{}}}],["vào",{"_index":894,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["với",{"_index":1170,"title":{},"body":{"injectables/PermissionsService.html":{}}}],["watch",{"_index":1634,"title":{},"body":{"index.html":{}}}],["website",{"_index":1663,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":1005,"title":{},"body":{"controllers/MailController.html":{}}}],["without",{"_index":1097,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["world",{"_index":112,"title":{},"body":{"injectables/AppService.html":{}}}],["xóa",{"_index":1354,"title":{},"body":{"injectables/RolesService.html":{},"injectables/UsersService.html":{}}}],["you'd",{"_index":1654,"title":{},"body":{"index.html":{}}}],["you're",{"_index":1078,"title":{},"body":{"injectables/MulterConfigService.html":{}}}],["zoom",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CompaniesModule.html":{},"modules/DatabasesModule.html":{},"modules/FilesModule.html":{},"modules/JobsModule.html":{},"modules/MailModule.html":{},"modules/PermissionsModule.html":{},"modules/ResumesModule.html":{},"modules/RolesModule.html":{},"modules/SubscribersModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller(\"\")\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CompaniesModule\n                        \n                        \n                            DatabasesModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            JobsModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            PermissionsModule\n                        \n                        \n                            ResumesModule\n                        \n                        \n                            RolesModule\n                        \n                        \n                            SubscribersModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { softDeletePlugin } from 'soft-delete-plugin-mongoose';\nimport { CompaniesModule } from './companies/companies.module';\nimport { JobsModule } from './jobs/jobs.module';\nimport { FilesModule } from './files/files.module';\nimport { ResumesModule } from './resumes/resumes.module';\nimport { PermissionsModule } from './permissions/permissions.module';\nimport { RolesModule } from './roles/roles.module';\nimport { DatabasesModule } from './databases/databases.module';\nimport { SubscribersModule } from './subscribers/subscribers.module';\nimport { MailModule } from './mail/mail.module';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { ThrottlerGuard, ThrottlerModule } from '@nestjs/throttler';\nimport { APP_GUARD } from '@nestjs/core';\nimport { HealthModule } from './health/health.module';\n\n@Module({\n  imports: [\n    ScheduleModule.forRoot(),\n    ThrottlerModule.forRoot([{\n      ttl: 60,\n      limit: 3,\n    }]),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URI'),\n        connectionFactory: (connection) => {\n          connection.plugin(softDeletePlugin);\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    ConfigModule.forRoot({ isGlobal: true }),\n    UsersModule,\n    AuthModule,\n    CompaniesModule,\n    JobsModule,\n    FilesModule,\n    ResumesModule,\n    PermissionsModule,\n    RolesModule,\n    DatabasesModule,\n    SubscribersModule,\n    MailModule,\n    HealthModule,\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: ThrottlerGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                handleGetAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                handleLogin\n                            \n                            \n                                    \n                                    \n                                handleLogoutAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRefreshAccount\n                            \n                            \n                                    \n                                    \n                                    \n                                handleRegister\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        handleGetAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleGetAccount(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Get Account Success!!')@Get('/account')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            \n                        handleLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogin(req, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(ThrottlerGuard)@UseGuards(LocalAuthGuard)@Throttle({default: undefined})@ApiBody({type: UserLoginDto})@Post('/login')@ResponseMessage('Login SuccessFull!')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        handleLogoutAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleLogoutAccount(user: IUser, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResponseMessage('Logout Account Success!!')@Post('/logout')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRefreshAccount\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRefreshAccount(request: Request, response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@ResponseMessage('Refresh Account Success!!')@Get('/refresh')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handleRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegister(registerDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('/register')@ResponseMessage('Register A New User')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  Post,\n  Req,\n  Res,\n  UseGuards,\n} from '@nestjs/common';\nimport { LocalAuthGuard } from './local-auth.guard';\nimport { AuthService } from './auth.service';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { UsersService } from 'src/users/users.service';\nimport { RegisterUserDto, UserLoginDto } from 'src/users/dto/create-user.dto';\nimport { Request, Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\nimport { Throttle, ThrottlerGuard } from '@nestjs/throttler';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private usersService: UsersService,\n    private rolesService: RolesService,\n  ) {}\n\n  @Public()\n  @UseGuards(ThrottlerGuard)\n  @UseGuards(LocalAuthGuard)\n  @Throttle({ default: { limit: 3, ttl: 60 } })\n  @ApiBody({ type: UserLoginDto })\n  @Post('/login')\n  @ResponseMessage('Login SuccessFull!')\n  handleLogin(@Req() req, @Res({ passthrough: true }) response: Response) {\n    return this.authService.login(req.user, response);\n  }\n\n  @Public()\n  @Post('/register')\n  @ResponseMessage('Register A New User')\n  handleRegister(@Body() registerDto: RegisterUserDto) {\n    return this.usersService.register(registerDto);\n  }\n\n  @ResponseMessage('Get Account Success!!')\n  @Get('/account')\n  async handleGetAccount(@User() user: IUser) {\n    const temp = (await this.rolesService.findOne(user.role._id)) as any;\n    user.permissions = temp.permissions;\n    return {\n      user,\n    };\n  }\n\n  @Public()\n  @ResponseMessage('Refresh Account Success!!')\n  @Get('/refresh')\n  handleRefreshAccount(\n    @Req() request: Request,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    const refreshToken = request.cookies['refresh_token'];\n\n    return this.authService.processNewToken(refreshToken, response);\n  }\n\n  @ResponseMessage('Logout Account Success!!')\n  @Post('/logout')\n  handleLogoutAccount(\n    @User() user: IUser,\n    @Res({ passthrough: true }) response: Response,\n  ) {\n    return this.authService.logout(user, response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nRolesModule\n\nRolesModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './passport/local.stategy';\nimport { UsersService } from 'src/users/users.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from 'src/users/schema/user.schema';\nimport { AuthController } from './auth.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './passport/jwt.stategy';\nimport ms from 'ms';\nimport { RolesModule } from 'src/roles/roles.module';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\n@Module({\n  imports: [\n    UsersModule,\n    RolesModule,\n    PassportModule,\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n        signOptions: {\n          expiresIn: ms(configService.get('JWT_ACCESS_EXPIRE')) / 1000,\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, LocalStrategy, UsersService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createRefreshToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                processNewToken\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService, configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(user: any, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: IUser, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        processNewToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    processNewToken(refreshToken: string, response: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                            Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createRefreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/auth/auth.service.ts:73\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport ms from 'ms';\nimport { Response } from 'express';\nimport { IUser } from 'src/users/users.interface';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOneByUsername(username);\n\n    if (user) {\n      const isValid = this.usersService.isValidPassword(pass, user.password);\n      if (isValid === true) {\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n        const objUser = {\n          ...user.toObject(),\n          permissions: temp?.permissions ?? [],\n        };\n        return objUser;\n      }\n    }\n    return null;\n  }\n  async login(user: any, response: Response) {\n    const { email, _id, role, name, age, gender, address, permissions } = user;\n    const payload = {\n      email,\n      _id,\n      age,\n      gender,\n      address,\n      role,\n      name,\n      sub: 'token login',\n      iss: 'from server',\n    };\n    const refresh_token = await this.createRefreshToken(payload);\n\n    //update user with refreshtoken\n    await this.usersService.updateUserToken(refresh_token, _id);\n\n    //set cookie\n    response.cookie('refresh_token', refresh_token, {\n      httpOnly: true,\n      maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')), //miliseconds,\n    });\n    return {\n      access_token: this.jwtService.sign(payload),\n      user: {\n        email,\n        _id,\n        age,\n        gender,\n        address,\n        role,\n        name,\n        permissions,\n      },\n    };\n  }\n  createRefreshToken = async (payload) => {\n    const refresh_token = this.jwtService.sign(payload, {\n      secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      expiresIn:\n        ms(this.configService.get('JWT_REFRESH_EXPIRE')) / 1000,\n    });\n    return refresh_token;\n  };\n  async processNewToken(refreshToken: string, response: Response) {\n    try {\n      this.jwtService.verify(refreshToken, {\n        secret: this.configService.get('JWT_REFRESH_TOKEN_SECRET'),\n      });\n      const user = await this.usersService.findUserByToken(refreshToken);\n      if (user) {\n        const { email, _id, name, role, age, gender, address } = user;\n        const payload = {\n          email,\n          _id,\n          age,\n          gender,\n          address,\n          role,\n          name,\n          sub: 'refresh token',\n          iss: 'from server',\n        };\n        const refresh_token = await this.createRefreshToken(payload);\n\n        await this.usersService.updateUserToken(refresh_token, _id.toString());\n        const userRole = user.role as unknown as { _id: string; name: string };\n        const temp = await this.rolesService.findOne(userRole._id);\n        response.clearCookie('refresh_token');\n        response.cookie('refresh_token', refresh_token, {\n          httpOnly: true,\n          maxAge: ms(this.configService.get('JWT_REFRESH_EXPIRE')),\n        });\n\n        return {\n          access_token: this.jwtService.sign(payload),\n          user: {\n            email,\n            _id,\n            age,\n            gender,\n            address,\n            role,\n            name,\n            permissions: temp?.permissions ?? [],\n          },\n        };\n      } else {\n        throw new BadRequestException(\n          `Refresh Token không hợp lệ. Vui lòng đăng nhập`,\n        );\n      }\n    } catch (error) {\n      throw new BadRequestException(`Refresh Token không hợp lệ`);\n    }\n  }\n  async logout(user: IUser, response: Response) {\n    await this.usersService.updateUserToken('', user._id);\n    response.clearCookie('refresh_token');\n    return 'Logout Success!!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CompaniesController.html":{"url":"controllers/CompaniesController.html","title":"controller - CompaniesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CompaniesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                companies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Company Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Get  Company With Paginate  Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Get  Company By  Id  Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete  Company By Id  Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update  Company By Id  Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/companies/companies.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('companies')\n@Controller('companies')\nexport class CompaniesController {\n  constructor(private readonly companiesService: CompaniesService) {}\n\n  @Post()\n  @ResponseMessage('Create Company Success!!')\n  create(@Body() createCompanyDto: CreateCompanyDto, @User() user: IUser) {\n    return this.companiesService.create(createCompanyDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Get  Company With Paginate  Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.companiesService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Get  Company By  Id  Success!!')\n  findOne(@Param('id') id: string) {\n    return this.companiesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update  Company By Id  Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updateCompanyDto: UpdateCompanyDto,\n    @User() user: IUser,\n  ) {\n    return this.companiesService.update(id, updateCompanyDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete  Company By Id  Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.companiesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CompaniesModule.html":{"url":"modules/CompaniesModule.html","title":"module - CompaniesModule","body":"\n                   \n\n\n\n\n    Modules\n    CompaniesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\n\nCompaniesService\n\nCompaniesService\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/companies/companies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CompaniesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CompaniesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CompaniesService } from './companies.service';\nimport { CompaniesController } from './companies.controller';\nimport { Company, CompanySchema } from './schema/company.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n  ],\n  controllers: [CompaniesController],\n  providers: [CompaniesService],\n})\nexport class CompaniesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CompaniesService.html":{"url":"injectables/CompaniesService.html","title":"injectable - CompaniesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CompaniesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/companies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(companyModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/companies/companies.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        companyModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCompanyDto: CreateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCompanyDto\n                                            \n                                                            CreateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/companies/companies.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCompanyDto\n                                            \n                                                            UpdateCompanyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCompanyDto } from './dto/create-company.dto';\nimport { UpdateCompanyDto } from './dto/update-company.dto';\nimport { Company, CompanyDocument } from './schema/company.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class CompaniesService {\n  constructor(\n    @InjectModel(Company.name)\n    private companyModel: SoftDeleteModel,\n  ) {}\n  async create(createCompanyDto: CreateCompanyDto, user: IUser) {\n    return await this.companyModel.create({\n      ...createCompanyDto,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.companyModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-address') {\n      // @ts-ignore: Unreachable code error\n      sort = '-address';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.companyModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found company';\n    }\n    return this.companyModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updateCompanyDto: UpdateCompanyDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found company';\n    }\n    return await this.companyModel.updateOne(\n      { _id: id },\n      {\n        ...updateCompanyDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    await this.companyModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.companyModel.softDelete({ _id: id });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company.html":{"url":"classes/Company.html","title":"class - Company","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/schema/company.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/schema/company.schema.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { HydratedDocument } from 'mongoose';\n\nexport type CompanyDocument = HydratedDocument;\n@Schema({ timestamps: true })\nexport class Company {\n  @Prop()\n  name: string;\n  @Prop()\n  address: string;\n  @Prop()\n  logo: string;\n  @Prop()\n  description: string;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n  @Prop()\n  isDeleted: boolean;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n}\nexport const CompanySchema = SchemaFactory.createForClass(Company);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-1.html":{"url":"classes/Company-1.html","title":"class - Company-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  @IsNotEmpty({ message: 'Please Enter Your Location' })\n  location: string;\n  @IsNotEmpty({ message: 'Please Enter Your Salary' })\n  salary: number;\n  @IsNotEmpty({ message: 'Please Enter Your Quantity' })\n  quantity: number;\n  @IsNotEmpty({ message: 'Please Enter Your Level' })\n  level: string;\n  @IsNotEmpty({ message: 'Please Enter Your Description' })\n  description: string;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  @IsNotEmpty({ message: 'Please Enter Your Start Date' })\n  startDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your End Date' })\n  endDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your isActive' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-2.html":{"url":"classes/Company-2.html","title":"class - Company-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\nimport {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  @IsNotEmpty()\n  logo: string;\n}\nexport class UpdateJobDto extends PartialType(CreateJobDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  location: string;\n  @IsNotEmpty({ message: 'Please Enter Your Salary' })\n  salary: number;\n  @IsNotEmpty({ message: 'Please Enter Your Quantity' })\n  quantity: number;\n  @IsNotEmpty({ message: 'Please Enter Your Level' })\n  level: string;\n  @IsNotEmpty({ message: 'Please Enter Your Description' })\n  description: string;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  @IsNotEmpty({ message: 'Please Enter Your Start Date' })\n  startDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your End Date' })\n  endDate: Date;\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-3.html":{"url":"classes/Company-3.html","title":"class - Company-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Password' })\n  password: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Please Enter Your Name',\n  })\n  name: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Email',\n  })\n  email: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Password',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Age',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Please Enter Your Gender',\n  })\n  gender: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Address',\n  })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Company-4.html":{"url":"classes/Company-4.html","title":"class - Company-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Company\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCompanyDto.html":{"url":"classes/CreateCompanyDto.html","title":"class - CreateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/create-company.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Logo'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/create-company.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateCompanyDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Logo' })\n  logo: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Description' })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobDto.html":{"url":"classes/CreateJobDto.html","title":"class - CreateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/create-job.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your End Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your isActive'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Location'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Salary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Skills'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Start Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/create-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from 'class-transformer';\nimport {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  @IsNotEmpty()\n  logo: string;\n}\nexport class CreateJobDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  @IsNotEmpty({ message: 'Please Enter Your Location' })\n  location: string;\n  @IsNotEmpty({ message: 'Please Enter Your Salary' })\n  salary: number;\n  @IsNotEmpty({ message: 'Please Enter Your Quantity' })\n  quantity: number;\n  @IsNotEmpty({ message: 'Please Enter Your Level' })\n  level: string;\n  @IsNotEmpty({ message: 'Please Enter Your Description' })\n  description: string;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  @IsNotEmpty({ message: 'Please Enter Your Start Date' })\n  startDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your End Date' })\n  endDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your isActive' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePermissionDto.html":{"url":"classes/CreatePermissionDto.html","title":"class - CreatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/create-permission.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/create-permission.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from \"class-validator\";\n\nexport class CreatePermissionDto {\n  @IsNotEmpty({message:\"Please Enter Your Name\"})\n  name: string;\n  @IsNotEmpty({message:\"Please Enter Your Name\"})\n  apiPath: string;\n  @IsNotEmpty({message:\"Please Enter Your Name\"})\n  method: string;\n  @IsNotEmpty({message:\"Please Enter Your Name\"})\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateResumeDto.html":{"url":"classes/CreateResumeDto.html","title":"class - CreateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/create-resume.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your companyId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your jobId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your url'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/create-resume.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateResumeDto {\n  @IsNotEmpty({ message: 'Please Enter Your url' })\n  url: string;\n  @IsNotEmpty({ message: 'Please Enter Your companyId' })\n  companyId: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty({ message: 'Please Enter Your jobId' })\n  jobId: mongoose.Schema.Types.ObjectId;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/create-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class CreateRoleDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  description: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  permissions:  mongoose.Schema.Types.ObjectId[];\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSubscriberDto.html":{"url":"classes/CreateSubscriberDto.html","title":"class - CreateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/create-subscriber.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Skills'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/create-subscriber.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty } from 'class-validator';\n\nexport class CreateSubscriberDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  @IsNotEmpty({ message: 'Please Enter Your email' })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Age'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Email'})@IsEmail({}, {message: 'Email Must Be An Email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Gender'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Password' })\n  password: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Please Enter Your Name',\n  })\n  name: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Email',\n  })\n  email: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Password',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Age',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Please Enter Your Gender',\n  })\n  gender: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Address',\n  })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DatabasesController.html":{"url":"controllers/DatabasesController.html","title":"controller - DatabasesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DatabasesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                databases\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('databases')\n@Controller('databases')\nexport class DatabasesController {\n  constructor(private readonly databasesService: DatabasesService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabasesModule.html":{"url":"modules/DatabasesModule.html","title":"module - DatabasesModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabasesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\n\nDatabasesService\n\nDatabasesService\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/databases.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabasesService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DatabasesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabasesService } from './databases.service';\nimport { DatabasesController } from './databases.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from 'src/users/users.service';\nimport { User, UserSchema } from 'src/users/schema/user.schema';\nimport { Permission, PermissionSchema } from 'src/permissions/schema/permission.schema';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\n\n@Module({\n  controllers: [DatabasesController],\n  providers: [DatabasesService, UsersService],\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Permission.name, schema: PermissionSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n})\nexport class DatabasesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabasesService.html":{"url":"injectables/DatabasesService.html","title":"injectable - DatabasesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabasesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/databases.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, permissionModel: SoftDeleteModel, roleModel: SoftDeleteModel, configService: ConfigService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/databases/databases.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/databases.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DatabasesService.name)\n                    \n                \n                    \n                        \n                                Defined in src/databases/databases.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnModuleInit } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\n\nimport { UsersService } from 'src/users/users.service';\nimport { ADMIN_ROLE, ADMIN_PERMISSIONS, USER_ROLE, USER_PERMISSIONS } from './sample';\nimport { User, UserDocument } from 'src/users/schema/user.schema';\nimport {\n  Permission,\n  PermissionDocument,\n} from 'src/permissions/schema/permission.schema';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\n\n@Injectable()\nexport class DatabasesService implements OnModuleInit {\n  private readonly logger = new Logger(DatabasesService.name);\n\n  constructor(\n    @InjectModel(User.name)\n    private userModel: SoftDeleteModel,\n\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n\n    private configService: ConfigService,\n    private userService: UsersService,\n  ) {}\n\n  async onModuleInit() {\n    const isInit = this.configService.get('SHOULD_INIT');\n    if (Boolean(isInit)) {\n      const countUser = await this.userModel.count({});\n      const countPermission = await this.permissionModel.count({});\n      const countRole = await this.roleModel.count({});\n\n      //create permissions\n      if (countPermission === 0) {\n        await this.permissionModel.insertMany(ADMIN_PERMISSIONS);\n        //bulk create\n      }\n\n      // create role\n      if (countRole === 0) {\n        const permissions = await this.permissionModel.find({}).select('_id');\n        console.log(\n          '🚀 ~ file: databases.service.ts:49 ~ DatabasesService ~ onModuleInit ~ permissions:',\n          permissions,\n        );\n        await this.roleModel.insertMany([\n          {\n            name: ADMIN_ROLE,\n            description: 'Admin thì full quyền :v',\n            isActive: true,\n            permissions: permissions,\n          },\n          {\n            name: USER_ROLE,\n            description: 'Người dùng/Ứng viên sử dụng hệ thống',\n            isActive: true,\n            permissions: USER_PERMISSIONS, //không set quyền, chỉ cần add ROLE\n          },\n        ]);\n      }\n\n      if (countUser === 0) {\n        const adminRole = await this.roleModel.findOne({ name: ADMIN_ROLE });\n        const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n        await this.userModel.insertMany([\n          {\n            name: \"I'm admin\",\n            email: 'admin@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm Tiến Phúc\",\n            email: 'tienphuc@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 96,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: adminRole?._id,\n          },\n          {\n            name: \"I'm normal user\",\n            email: 'user@gmail.com',\n            password: this.userService.getHashPassword(\n              this.configService.get('INIT_PASSWORD'),\n            ),\n            age: 69,\n            gender: 'MALE',\n            address: 'VietNam',\n            role: userRole?._id,\n          },\n        ]);\n      }\n\n      if (countUser > 0 && countRole > 0 && countPermission > 0) {\n        this.logger.log('>>> ALREADY INIT SAMPLE DATA...');\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/schema/file.schema.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                files\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateFileDto: UpdateFileDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('upload')@ResponseMessage('Post Files Success!!')@UseInterceptors(undefined)@UseFilters(new HttpExceptionFilter())\n                \n            \n\n                    \n                        \n                            Defined in src/files/files.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                            Express.Multer.File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { file: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseInterceptors,\n  UploadedFile,\n  UseFilters,\n  // ParseFilePipeBuilder,\n  // HttpStatus,\n} from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { UpdateFileDto } from './dto/update-file.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ResponseMessage } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HttpExceptionFilter } from 'src/core/http-exception.filter';\n@ApiTags('files')\n@Controller('files')\nexport class FilesController {\n  constructor(private readonly filesService: FilesService) {}\n\n  @Post('upload')\n  @ResponseMessage('Post Files Success!!')\n  @UseInterceptors(FileInterceptor('fileUpload'))\n  @UseFilters(new HttpExceptionFilter())\n  uploadFile(\n    @UploadedFile()\n    file: Express.Multer.File,\n  ) {\n    return {\n      file: file.filename,\n    };\n  }\n\n  @Get()\n  findAll() {\n    return this.filesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.filesService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateFileDto: UpdateFileDto) {\n    return this.filesService.update(+id, updateFileDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.filesService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { MulterConfigService } from './multer.config';\n\n@Module({\n  controllers: [FilesController],\n  providers: [FilesService],\n  imports: [\n    MulterModule.registerAsync({\n      useClass: MulterConfigService,\n    }),\n  ],\n})\nexport class FilesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createFileDto: CreateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createFileDto\n                                            \n                                                            CreateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateFileDto: UpdateFileDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/files.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateFileDto\n                                            \n                                                            UpdateFileDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateFileDto } from './dto/create-file.dto';\nimport { UpdateFileDto } from './dto/update-file.dto';\n\n@Injectable()\nexport class FilesService {\n  create(createFileDto: CreateFileDto) {\n    return 'This action adds a new file';\n  }\n\n  findAll() {\n    return `This action returns all files`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} file`;\n  }\n\n  update(id: number, updateFileDto: UpdateFileDto) {\n    return `This action updates a #${id} file`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} file`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        check\n                        \n                    \n                \n            \n            \n                \n                        \n                    check()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@HealthCheck()\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { HealthCheck, HealthCheckService, MongooseHealthIndicator } from '@nestjs/terminus';\nimport { Public } from 'src/decorator/customize';\n\n@Controller('health')\nexport class HealthController {\n  constructor(\n    private health: HealthCheckService,\n    private db: MongooseHealthIndicator,\n  ) {}\n  @Get()\n  @Public()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.db.pingCheck('database')]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/http-exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/http-exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        HttpException\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n      error: 'paylay to large',\n      message: 'File too large customize',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            permissions\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IUser {\n  name: string;\n  _id: string;\n  email: string;\n  role: {\n    _id: string;\n    name: string;\n  };\n  permissions: {\n    _id: string;\n    name: string;\n    apiPath: string;\n    module: string;\n  }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Job.html":{"url":"classes/Job.html","title":"class - Job","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/schema/job.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/schema/job.schema.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type JobDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Job {\n  @Prop()\n  name: string;\n  @Prop()\n  skills: string[];\n  @Prop()\n  location: string;\n  @Prop()\n  salary: number;\n  @Prop()\n  quantity: number;\n  @Prop()\n  level: string;\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n  @Prop()\n  description: string;\n  @Prop()\n  startDate: Date;\n  @Prop()\n  endDate: Date;\n  @Prop()\n  isActive: boolean;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const JobSchema = SchemaFactory.createForClass(Job);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/JobsController.html":{"url":"controllers/JobsController.html","title":"controller - JobsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  JobsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                jobs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Jobs Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Get  Job With Paginate Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Get  Job By Id Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Jobs Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateJobDto: UpdateJobDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Jobs Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/jobs/jobs.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateJobDto\n                                            \n                                                            UpdateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { Public, ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('jobs')\n@Controller('jobs')\nexport class JobsController {\n  constructor(private readonly jobsService: JobsService) {}\n\n  @Post()\n  @ResponseMessage('Create Jobs Success!!')\n  create(@Body() createJobDto: CreateJobDto, @User() user: IUser) {\n    return this.jobsService.create(createJobDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Get  Job With Paginate Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.jobsService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Get  Job By Id Success!!')\n  findOne(@Param('id') id: string) {\n    return this.jobsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update Jobs Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updateJobDto: UpdateJobDto,\n    @User() user: IUser,\n  ) {\n    return this.jobsService.update(id, updateJobDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete Jobs Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.jobsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobsModule.html":{"url":"modules/JobsModule.html","title":"module - JobsModule","body":"\n                   \n\n\n\n\n    Modules\n    JobsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\n\nJobsService\n\nJobsService\n\n\n\nJobsModule\n\nJobsModule\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/jobs/jobs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            JobsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobsService } from './jobs.service';\nimport { JobsController } from './jobs.controller';\nimport { Job, JobSchema } from './schema/job.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }])],\n  controllers: [JobsController],\n  providers: [JobsService],\n})\nexport class JobsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobsService.html":{"url":"injectables/JobsService.html","title":"injectable - JobsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/jobs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/jobs/jobs.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createJobDto: CreateJobDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createJobDto\n                                            \n                                                            CreateJobDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/jobs/jobs.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/jobs/jobs.service.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/jobs/jobs.service.ts:109\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateJobDto } from './dto/create-job.dto';\nimport { UpdateJobDto } from './dto/update-job.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Job, JobDocument } from './schema/job.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class JobsService {\n  constructor(\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) {}\n  async create(createJobDto: CreateJobDto, user: IUser) {\n    const {\n      name,\n      skills,\n      salary,\n      quantity,\n      level,\n      description,\n      company,\n      endDate,\n      location,\n      isActive,\n    } = createJobDto;\n    const newJob = await this.jobModel.create({\n      name,\n      skills,\n      salary,\n      quantity,\n      level,\n      location,\n      isActive,\n      description,\n      company,\n      endDate,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newJob._id,\n      createdAt: newJob.createdAt,\n    };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.jobModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-email') {\n      // @ts-ignore: Unreachable code error\n      sort = '-email';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    if ((sort as any) === '-salary') {\n      // @ts-ignore: Unreachable code error\n      sort = '-salary';\n    }\n    if (typeof (sort as any) === 'number') {\n      // @ts-ignore: Unreachable code error\n      sort = sort;\n    }\n    const result = await this.jobModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select('-password')\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found job';\n    }\n    return this.jobModel.findOne({ _id: id });\n  }\n\n  update = async (id: string, updateJobDto: UpdateJobDto, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found job';\n    }\n    const newJobUpdate = await this.jobModel.updateOne(\n      { _id: id },\n      {\n        ...updateJobDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return newJobUpdate;\n  };\n\n  remove = async (id: string, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found job';\n    }\n    await this.jobModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.jobModel.softDelete({ _id: id });\n  };\n}\n\n//nếu mà chưa có company thì tự thêm company\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info, context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/jwt-auth.guard.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  ForbiddenException,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { IS_PUBLIC_KEY, IS_PUBLIC_PERMISSION } from 'src/decorator/customize';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    //ExecutionContext là không gian thự thi code, khi vào ExcutionContext mình có thể lấy request=> req.user\n\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (isPublic) {\n      return true;\n    }\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info, context: ExecutionContext) {\n    console.log(\n      '🚀 ~ file: jwt-auth.guard.ts:31 ~ JwtAuthGuard ~ handleRequest ~ err:',\n      err,\n    );\n    console.log(\n      '🚀 ~ file: jwt-auth.guard.ts:31 ~ JwtAuthGuard ~ handleRequest ~ user:',\n      user,\n    );\n    //lay request\n    const request: Request = context.switchToHttp().getRequest();\n    const isSkipPermission = this.reflector.getAllAndOverride(\n      IS_PUBLIC_PERMISSION,\n      [context.getHandler(), context.getClass()],\n    );\n    //check permission\n    const targetMethod = request.method;\n    console.log(\n      '🚀 ~ file: jwt-auth.guard.ts:36 ~ JwtAuthGuard ~ handleRequest ~ targetMethod:',\n      targetMethod,\n    );\n    const targetEndpoint = request?.route?.path as string;\n    console.log(\n      '🚀 ~ file: jwt-auth.guard.ts:38 ~ JwtAuthGuard ~ handleRequest ~ targetEndpoint:',\n      targetEndpoint,\n    );\n\n    const permissions = user?.permissions ?? [];\n    console.log(\n      '🚀 ~ file: jwt-auth.guard.ts:47 ~ JwtAuthGuard ~ handleRequest ~ permissions:',\n      permissions,\n    );\n    let isExist = permissions.find(\n      (permissions) =>\n        targetMethod === permissions.method &&\n        targetEndpoint === permissions.apiPath,\n    );\n    if (targetEndpoint.startsWith('/api/v1/auth')) isExist = true;\n    if (!isExist && !isSkipPermission) {\n      throw new ForbiddenException(\n        'Bạn không có quyền để truy cập end point này',\n      );\n    }\n    if (err || !user) {\n      throw (\n        err ||\n        new UnauthorizedException(\n          'Token không hợp lệ/không có Bearer Token ở Header',\n        )\n      );\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/jwt.stategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, rolesService: RolesService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/jwt.stategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/jwt.stategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { RolesService } from 'src/roles/roles.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService,\n    private rolesService: RolesService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_TOKEN_SECRET'),\n    });\n  }\n\n  async validate(payload: any) {\n    const { _id, name, email, role } = payload;\n    const useRole = role as unknown as { _id: string; name: string };\n    console.log(\"🚀 ~ file: jwt.stategy.ts:24 ~ JwtStrategy ~ validate ~ useRole:\", useRole)\n    const temp = (await this.rolesService.findOne(useRole._id)).toObject();\n    console.log(\"🚀 ~ file: jwt.stategy.ts:26 ~ JwtStrategy ~ validate ~ temp:\", temp)\n    return { _id, name, email, role, permissions: temp?.permissions ?? [] };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('local')\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/passport/local.stategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/passport/local.stategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(username: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/passport/local.stategy.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from '../auth.service';\n\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException(\"Username/Password Không hợp lệ\");\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                handleTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        handleTestEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleTestEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Test email')@Cron('0 10 0 * * 0')\n                \n            \n\n                    \n                        \n                            Defined in src/mail/mail.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { Public, ResponseMessage } from 'src/decorator/customize';\nimport { MailerService } from '@nestjs-modules/mailer';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { SubscriberDocument } from 'src/subscribers/schema/subscriber.schema';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber } from 'rxjs';\nimport { Job, JobDocument } from 'src/jobs/schema/job.schema';\nimport { Cron } from '@nestjs/schedule';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('mail')\n@Controller('mail')\nexport class MailController {\n  constructor(\n    private readonly mailService: MailService,\n    private mailerService: MailerService,\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n    @InjectModel(Job.name) private jobModel: SoftDeleteModel,\n  ) {}\n\n  @Get()\n  @Public()\n  @ResponseMessage('Test email')\n  @Cron('0 10 0 * * 0') //0.00 am every day\n  async handleTestEmail() {\n    const subscribers = await this.subscriberModel.find({});\n    for (const subs of subscribers) {\n      const subsSkills = subs.skills;\n      const jobWithMatchingSkills = await this.jobModel.find({\n        skills: { $in: subsSkills },\n      });\n      if (jobWithMatchingSkills?.length) {\n        const jobs = jobWithMatchingSkills.map((item) => {\n          return {\n            name: item.name,\n            company: item.company.name,\n            salary:\n              `${item.salary}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + ' đ',\n            skills: item.skills,\n          };\n        });\n\n        await this.mailerService.sendMail({\n          to: 'phucdev2305@gmail.com',\n          from: '\"Support Team\" ', // override default from\n          subject: 'Welcome to Nice App! Confirm your Email',\n          template: 'new-job',\n          context: {\n            receiver: subs.name,\n            jobs: jobs,\n          }, // HTML body content\n        });\n      }\n      //todo\n      //build template\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\n\nMailService\n\nMailService\n\n\n\nMailModule\n\nMailModule\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigService } from '@nestjs/config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarsAdapter } from '@nestjs-modules/mailer/dist/adapters/handlebars.adapter';\nimport { join } from 'path';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Subscriber,\n  SubscriberSchema,\n} from 'src/subscribers/schema/subscriber.schema';\nimport { Job, JobSchema } from 'src/jobs/schema/job.schema';\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        transport: {\n          type: 'SMTP',\n          host: configService.get('EMAIL_HOST'),\n          secure: true,\n          port: 465,\n          auth: {\n            user: configService.get('EMAIL_AUTH_USER'),\n            pass: configService.get('EMAIL_AUTH_PASS'),\n          },\n        },\n        template: {\n          dir: join(__dirname, 'templates'),\n          adapter: new HandlebarsAdapter(),\n          options: {\n            strict: true,\n          },\n        },\n        preview:\n          configService.get('EMAIL_PREVIEW') === 'true' ? true : false,\n      }),\n      inject: [ConfigService],\n    }),\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n      { name: Job.name, schema: JobSchema },\n    ]),\n  ],\n  controllers: [MailController],\n  providers: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class MailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterConfigService.html":{"url":"injectables/MulterConfigService.html","title":"injectable - MulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer.config.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getRootPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                            \n                                ensureExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createMulterOptions\n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     MulterModuleOptions\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ensureExists\n                        \n                    \n                \n            \n            \n                \nensureExists(targetDirectory: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/files/multer.config.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                targetDirectory\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        getRootPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/files/multer.config.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport {\n  MulterModuleOptions,\n  MulterOptionsFactory,\n} from '@nestjs/platform-express';\nimport fs from 'fs';\nimport { diskStorage } from 'multer';\nimport path, { join } from 'path';\n@Injectable()\nexport class MulterConfigService implements MulterOptionsFactory {\n  getRootPath = () => {\n    return process.cwd();\n  };\n  ensureExists(targetDirectory: string) {\n    fs.mkdir(targetDirectory, { recursive: true }, (error) => {\n      if (!error) {\n        console.log('Directory successfully created, or it already exists.');\n        return;\n      }\n      switch (error.code) {\n        case 'EEXIST':\n          // Error:\n          // Requested location already exists, but it's not a directory.\n          break;\n        case 'ENOTDIR':\n          // Error:\n          // The parent hierarchy contains a file with the same name as the dir\n          // you're trying to create.\n          break;\n        default:\n          // Some other error like permission denied.\n          console.error(error);\n          break;\n      }\n    });\n  }\n\n  createMulterOptions(): MulterModuleOptions {\n    return {\n      storage: diskStorage({\n        destination: (req, file, cb) => {\n          const folder = req?.headers?.folder_type ?? 'default';\n          this.ensureExists(`public/images/${folder}`);\n          cb(null, join(this.getRootPath(), `public/images/${folder}`));\n        },\n        filename: (req, file, cb) => {\n          //get image extension\n          const extName = path.extname(file.originalname);\n          //get image's name (without extension)\n          const baseName = path.basename(file.originalname, extName);\n          const finalName = `${baseName}-${Date.now()}${extName}`;\n          cb(null, finalName);\n        },\n      }),\n      fileFilter: (req, file, cb) => {\n        const allowedFileTypes = [\n          'jpg',\n          'jpeg',\n          'png',\n          'gif',\n          'pdf',\n          'doc',\n          'docx',\n        ];\n        const fileExtension = file.originalname.split('.').pop().toLowerCase();\n        const isValidFileType = allowedFileTypes.includes(fileExtension);\n        if (!isValidFileType) {\n          cb(\n            new HttpException(\n              'Invalid file type',\n              HttpStatus.UNPROCESSABLE_ENTITY,\n            ),\n            null,\n          );\n        } else cb(null, true);\n      },\n      limits: {\n        fileSize: 1024 * 1024 * 1, // 1MB\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Permission.html":{"url":"classes/Permission.html","title":"class - Permission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/schema/permission.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/schema/permission.schema.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type PermissionDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Permission {\n  @Prop()\n  name: string;\n  @Prop()\n  apiPath: string;\n  @Prop()\n  method: string;\n  @Prop()\n  module: string;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const PermissionSchema = SchemaFactory.createForClass(Permission);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PermissionsController.html":{"url":"controllers/PermissionsController.html","title":"controller - PermissionsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PermissionsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                permissions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPermissionDto: CreatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPermissionDto\n                                            \n                                                            CreatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Create A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Create A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePermissionDto: UpdatePermissionDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/permissions/permissions.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePermissionDto\n                                            \n                                                            UpdatePermissionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('permissions')\n@Controller('permissions')\nexport class PermissionsController {\n  constructor(private readonly permissionsService: PermissionsService) {}\n\n  @Post()\n  @ResponseMessage('Create A New Permission Success!!')\n  create(\n    @Body() createPermissionDto: CreatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.create(createPermissionDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Create A New Permission Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.permissionsService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get A New Permission Success!!')\n  findOne(@Param('id') id: string) {\n    return this.permissionsService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update A New Permission Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updatePermissionDto: UpdatePermissionDto,\n    @User() user: IUser,\n  ) {\n    return this.permissionsService.update(id, updatePermissionDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Create A New Permission Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.permissionsService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PermissionsModule.html":{"url":"modules/PermissionsModule.html","title":"module - PermissionsModule","body":"\n                   \n\n\n\n\n    Modules\n    PermissionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\n\nPermissionsService\n\nPermissionsService\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/permissions/permissions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PermissionsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PermissionsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PermissionsService } from './permissions.service';\nimport { PermissionsController } from './permissions.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Permission, PermissionSchema } from './schema/permission.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n  controllers: [PermissionsController],\n  providers: [PermissionsService],\n})\nexport class PermissionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PermissionsService.html":{"url":"injectables/PermissionsService.html","title":"injectable - PermissionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PermissionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/permissions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(permissionModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/permissions/permissions.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permissionModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/permissions/permissions.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/permissions/permissions.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/permissions/permissions.service.ts:118\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/permissions/permissions.service.ts:96\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreatePermissionDto } from './dto/create-permission.dto';\nimport { UpdatePermissionDto } from './dto/update-permission.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Permission, PermissionDocument } from './schema/permission.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport aqp from 'api-query-params';\nimport mongoose from 'mongoose';\n\n@Injectable()\nexport class PermissionsService {\n  constructor(\n    @InjectModel(Permission.name)\n    private permissionModel: SoftDeleteModel,\n  ) {}\n\n  create = async (createPermissionDto: CreatePermissionDto, user: IUser) => {\n    const { apiPath, method, name, module } = createPermissionDto;\n    const existingPermisson = await this.permissionModel.findOne({\n      apiPath,\n      method,\n    });\n    if (existingPermisson) {\n      throw new BadRequestException(\n        `API ${apiPath} với method ${method} đã tồn tại vui lòng thêm API với method khác.`,\n      );\n    }\n    const newPermission = await this.permissionModel.create({\n      apiPath,\n      method,\n      name,\n      module,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newPermission._id,\n      createdAt: newPermission.createdAt,\n    };\n  };\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.permissionModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-apiPath') {\n      // @ts-ignore: Unreachable code error\n      sort = '-apiPath';\n    }\n    if ((sort as any) === '-method') {\n      // @ts-ignore: Unreachable code error\n      sort = '-method';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.permissionModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select('-password')\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    return await this.permissionModel.findOne({ _id: id });\n  }\n\n  update = async (\n    id: string,\n    updatePermissionDto: UpdatePermissionDto,\n    user: IUser,\n  ) => {\n    const { apiPath, method, name, module } = updatePermissionDto;\n    const newPermissionUpdate = await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        apiPath,\n        method,\n        name,\n        module,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return newPermissionUpdate;\n  };\n\n  remove = async (id: string, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found permission';\n    }\n    await this.permissionModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.permissionModel.softDelete({ _id: id });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Age'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Gender'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Password' })\n  password: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Please Enter Your Name',\n  })\n  name: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Email',\n  })\n  email: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Password',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Age',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Please Enter Your Gender',\n  })\n  gender: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Address',\n  })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Resume.html":{"url":"classes/Resume.html","title":"class - Resume","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Resume\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/schema/resume.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                companyId\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                history\n                            \n                            \n                                    \n                                jobId\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                            \n                                    \n                                url\n                            \n                            \n                                    \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        companyId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        history\n                        \n                    \n                \n            \n                \n                    \n                        Type :     [literal type]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        jobId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/schema/resume.schema.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Company } from 'src/companies/schema/company.schema';\nimport { Job } from 'src/jobs/schema/job.schema';\n\nexport type ResumeDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Resume {\n  @Prop()\n  email: string;\n  @Prop()\n  status: string;\n  @Prop()\n  userId: mongoose.Schema.Types.ObjectId;\n  @Prop()\n  url: string;\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Company.name })\n  companyId: mongoose.Schema.Types.ObjectId;\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Job.name })\n  jobId: mongoose.Schema.Types.ObjectId;\n  @Prop({ type: Object })\n  history: [\n    {\n      status: string;\n      updatedAt: Date;\n      updatedBy: {\n        _id: mongoose.Schema.Types.ObjectId;\n        email: string;\n      };\n    },\n  ];\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const ResumeSchema = SchemaFactory.createForClass(Resume);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ResumesController.html":{"url":"controllers/ResumesController.html","title":"controller - ResumesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ResumesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                resumes\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                findOneByUser\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create A Resume Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get  Job With Paginate Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get  Job By Id Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOneByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUser(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('by-user')@ResponseMessage('Get  Job By User Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Jobs Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateResumeDto: UpdateResumeDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update Jobs Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/resumes/resumes.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateResumeDto\n                                            \n                                                            UpdateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { CreateResumeDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('resumes')\n@Controller('resumes')\nexport class ResumesController {\n  constructor(private readonly resumesService: ResumesService) {}\n\n  @Post()\n  @ResponseMessage('Create A Resume Success!!')\n  create(@Body() createResumeDto: CreateResumeDto, @User() user: IUser) {\n    return this.resumesService.create(createResumeDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Get  Job With Paginate Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.resumesService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get  Job By Id Success!!')\n  findOne(@Param('id') id: string) {\n    return this.resumesService.findOne(id);\n  }\n\n  @Post('by-user')\n  @ResponseMessage('Get  Job By User Success!!')\n  findOneByUser(@User() user: IUser) {\n    return this.resumesService.findOneByUser(user);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update Jobs Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updateResumeDto: UpdateResumeDto,\n    @User() user: IUser,\n  ) {\n    return this.resumesService.update(id, updateResumeDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete Jobs Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.resumesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResumesModule.html":{"url":"modules/ResumesModule.html","title":"module - ResumesModule","body":"\n                   \n\n\n\n\n    Modules\n    ResumesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\n\nResumesService\n\nResumesService\n\n\n\nResumesModule\n\nResumesModule\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/resumes/resumes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResumesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ResumesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ResumesService } from './resumes.service';\nimport { ResumesController } from './resumes.controller';\nimport { Resume, ResumeSchema } from './schema/resume.schema';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Company, CompanySchema } from 'src/companies/schema/company.schema';\nimport { Job, JobSchema } from 'src/jobs/schema/job.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Resume.name, schema: ResumeSchema }]),\n    MongooseModule.forFeature([{ name: Company.name, schema: CompanySchema }]),\n    MongooseModule.forFeature([{ name: Job.name, schema: JobSchema }]),\n  ],\n  controllers: [ResumesController],\n  providers: [ResumesService],\n})\nexport class ResumesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResumesService.html":{"url":"injectables/ResumesService.html","title":"injectable - ResumesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResumesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/resumes.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findOneByUser\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resumeModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/resumes/resumes.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resumeModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createResumeDto: CreateResumeDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createResumeDto\n                                            \n                                                            CreateResumeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/resumes/resumes.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/resumes/resumes.service.ts:148\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/resumes/resumes.service.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/resumes/resumes.service.ts:97\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateResumeDto } from './dto/create-resume.dto';\nimport { UpdateResumeDto } from './dto/update-resume.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Resume, ResumeDocument } from './schema/resume.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from 'src/users/users.interface';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class ResumesService {\n  constructor(\n    @InjectModel(Resume.name)\n    private resumeModel: SoftDeleteModel,\n  ) {}\n\n  async create(createResumeDto: CreateResumeDto, user: IUser) {\n    const { url, companyId, jobId } = createResumeDto;\n    const newResume = await this.resumeModel.create({\n      email: user.email,\n      userId: user._id,\n      status: 'PENDING',\n      history: [\n        {\n          status: 'PENDING',\n          updatedAt: new Date(),\n          updatedBy: {\n            _id: user._id,\n            email: user.email,\n          },\n        },\n      ],\n      url,\n      companyId,\n      jobId,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newResume._id,\n      createdAt: newResume.createdAt,\n    };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population, projection } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.resumeModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-email') {\n      // @ts-ignore: Unreachable code error\n      sort = '-email';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.resumeModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select(projection as any)\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found resume';\n    }\n    return this.resumeModel.findOne({ _id: id });\n  }\n  update = async (\n    id: string,\n    updateResumeDto: UpdateResumeDto,\n    user: IUser,\n  ) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found resume';\n    }\n    const existingResume = await this.resumeModel.findOne({ _id: id });\n\n    if (!existingResume) {\n      return 'not found resume';\n    }\n    const newHistoryEntry = {\n      status: updateResumeDto.status,\n      updatedAt: new Date(),\n      updatedBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    };\n    const updatedHistory = [...existingResume.history, newHistoryEntry];\n    const newResumeUpdate = await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        ...updateResumeDto,\n        history: updatedHistory,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return newResumeUpdate;\n  };\n\n  remove = async (id: string, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found resume';\n    }\n    await this.resumeModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.resumeModel.softDelete({ _id: id });\n  };\n  findOneByUser = async (user: IUser) => {\n    console.log(\n      '🚀 ~ file: resumes.service.ts:149 ~ ResumesService ~ findOneByUser= ~ user:',\n      user.email,\n    );\n    return this.resumeModel\n      .find({ email: user.email })\n      .populate('companyId') // Populate the 'companyId' field\n      .populate('jobId'); // Populate the 'jobId' field;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/schema/role.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/schema/role.schema.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Permission } from 'src/permissions/schema/permission.schema';\n\nexport type RoleDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Role {\n  @Prop()\n  name: string;\n  @Prop()\n  description: string;\n  @Prop({ type: [mongoose.Schema.Types.ObjectId], ref: Permission.name })\n  permissions: mongoose.Schema.Types.ObjectId[];\n  @Prop()\n  isActive: boolean;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const RoleSchema = SchemaFactory.createForClass(Role);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RolesController.html":{"url":"controllers/RolesController.html","title":"controller - RolesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RolesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Get A New Role Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Create A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Create A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateRoleDto: UpdateRoleDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update A New Permission Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/roles/roles.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateRoleDto\n                                            \n                                                            UpdateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from 'src/users/users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('roles')\n@Controller('roles')\nexport class RolesController {\n  constructor(private readonly rolesService: RolesService) {}\n\n  @Post()\n  @ResponseMessage('Get A New Role Success!!')\n  create(@Body() createRoleDto: CreateRoleDto, @User() user: IUser) {\n    return this.rolesService.create(createRoleDto, user);\n  }\n  @Get()\n  @ResponseMessage('Create A New Permission Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.rolesService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get A New Permission Success!!')\n  findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update A New Permission Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updateRoleDto: UpdateRoleDto,\n    @User() user: IUser,\n  ) {\n    return this.rolesService.update(id, updateRoleDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Create A New Permission Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.rolesService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RolesModule.html":{"url":"modules/RolesModule.html","title":"module - RolesModule","body":"\n                   \n\n\n\n\n    Modules\n    RolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_RolesModule_exports\n\n\n\n\nRolesModule \n\nRolesModule \n\n\n\nRolesService \n\nRolesService \n\n\n\nRolesModule\n\nRolesModule\n\nRolesModule  -->\n\nRolesModule->RolesModule \n\n\n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/roles/roles.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RolesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RolesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RolesModule\n                        \n                        \n                            RolesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RolesService } from './roles.service';\nimport { RolesController } from './roles.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Role, RoleSchema } from './schema/role.schema';\nimport {\n  Permission,\n  PermissionSchema,\n} from 'src/permissions/schema/permission.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Role.name, schema: RoleSchema },\n      { name: Permission.name, schema: PermissionSchema },\n    ]),\n  ],\n  controllers: [RolesController],\n  providers: [RolesService],\n  exports: [RolesModule, RolesService],\n})\nexport class RolesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/roles.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/roles/roles.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createRoleDto: CreateRoleDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createRoleDto\n                                            \n                                                            CreateRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/roles/roles.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/roles/roles.service.ts:111\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/roles/roles.service.ts:90\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Role, RoleDocument } from './schema/role.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\nimport { ADMIN_ROLE } from 'src/databases/sample';\n@Injectable()\nexport class RolesService {\n  constructor(\n    @InjectModel(Role.name)\n    private roleModel: SoftDeleteModel,\n  ) {}\n  async create(createRoleDto: CreateRoleDto, user: IUser) {\n    const { description, isActive, name, permissions } = createRoleDto;\n    const newRole = await this.roleModel.create({\n      description,\n      isActive,\n      name,\n      permissions,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newRole._id,\n      createdAt: newRole.createdAt,\n    };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.roleModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-description') {\n      // @ts-ignore: Unreachable code error\n      sort = '-description';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.roleModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select('-password')\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  async findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found role');\n    }\n    return (await this.roleModel.findOne({ _id: id })).populate({\n      path: 'permissions',\n      select: {\n        _id: 1,\n        apiPath: 1,\n        name: 1,\n        method: 1,\n        module: 1,\n      },\n    });\n  }\n\n  update = async (id: string, updateRoleDto: UpdateRoleDto, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      throw new BadRequestException('not found role');\n    }\n    const { description, isActive, name, permissions } = updateRoleDto;\n    const newPermissionUpdate = await this.roleModel.updateOne(\n      { _id: id },\n      {\n        description,\n        isActive,\n        name,\n        permissions,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return newPermissionUpdate;\n  };\n\n  remove = async (id: string, user: IUser) => {\n    const foundRole = await this.roleModel.findById(id);\n    if (foundRole.name === ADMIN_ROLE) {\n      throw new BadRequestException('không thể xóa role ADMIN');\n    }\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found permission';\n    }\n    await this.roleModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.roleModel.softDelete({ _id: id });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Subscriber.html":{"url":"classes/Subscriber.html","title":"class - Subscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Subscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/schema/subscriber.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/schema/subscriber.schema.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\n\nexport type SubscriberDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class Subscriber {\n  @Prop()\n  name: string;\n  @Prop()\n  skills: string[];\n  @Prop()\n  email: string;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const SubscriberSchema = SchemaFactory.createForClass(Subscriber);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SubscribersController.html":{"url":"controllers/SubscribersController.html","title":"controller - SubscribersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SubscribersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                subscribers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                getUserSkill\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create Subscribers Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Public()@ResponseMessage('Get  Subscriber With Paginate Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Public()@ResponseMessage('Get  Subscriber By Id Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        getUserSkill\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserSkill(user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('skills')@ResponseMessage('Get Subscribers's skills')@SkipCheckPermission()\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete Subscribers Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(updateSubscriberDto: UpdateSubscriberDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()@SkipCheckPermission()@ResponseMessage('Update Subscribers Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/subscribers/subscribers.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateSubscriberDto\n                                            \n                                                            UpdateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport {\n  Public,\n  ResponseMessage,\n  SkipCheckPermission,\n  User,\n} from 'src/decorator/customize';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('subscribers')\n@Controller('subscribers')\nexport class SubscribersController {\n  constructor(private readonly subscribersService: SubscribersService) {}\n\n  @Post()\n  @ResponseMessage('Create Subscribers Success!!')\n  create(\n    @Body() createSubscriberDto: CreateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.create(createSubscriberDto, user);\n  }\n\n  @Get()\n  @Public()\n  @ResponseMessage('Get  Subscriber With Paginate Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.subscribersService.findAll(current, pageSize, qs);\n  }\n\n  @Post('skills')\n  @ResponseMessage(\"Get Subscribers's skills\")\n  @SkipCheckPermission()\n  getUserSkill(@User() user: IUser) {\n    return this.subscribersService.getSkills(user);\n  }\n\n  @Get(':id')\n  @Public()\n  @ResponseMessage('Get  Subscriber By Id Success!!')\n  findOne(@Param('id') id: string) {\n    return this.subscribersService.findOne(id);\n  }\n\n  @Patch()\n  @SkipCheckPermission()\n  @ResponseMessage('Update Subscribers Success!!')\n  update(\n    @Body() updateSubscriberDto: UpdateSubscriberDto,\n    @User() user: IUser,\n  ) {\n    return this.subscribersService.update(updateSubscriberDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete Subscribers Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.subscribersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SubscribersModule.html":{"url":"modules/SubscribersModule.html","title":"module - SubscribersModule","body":"\n                   \n\n\n\n\n    Modules\n    SubscribersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\n\nSubscribersService\n\nSubscribersService\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/subscribers/subscribers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SubscribersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SubscribersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SubscribersService } from './subscribers.service';\nimport { SubscribersController } from './subscribers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberSchema } from './schema/subscriber.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Subscriber.name, schema: SubscriberSchema },\n    ]),\n  ],\n  controllers: [SubscribersController],\n  providers: [SubscribersService],\n})\nexport class SubscribersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SubscribersService.html":{"url":"injectables/SubscribersService.html","title":"injectable - SubscribersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SubscribersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/subscribers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                getSkills\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(subscriberModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/subscribers/subscribers.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        subscriberModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSubscriberDto: CreateSubscriberDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSubscriberDto\n                                            \n                                                            CreateSubscriberDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getSkills\n                        \n                    \n                \n            \n            \n                \n                        \n                    getSkills(user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/subscribers/subscribers.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscribers.service.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/subscribers/subscribers.service.ts:84\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSubscriberDto } from './dto/create-subscriber.dto';\nimport { UpdateSubscriberDto } from './dto/update-subscriber.dto';\nimport { IUser } from 'src/users/users.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Subscriber, SubscriberDocument } from './schema/subscriber.schema';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport mongoose from 'mongoose';\nimport aqp from 'api-query-params';\n\n@Injectable()\nexport class SubscribersService {\n  constructor(\n    @InjectModel(Subscriber.name)\n    private subscriberModel: SoftDeleteModel,\n  ) {}\n  async create(createSubscriberDto: CreateSubscriberDto, user: IUser) {\n    const { name, skills, email } = createSubscriberDto;\n    const newSubscriber = await this.subscriberModel.create({\n      name,\n      skills,\n      email,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    });\n    return {\n      _id: newSubscriber._id,\n      createdAt: newSubscriber.createdAt,\n    };\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.subscriberModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-email') {\n      // @ts-ignore: Unreachable code error\n      sort = '-email';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.subscriberModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select('-password')\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found subscriber';\n    }\n    return this.subscriberModel.findOne({ _id: id });\n  }\n\n  update = async (updateSubscriberDto: UpdateSubscriberDto, user: IUser) => {\n    const newSubscriberUpdate = await this.subscriberModel.updateOne(\n      { email: user.email },\n      {\n        ...updateSubscriberDto,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n      { upsert: true },\n    );\n    return newSubscriberUpdate;\n  };\n\n  remove = async (id: string, user: IUser) => {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found subscriber';\n    }\n    await this.subscriberModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.subscriberModel.softDelete({ _id: id });\n  };\n  async getSkills(user: IUser) {\n    const { email } = user;\n    return await this.subscriberModel.findOne({email},{skills:1})\n  }\n}\n\n//nếu mà chưa có company thì tự thêm company\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/core/transform.interceptor.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/core/transform.interceptor.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RESPONSE_MESSAGE } from 'src/decorator/customize';\nexport interface Response {\n  statusCode: number;\n  message?: string;\n  data: any;\n}\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  constructor(private reflector: Reflector) {}\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable> {\n    return next.handle().pipe(\n      map((data) => ({\n        statusCode: context.switchToHttp().getResponse().statusCode,\n        message:\n          this.reflector.get(RESPONSE_MESSAGE, context.getHandler()) ||\n          '',\n        data: data,\n      })),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCompanyDto.html":{"url":"classes/UpdateCompanyDto.html","title":"class - UpdateCompanyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCompanyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/companies/dto/update-company.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCompanyDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                logo\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        logo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Logo'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/companies/dto/update-company.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCompanyDto } from './create-company.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateCompanyDto extends PartialType(CreateCompanyDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Logo' })\n  logo: string;\n  @IsNotEmpty({ message: 'Please Enter Your address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your description' })\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateFileDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobDto.html":{"url":"classes/UpdateJobDto.html","title":"class - UpdateJobDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/jobs/dto/update-job.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateJobDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                endDate\n                            \n                            \n                                    \n                                level\n                            \n                            \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                salary\n                            \n                            \n                                    \n                                skills\n                            \n                            \n                                    \n                                startDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        endDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your End Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Level'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Quantity'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Salary'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Skills'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        startDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Start Date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/jobs/dto/update-job.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobDto } from './create-job.dto';\nimport {\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  @IsNotEmpty()\n  logo: string;\n}\nexport class UpdateJobDto extends PartialType(CreateJobDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  location: string;\n  @IsNotEmpty({ message: 'Please Enter Your Salary' })\n  salary: number;\n  @IsNotEmpty({ message: 'Please Enter Your Quantity' })\n  quantity: number;\n  @IsNotEmpty({ message: 'Please Enter Your Level' })\n  level: string;\n  @IsNotEmpty({ message: 'Please Enter Your Description' })\n  description: string;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n  @IsNotEmpty({ message: 'Please Enter Your Start Date' })\n  startDate: Date;\n  @IsNotEmpty({ message: 'Please Enter Your End Date' })\n  endDate: Date;\n  active: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePermissionDto.html":{"url":"classes/UpdatePermissionDto.html","title":"class - UpdatePermissionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePermissionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/permissions/dto/update-permission.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePermissionDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                apiPath\n                            \n                            \n                                    \n                                method\n                            \n                            \n                                    \n                                module\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        apiPath\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/update-permission.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/update-permission.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        module\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/update-permission.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/permissions/dto/update-permission.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreatePermissionDto } from './create-permission.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdatePermissionDto extends PartialType(CreatePermissionDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  apiPath: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  method: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  module: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateResumeDto.html":{"url":"classes/UpdateResumeDto.html","title":"class - UpdateResumeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateResumeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/resumes/dto/update-resume.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateResumeDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Status'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/resumes/dto/update-resume.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateResumeDto } from './create-resume.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateResumeDto extends PartialType(CreateResumeDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Status' })\n  status: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/roles/dto/update-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateRoleDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                permissions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/update-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/update-role.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/update-role.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/roles/dto/update-role.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateRoleDto } from './create-role.dto';\nimport { IsNotEmpty } from 'class-validator';\nimport mongoose from 'mongoose';\n\nexport class UpdateRoleDto extends PartialType(CreateRoleDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  description: string;\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  permissions: mongoose.Schema.Types.ObjectId[];\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSubscriberDto.html":{"url":"classes/UpdateSubscriberDto.html","title":"class - UpdateSubscriberDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSubscriberDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/subscribers/dto/update-subscriber.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSubscriberDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                skills\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/update-subscriber.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/update-subscriber.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        skills\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Skills'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/subscribers/dto/update-subscriber.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateSubscriberDto } from './create-subscriber.dto';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class UpdateSubscriberDto extends PartialType(CreateSubscriberDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Skills' })\n  skills: string[];\n  @IsNotEmpty({ message: 'Please Enter Your email' })\n  email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                company\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Address'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Age'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Company\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmptyObject()@IsObject()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Email'})@IsEmail({}, {message: 'Email Must Be An Email'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Gender'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Name'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Please Enter Your Role'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport mongoose from 'mongoose';\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schema/user.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                address\n                            \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                company\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                createdBy\n                            \n                            \n                                    \n                                deletedAt\n                            \n                            \n                                    \n                                deletedBy\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                isDeleted\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        company\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deletedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isDeleted\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :     mongoose.Schema.Types.ObjectId\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Object})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/schema/user.schema.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose, { HydratedDocument } from 'mongoose';\nimport { Role } from 'src/roles/schema/role.schema';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({ timestamps: true })\nexport class User {\n  @Prop()\n  name: string;\n  @Prop()\n  email: string;\n  @Prop()\n  password: string;\n  @Prop()\n  age: number;\n  @Prop()\n  gender: string;\n  @Prop()\n  address: string;\n  @Prop({ type: Object })\n  company: {\n    _id: mongoose.Schema.Types.ObjectId;\n    name: string;\n    logo: string;\n  };\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: Role.name })\n  role: mongoose.Schema.Types.ObjectId;\n  @Prop()\n  refreshToken: string;\n  @Prop()\n  isDeleted: boolean;\n  @Prop({ type: Object })\n  createdBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  updatedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop({ type: Object })\n  deletedBy: {\n    _id: mongoose.Schema.Types.ObjectId;\n    email: string;\n  };\n  @Prop()\n  deletedAt: Date;\n  @Prop()\n  createdAt: Date;\n  @Prop()\n  updatedAt: Date;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserLoginDto.html":{"url":"classes/UserLoginDto.html","title":"class - UserLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    Readonly\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: '123456', description: 'password'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Readonly\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({example: 'admin@gmail.com', description: 'username'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:74\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNotEmptyObject,\n  IsObject,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport mongoose from 'mongoose';\n\nclass Company {\n  @IsNotEmpty()\n  _id: mongoose.Schema.Types.ObjectId;\n  @IsNotEmpty()\n  name: string;\n  // @IsNotEmpty()\n  logo: string;\n}\nexport class CreateUserDto {\n  @IsNotEmpty({ message: 'Please Enter Your Name' })\n  name: string;\n  @IsNotEmpty({ message: 'Please Enter Your Email' })\n  @IsEmail({}, { message: 'Email Must Be An Email' })\n  email: string;\n  @IsNotEmpty({ message: 'Please Enter Your Password' })\n  password: string;\n  @IsNotEmpty({ message: 'Please Enter Your Age' })\n  age: number;\n  @IsNotEmpty({ message: 'Please Enter Your Gender' })\n  gender: string;\n  @IsNotEmpty({ message: 'Please Enter Your Address' })\n  address: string;\n  @IsNotEmpty({ message: 'Please Enter Your Role' })\n  role: mongoose.Schema.Types.ObjectId;\n  @IsNotEmptyObject()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => Company)\n  company: Company;\n}\n\nexport class RegisterUserDto {\n  @IsNotEmpty({\n    message: 'Please Enter Your Name',\n  })\n  name: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Email',\n  })\n  email: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Password',\n  })\n  password: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Age',\n  })\n  age: number;\n  @IsNotEmpty({\n    message: 'Please Enter Your Gender',\n  })\n  gender: string;\n  @IsNotEmpty({\n    message: 'Please Enter Your Address',\n  })\n  address: string;\n}\nexport class UserLoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({ example: 'admin@gmail.com', description: 'username' })\n  readonly username: string;\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    example: '123456',\n    description: 'password',\n  })\n  readonly password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOne\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ResponseMessage('Create User Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ResponseMessage('Get User With Paginate Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ResponseMessage('Get User By Id Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ResponseMessage('Delete User Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ResponseMessage('Update User Success!!')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ResponseMessage, User } from 'src/decorator/customize';\nimport { IUser } from './users.interface';\nimport { ApiTags } from '@nestjs/swagger';\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ResponseMessage('Create User Success!!')\n  create(@Body() createUserDto: CreateUserDto, @User() user: IUser) {\n    return this.usersService.create(createUserDto, user);\n  }\n\n  @Get()\n  @ResponseMessage('Get User With Paginate Success!!')\n  findAll(\n    @Query('current') current: number,\n    @Query('pageSize') pageSize: number,\n    @Query() qs: string,\n  ) {\n    return this.usersService.findAll(current, pageSize, qs);\n  }\n\n  @Get(':id')\n  @ResponseMessage('Get User By Id Success!!')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ResponseMessage('Update User Success!!')\n  update(\n    @Param('id') id: string,\n    @Body() updateUserDto: UpdateUserDto,\n    @User() user: IUser,\n  ) {\n    return this.usersService.update(id, updateUserDto, user);\n  }\n\n  @Delete(':id')\n  @ResponseMessage('Delete User Success!!')\n  remove(@Param('id') id: string, @User() user: IUser) {\n    return this.usersService.remove(id, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './schema/user.schema';\nimport { Role, RoleSchema } from 'src/roles/schema/role.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      { name: Role.name, schema: RoleSchema },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findUserByToken\n                            \n                            \n                                getHashPassword\n                            \n                            \n                                isValidPassword\n                            \n                            \n                                updateUserToken\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                findOneByUsername\n                            \n                            \n                                    Async\n                                register\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: SoftDeleteModel, roleModel: SoftDeleteModel)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        roleModel\n                                                  \n                                                        \n                                                                        SoftDeleteModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(current: number, pageSize: number, qs: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                current\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                qs\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneByUsername\n                        \n                    \n                \n            \n            \n                \nfindOneByUsername(username: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                username\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto, user: IUser)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            IUser\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        findUserByToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:180\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHashPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isValidPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserToken\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:172\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport { CreateUserDto, RegisterUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schema/user.schema';\nimport mongoose from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { compareSync, genSaltSync, hashSync } from 'bcryptjs';\nimport { SoftDeleteModel } from 'soft-delete-plugin-mongoose';\nimport { IUser } from './users.interface';\nimport aqp from 'api-query-params';\nimport { USER_ROLE } from 'src/databases/sample';\nimport { Role, RoleDocument } from 'src/roles/schema/role.schema';\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userModel: SoftDeleteModel,\n    @InjectModel(Role.name) private roleModel: SoftDeleteModel,\n  ) {}\n  getHashPassword = (password: string) => {\n    const salt = genSaltSync(10);\n    const hash = hashSync(password, salt);\n    return hash;\n  };\n  async create(createUserDto: CreateUserDto, user: IUser) {\n    const { email, password, name, address, age, company, role, gender } =\n      createUserDto;\n    const hashPassword = this.getHashPassword(password);\n    const newUser = await this.userModel.create({\n      email,\n      password: hashPassword,\n      name,\n      role: role,\n      gender,\n      address,\n      age,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n      company,\n    });\n    return {\n      _id: newUser._id,\n      createdBy: {\n        _id: user._id,\n        email: user.email,\n      },\n    };\n  }\n  async register(registerUserDto: RegisterUserDto) {\n    const { email, password, name, address, age, gender } = registerUserDto;\n    const isExist = this.userModel.findOne({ email });\n    if (!isExist) {\n      throw new BadRequestException(`Email: ${email} đã tồn tại.`);\n    }\n    const userRole = await this.roleModel.findOne({ name: USER_ROLE });\n    const hashPassword = this.getHashPassword(password);\n    return await this.userModel.create({\n      email,\n      gender,\n      password: hashPassword,\n      name,\n      address,\n      age,\n      role: userRole?._id,\n    });\n  }\n\n  async findAll(current: number, pageSize: number, qs: string) {\n    const { filter, sort, population } = aqp(qs);\n    delete filter.current;\n    delete filter.pageSize;\n    const offset: number = (+current - 1) * +pageSize;\n    const defaultLimit = +pageSize ? +pageSize : 10;\n    const totalItems = (await this.userModel.find(filter)).length;\n    const totalPages = Math.ceil(totalItems / defaultLimit);\n    if ((sort as any) === '-updatedAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-updatedAt';\n    }\n    if ((sort as any) === '-name') {\n      // @ts-ignore: Unreachable code error\n      sort = '-name';\n    }\n    if ((sort as any) === '-email') {\n      // @ts-ignore: Unreachable code error\n      sort = '-email';\n    }\n    if ((sort as any) === '-createdAt') {\n      // @ts-ignore: Unreachable code error\n      sort = '-createdAt';\n    }\n    const result = await this.userModel\n      .find(filter)\n      .skip(offset)\n      .limit(defaultLimit)\n      .sort(sort as any)\n      .populate(population)\n      .select('-password')\n      .exec();\n    return {\n      meta: {\n        current: current, //trang hien tai\n        pageSize: pageSize, // so luong ban ghi 1 trang\n        pages: totalPages, //tong so trang\n        total: totalItems, //tong so ban ghi\n      },\n      result,\n    };\n  }\n\n  findOne(id: string) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found user';\n    }\n    return this.userModel\n      .findOne({ _id: id })\n      .select('-password')\n      .populate({ path: 'role', select: { name: 1, _id: 1 } });\n  }\n  findOneByUsername(username: string) {\n    return this.userModel\n      .findOne({ email: username })\n      .populate({ path: 'role', select: { name: 1 } });\n  }\n\n  isValidPassword = (password: string, hash: string) => {\n    return compareSync(password, hash);\n  };\n  update(id: string, updateUserDto: UpdateUserDto, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found user';\n    }\n    const { email, name, address, age, gender, role, company } = updateUserDto;\n    return this.userModel.updateOne(\n      { _id: id },\n      {\n        email,\n        company,\n        name,\n        address,\n        age,\n        gender,\n        role,\n        updatedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n  }\n\n  async remove(id: string, user: IUser) {\n    if (!mongoose.Types.ObjectId.isValid(id)) {\n      return 'not found user';\n    }\n    const foundUser = await this.userModel.findById(id);\n    if (foundUser && foundUser.email === 'admin@gmail.com') {\n      throw new BadRequestException('không thể xóa tai khoan admin');\n    }\n    await this.userModel.updateOne(\n      { _id: id },\n      {\n        deletedBy: {\n          _id: user._id,\n          email: user.email,\n        },\n      },\n    );\n    return this.userModel.softDelete({ _id: id });\n  }\n  updateUserToken = async (refreshToken: string, _id: string) => {\n    return await this.userModel.updateOne(\n      { _id },\n      {\n        refreshToken,\n      },\n    );\n  };\n  findUserByToken = async (refreshToken: string) => {\n    return await this.userModel\n      .findOne({ refreshToken })\n      .populate({ path: 'role', select: { name: 1 } });\n  };\n}\n\n//nếu mà chưa có company thì tự thêm company\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/passport/jwt.stategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/passport/local.stategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/companies/companies.controller.ts\n            \n            controller\n            CompaniesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/companies/companies.service.ts\n            \n            injectable\n            CompaniesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/companies/dto/create-company.dto.ts\n            \n            class\n            CreateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/dto/update-company.dto.ts\n            \n            class\n            UpdateCompanyDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/companies/schema/company.schema.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/companies/schema/company.schema.ts\n            \n            variable\n            CompanySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/http-exception.filter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/databases.controller.ts\n            \n            controller\n            DatabasesController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/databases.service.ts\n            \n            injectable\n            DatabasesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            ADMIN_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_PERMISSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/sample.ts\n            \n            variable\n            USER_ROLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            IS_PUBLIC_PERMISSION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            RESPONSE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            ResponseMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            SkipCheckPermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/decorator/customize.ts\n            \n            variable\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer.config.ts\n            \n            injectable\n            MulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/schema/file.schema.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/create-job.dto.ts\n            \n            class\n            CreateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/jobs/dto/update-job.dto.ts\n            \n            class\n            UpdateJobDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/jobs/jobs.controller.ts\n            \n            controller\n            JobsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/jobs/jobs.service.ts\n            \n            injectable\n            JobsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/jobs/schema/job.schema.ts\n            \n            class\n            Job\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/jobs/schema/job.schema.ts\n            \n            variable\n            JobSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mail/mail.controller.ts\n            \n            controller\n            MailController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/mail/mail.service.ts\n            \n            injectable\n            MailService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/permissions/dto/create-permission.dto.ts\n            \n            class\n            CreatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/dto/update-permission.dto.ts\n            \n            class\n            UpdatePermissionDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/permissions/permissions.controller.ts\n            \n            controller\n            PermissionsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/permissions/permissions.service.ts\n            \n            injectable\n            PermissionsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            class\n            Permission\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/permissions/schema/permission.schema.ts\n            \n            variable\n            PermissionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/resumes/dto/create-resume.dto.ts\n            \n            class\n            CreateResumeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/resumes/dto/update-resume.dto.ts\n            \n            class\n            UpdateResumeDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/resumes/resumes.controller.ts\n            \n            controller\n            ResumesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/resumes/resumes.service.ts\n            \n            injectable\n            ResumesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/resumes/schema/resume.schema.ts\n            \n            class\n            Resume\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/resumes/schema/resume.schema.ts\n            \n            variable\n            ResumeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/roles/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/roles/roles.controller.ts\n            \n            controller\n            RolesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/roles/roles.service.ts\n            \n            injectable\n            RolesService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/roles/schema/role.schema.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/roles/schema/role.schema.ts\n            \n            variable\n            RoleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/dto/create-subscriber.dto.ts\n            \n            class\n            CreateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/dto/update-subscriber.dto.ts\n            \n            class\n            UpdateSubscriberDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            class\n            Subscriber\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/subscribers/schema/subscriber.schema.ts\n            \n            variable\n            SubscriberSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.controller.ts\n            \n            controller\n            SubscribersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/subscribers/subscribers.service.ts\n            \n            injectable\n            SubscribersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            UserLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            Company\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/schema/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/users/schema/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.interface.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/13)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.9.1\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : 3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : 10.0.1\n        \n            @nestjs/passport : 10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : 3.0.1\n        \n            @nestjs/swagger : 7.1.16\n        \n            @nestjs/terminus : 10.2.0\n        \n            @nestjs/throttler : ^5.0.1\n        \n            @types/ejs : ^3.1.5\n        \n            api-query-params : 5.4.0\n        \n            bcryptjs : 2.4.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cookie-parser : ^1.4.6\n        \n            cron : 2.4.3\n        \n            dotenv : ^16.3.1\n        \n            ejs : ^3.1.9\n        \n            handlebars : ^4.7.8\n        \n            helmet : ^7.1.0\n        \n            mongoose : 7.5.3\n        \n            nodemailer : ^6.9.7\n        \n            passport : 0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : 1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            soft-delete-plugin-mongoose : ^1.0.15\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CompaniesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabasesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PermissionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResumesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SubscribersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CompaniesModule\n\n\n\ncluster_CompaniesModule_providers\n\n\n\ncluster_DatabasesModule\n\n\n\ncluster_DatabasesModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_JobsModule\n\n\n\ncluster_JobsModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_PermissionsModule\n\n\n\ncluster_PermissionsModule_providers\n\n\n\ncluster_ResumesModule\n\n\n\ncluster_ResumesModule_providers\n\n\n\ncluster_RolesModule\n\n\n\ncluster_RolesModule_exports\n\n\n\ncluster_RolesModule_providers\n\n\n\ncluster_SubscribersModule\n\n\n\ncluster_SubscribersModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCompaniesModule\n\nCompaniesModule\n\nAppModule -->\n\nCompaniesModule->AppModule\n\n\n\n\n\nDatabasesModule\n\nDatabasesModule\n\nAppModule -->\n\nDatabasesModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nJobsModule\n\nJobsModule\n\nAppModule -->\n\nJobsModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nPermissionsModule\n\nPermissionsModule\n\nAppModule -->\n\nPermissionsModule->AppModule\n\n\n\n\n\nResumesModule\n\nResumesModule\n\nAppModule -->\n\nResumesModule->AppModule\n\n\n\n\n\nRolesModule\n\nRolesModule\n\nAuthModule -->\n\nRolesModule->AuthModule\n\n\n\nAppModule -->\n\nRolesModule->AppModule\n\n\n\n\n\nRolesModule \n\nRolesModule \n\nRolesModule  -->\n\nRolesModule->RolesModule \n\n\n\n\n\nRolesService \n\nRolesService \n\nRolesService  -->\n\nRolesModule->RolesService \n\n\n\n\n\nSubscribersModule\n\nSubscribersModule\n\nAppModule -->\n\nSubscribersModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAuthModule -->\n\nUsersService->AuthModule\n\n\n\nDatabasesModule -->\n\nUsersService->DatabasesModule\n\n\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nCompaniesService\n\nCompaniesService\n\nCompaniesModule -->\n\nCompaniesService->CompaniesModule\n\n\n\n\n\nDatabasesService\n\nDatabasesService\n\nDatabasesModule -->\n\nDatabasesService->DatabasesModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nJobsService\n\nJobsService\n\nJobsModule -->\n\nJobsService->JobsModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nPermissionsService\n\nPermissionsService\n\nPermissionsModule -->\n\nPermissionsService->PermissionsModule\n\n\n\n\n\nResumesService\n\nResumesService\n\nResumesModule -->\n\nResumesService->ResumesModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nRolesModule -->\n\nRolesService->RolesModule\n\n\n\n\n\nSubscribersService\n\nSubscribersService\n\nSubscribersModule -->\n\nSubscribersService->SubscribersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    31 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompanyDocument   (src/.../company.schema.ts)\n                        \n                        \n                            JobDocument   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionDocument   (src/.../permission.schema.ts)\n                        \n                        \n                            ResumeDocument   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleDocument   (src/.../role.schema.ts)\n                        \n                        \n                            SubscriberDocument   (src/.../subscriber.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/companies/schema/company.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CompanyDocument\n                \n            \n            \n                \n                        HydratedDocument\n\n                \n            \n        \n    \n    src/jobs/schema/job.schema.ts\n    \n    \n        \n            \n                \n                    \n                    JobDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/permissions/schema/permission.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PermissionDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/resumes/schema/resume.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ResumeDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/roles/schema/role.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RoleDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/subscribers/schema/subscriber.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SubscriberDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n    src/users/schema/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            ADMIN_ROLE   (src/.../sample.ts)\n                        \n                        \n                            CompanySchema   (src/.../company.schema.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../customize.ts)\n                        \n                        \n                            IS_PUBLIC_PERMISSION   (src/.../customize.ts)\n                        \n                        \n                            JobSchema   (src/.../job.schema.ts)\n                        \n                        \n                            PermissionSchema   (src/.../permission.schema.ts)\n                        \n                        \n                            Public   (src/.../customize.ts)\n                        \n                        \n                            RESPONSE_MESSAGE   (src/.../customize.ts)\n                        \n                        \n                            ResponseMessage   (src/.../customize.ts)\n                        \n                        \n                            ResumeSchema   (src/.../resume.schema.ts)\n                        \n                        \n                            RoleSchema   (src/.../role.schema.ts)\n                        \n                        \n                            SkipCheckPermission   (src/.../customize.ts)\n                        \n                        \n                            SubscriberSchema   (src/.../subscriber.schema.ts)\n                        \n                        \n                            User   (src/.../customize.ts)\n                        \n                        \n                            USER_PERMISSIONS   (src/.../sample.ts)\n                        \n                        \n                            USER_ROLE   (src/.../sample.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/databases/sample.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ab415f4328bd3153ee211',\n    name: 'Get Company with paginate',\n    apiPath: '/api/v1/companies',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n  },\n  {\n    _id: '648ab415f4328bd3153ee212',\n    name: 'Get Account',\n    apiPath: '/api/v1/auth/account',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n  },\n  {\n    _id: '648ab415f4328bd3153ee214',\n    name: 'Logout Account',\n    apiPath: '/api/v1/auth/logout',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:47:49.369Z',\n    updatedAt: '2023-06-15T06:54:05.131Z',\n    __v: 0,\n    updatedBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n  },\n  {\n    _id: '648ab436f4328bd3153ee216',\n    name: 'Create Company',\n    apiPath: '/api/v1/companies',\n    method: 'POST',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:48:22.224Z',\n    updatedAt: '2023-06-15T06:48:22.224Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4d5f4328bd3153ee21b',\n    name: 'Update Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'PATCH',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:01.241Z',\n    updatedAt: '2023-06-15T06:51:01.241Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab4ebf4328bd3153ee220',\n    name: 'Delete Company',\n    apiPath: '/api/v1/companies/:id',\n    method: 'DELETE',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:51:23.973Z',\n    updatedAt: '2023-06-15T06:51:23.973Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab5a8072f2a2ef910638d',\n    name: 'Get Company by id',\n    apiPath: '/api/v1/companies/:id',\n    method: 'GET',\n    module: 'COMPANIES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:54:32.799Z',\n    updatedAt: '2023-06-15T06:54:32.799Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6d3fa16b294212e4033',\n    name: 'Create User',\n    apiPath: '/api/v1/users',\n    method: 'POST',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:31.898Z',\n    updatedAt: '2023-06-15T06:59:31.898Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6e7fa16b294212e4038',\n    name: 'Get User by Id',\n    apiPath: '/api/v1/users/:id',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T06:59:51.041Z',\n    updatedAt: '2023-06-15T06:59:51.041Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab6fdfa16b294212e403d',\n    name: 'Get User with paginate',\n    apiPath: '/api/v1/users',\n    method: 'GET',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:13.364Z',\n    updatedAt: '2023-06-15T07:00:13.364Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab719fa16b294212e4042',\n    name: 'Update User',\n    apiPath: '/api/v1/users/:id',\n    method: 'PATCH',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:41.934Z',\n    updatedAt: '2023-06-15T07:00:41.934Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab728fa16b294212e4047',\n    name: 'Delete User',\n    apiPath: '/api/v1/users/:id',\n    method: 'DELETE',\n    module: 'USERS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:00:56.274Z',\n    updatedAt: '2023-06-15T07:00:56.274Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad488dafdb9754f40b846',\n    name: 'Create a Job',\n    apiPath: '/api/v1/jobs',\n    method: 'POST',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:16.508Z',\n    updatedAt: '2023-06-15T09:06:16.508Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad499dafdb9754f40b84b',\n    name: 'Get a job by id',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:33.697Z',\n    updatedAt: '2023-06-15T09:06:33.697Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4a6dafdb9754f40b850',\n    name: 'Update a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'PATCH',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:06:46.085Z',\n    updatedAt: '2023-06-15T09:06:46.085Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4ccdafdb9754f40b859',\n    name: 'Get Job with paginate',\n    apiPath: '/api/v1/jobs',\n    method: 'GET',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:24.175Z',\n    updatedAt: '2023-06-15T09:07:24.175Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4d9dafdb9754f40b85e',\n    name: 'Delete a Job',\n    apiPath: '/api/v1/jobs/:id',\n    method: 'DELETE',\n    module: 'JOBS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:07:37.896Z',\n    updatedAt: '2023-06-15T09:07:37.896Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad59adafdb9754f40b881',\n    name: 'Create a permission',\n    apiPath: '/api/v1/permissions',\n    method: 'POST',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:50.946Z',\n    updatedAt: '2023-06-15T09:10:50.946Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5aedafdb9754f40b886',\n    name: 'Fetch Permission with paginate',\n    apiPath: '/api/v1/permissions',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:10.914Z',\n    updatedAt: '2023-06-15T09:11:10.914Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5c5dafdb9754f40b88b',\n    name: 'Fetch permission by id',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'GET',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:33.234Z',\n    updatedAt: '2023-06-15T09:11:33.234Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5d4dafdb9754f40b890',\n    name: 'Update a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'PATCH',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:11:48.081Z',\n    updatedAt: '2023-06-15T09:11:48.081Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad5ebdafdb9754f40b895',\n    name: 'Delete a permission',\n    apiPath: '/api/v1/permissions/:id',\n    method: 'DELETE',\n    module: 'PERMISSIONS',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:11.323Z',\n    updatedAt: '2023-06-15T09:12:11.323Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad613dafdb9754f40b89a',\n    name: 'Create Role',\n    apiPath: '/api/v1/roles',\n    method: 'POST',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:12:51.974Z',\n    updatedAt: '2023-06-15T09:12:51.974Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad622dafdb9754f40b89f',\n    name: 'Fetch roles with paginate',\n    apiPath: '/api/v1/roles',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:06.618Z',\n    updatedAt: '2023-06-15T09:13:06.618Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad630dafdb9754f40b8a6',\n    name: 'Fetch role by id',\n    apiPath: '/api/v1/roles/:id',\n    method: 'GET',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:20.853Z',\n    updatedAt: '2023-06-15T09:13:20.853Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad640dafdb9754f40b8ab',\n    name: 'Update Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'PATCH',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:36.836Z',\n    updatedAt: '2023-06-15T09:13:36.836Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad650dafdb9754f40b8b0',\n    name: 'Delete a Role',\n    apiPath: '/api/v1/roles/:id',\n    method: 'DELETE',\n    module: 'ROLES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:13:52.798Z',\n    updatedAt: '2023-06-15T09:13:52.798Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ADMIN_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SUPER_ADMIN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_PERMISSIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    _id: '648ad4fedafdb9754f40b863',\n    name: 'Create a Resume',\n    apiPath: '/api/v1/resumes',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:14.659Z',\n    updatedAt: '2023-06-15T09:08:14.659Z',\n    __v: 0,\n  },\n  {\n    _id: '648ab750fa16b294212e404c',\n    name: 'Upload Single File',\n    apiPath: '/api/v1/files/upload',\n    method: 'POST',\n    module: 'FILES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T07:01:36.923Z',\n    updatedAt: '2023-06-15T07:01:36.923Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad511dafdb9754f40b868',\n    name: 'Fetch resume with paginate',\n    apiPath: '/api/v1/resumes',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:33.395Z',\n    updatedAt: '2023-06-15T09:08:33.395Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad522dafdb9754f40b86d',\n    name: 'Get resume by id',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'GET',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:08:50.801Z',\n    updatedAt: '2023-06-15T09:08:50.801Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad53bdafdb9754f40b872',\n    name: 'Delete a resume',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'DELETE',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:15.785Z',\n    updatedAt: '2023-06-15T09:09:15.785Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad555dafdb9754f40b877',\n    name: 'Update resume status',\n    apiPath: '/api/v1/resumes/:id',\n    method: 'PATCH',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:09:41.694Z',\n    updatedAt: '2023-06-15T09:09:41.694Z',\n    __v: 0,\n  },\n  {\n    _id: '648ad56ddafdb9754f40b87c',\n    name: 'Fetch resumes by user',\n    apiPath: '/api/v1/resumes/by-user',\n    method: 'POST',\n    module: 'RESUMES',\n    createdBy: {\n      _id: '647b5108a8a243e8191855b5',\n      email: 'tienphuc@gmail.com',\n    },\n    isDeleted: false,\n    deletedAt: null,\n    createdAt: '2023-06-15T09:10:05.961Z',\n    updatedAt: '2023-06-15T09:10:05.961Z',\n    __v: 0,\n  },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_ROLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'NORMAL_USER'\n                    \n                \n\n\n        \n    \n\n    src/companies/schema/company.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CompanySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Company)\n                    \n                \n\n\n        \n    \n\n    src/decorator/customize.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_PERMISSION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublicPermission'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESPONSE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'response_message'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ResponseMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (message: string) =>\n  SetMetadata(RESPONSE_MESSAGE, message)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SkipCheckPermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () =>\n  SetMetadata(IS_PUBLIC_PERMISSION, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        User\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: unknown, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    return request.user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/jobs/schema/job.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        JobSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Job)\n                    \n                \n\n\n        \n    \n\n    src/permissions/schema/permission.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PermissionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Permission)\n                    \n                \n\n\n        \n    \n\n    src/resumes/schema/resume.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResumeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Resume)\n                    \n                \n\n\n        \n    \n\n    src/roles/schema/role.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RoleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Role)\n                    \n                \n\n\n        \n    \n\n    src/subscribers/schema/subscriber.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SubscriberSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Subscriber)\n                    \n                \n\n\n        \n    \n\n    src/users/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
